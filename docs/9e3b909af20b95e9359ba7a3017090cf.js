// modules are defined as an array
// [ module function, map of requires ]
//
// map of requires is short require name -> numeric require
//
// anything defined in a previous bundle is accessed via the
// orig method which is the require for previous bundles

require = (function (modules, cache, entry) {
  // Save the require from previous bundle to this closure if any
  var previousRequire = typeof require === "function" && require;

  function newRequire(name, jumped) {
    if (!cache[name]) {
      if (!modules[name]) {
        // if we cannot find the module within our internal map or
        // cache jump to the current global require ie. the last bundle
        // that was added to the page.
        var currentRequire = typeof require === "function" && require;
        if (!jumped && currentRequire) {
          return currentRequire(name, true);
        }

        // If there are other bundles on this page the require from the
        // previous one is saved to 'previousRequire'. Repeat this as
        // many times as there are bundles until the module is found or
        // we exhaust the require chain.
        if (previousRequire) {
          return previousRequire(name, true);
        }

        var err = new Error('Cannot find module \'' + name + '\'');
        err.code = 'MODULE_NOT_FOUND';
        throw err;
      }

      function localRequire(x) {
        return newRequire(localRequire.resolve(x));
      }

      localRequire.resolve = function (x) {
        return modules[name][1][x] || x;
      };

      var module = cache[name] = new newRequire.Module;
      modules[name][0].call(module.exports, localRequire, module, module.exports);
    }

    return cache[name].exports;
  }

  function Module() {
    this.bundle = newRequire;
    this.exports = {};
  }

  newRequire.Module = Module;
  newRequire.modules = modules;
  newRequire.cache = cache;
  newRequire.parent = previousRequire;

  for (var i = 0; i < entry.length; i++) {
    newRequire(entry[i]);
  }

  // Override the current require with this new one
  return newRequire;
})({5:[function(require,module,exports) {

},{}],10:[function(require,module,exports) {
"use strict";function e(){throw new Error("Expect failed")}exports.__esModule=!0,exports.expect=e;
},{}],11:[function(require,module,exports) {
var global = (1,eval)("this");
var t=(0,eval)("this");!function(t,e){"object"==typeof exports&&"undefined"!=typeof module?e(exports):"function"==typeof define&&define.amd?define(["exports"],e):e(t.THREE={})}(this,function(t){"use strict";function e(){}function i(t,e){this.x=t||0,this.y=e||0}function n(){this.elements=[1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1],arguments.length}function r(t,e,i,n){this._x=t||0,this._y=e||0,this._z=i||0,this._w=void 0!==n?n:1}function a(t,e,i){this.x=t||0,this.y=e||0,this.z=i||0}function o(){this.elements=[1,0,0,0,1,0,0,0,1],arguments.length}function s(t,e,n,r,a,h,c,l,u,p){Object.defineProperty(this,"id",{value:Co++}),this.uuid=Po.generateUUID(),this.name="",this.image=void 0!==t?t:s.DEFAULT_IMAGE,this.mipmaps=[],this.mapping=void 0!==e?e:s.DEFAULT_MAPPING,this.wrapS=void 0!==n?n:Ia,this.wrapT=void 0!==r?r:Ia,this.magFilter=void 0!==a?a:Ua,this.minFilter=void 0!==h?h:za,this.anisotropy=void 0!==u?u:1,this.format=void 0!==c?c:$a,this.type=void 0!==l?l:Ba,this.offset=new i(0,0),this.repeat=new i(1,1),this.center=new i(0,0),this.rotation=0,this.matrixAutoUpdate=!0,this.matrix=new o,this.generateMipmaps=!0,this.premultiplyAlpha=!1,this.flipY=!0,this.unpackAlignment=4,this.encoding=void 0!==p?p:_o,this.version=0,this.onUpdate=null}function h(t,e,i,n){this.x=t||0,this.y=e||0,this.z=i||0,this.w=void 0!==n?n:1}function c(t,e,i){this.uuid=Po.generateUUID(),this.width=t,this.height=e,this.scissor=new h(0,0,t,e),this.scissorTest=!1,this.viewport=new h(0,0,t,e),void 0===(i=i||{}).minFilter&&(i.minFilter=Ua),this.texture=new s(void 0,void 0,i.wrapS,i.wrapT,i.magFilter,i.minFilter,i.format,i.type,i.anisotropy,i.encoding),this.depthBuffer=void 0===i.depthBuffer||i.depthBuffer,this.stencilBuffer=void 0===i.stencilBuffer||i.stencilBuffer,this.depthTexture=void 0!==i.depthTexture?i.depthTexture:null}function l(t,e,i){c.call(this,t,e,i),this.activeCubeFace=0,this.activeMipMapLevel=0}function u(t,e,i,n,r,a,o,h,c,l,u,p){s.call(this,null,a,o,h,c,l,n,r,u,p),this.image={data:t,width:e,height:i},this.magFilter=void 0!==c?c:Na,this.minFilter=void 0!==l?l:Na,this.generateMipmaps=!1,this.flipY=!1,this.unpackAlignment=1}function p(t,e,i,n,r,a,o,h,c,l){s.call(this,t=void 0!==t?t:[],e=void 0!==e?e:wa,i,n,r,a,o,h,c,l),this.flipY=!1}function d(){this.seq=[],this.map={}}function f(t,e,i){var n=t[0];if(n<=0||n>0)return t;var r=e*i,a=No[r];if(void 0===a&&(a=new Float32Array(r),No[r]=a),0!==e){n.toArray(a,0);for(var o=1,s=0;o!==e;++o)s+=i,t[o].toArray(a,s)}return a}function m(t,e){var i=Oo[e];void 0===i&&(i=new Int32Array(e),Oo[e]=i);for(var n=0;n!==e;++n)i[n]=t.allocTextureUnit();return i}function v(t,e){t.uniform1f(this.addr,e)}function g(t,e){t.uniform1i(this.addr,e)}function y(t,e){void 0===e.x?t.uniform2fv(this.addr,e):t.uniform2f(this.addr,e.x,e.y)}function x(t,e){void 0!==e.x?t.uniform3f(this.addr,e.x,e.y,e.z):void 0!==e.r?t.uniform3f(this.addr,e.r,e.g,e.b):t.uniform3fv(this.addr,e)}function _(t,e){void 0===e.x?t.uniform4fv(this.addr,e):t.uniform4f(this.addr,e.x,e.y,e.z,e.w)}function b(t,e){t.uniformMatrix2fv(this.addr,!1,e.elements||e)}function M(t,e){void 0===e.elements?t.uniformMatrix3fv(this.addr,!1,e):(Uo.set(e.elements),t.uniformMatrix3fv(this.addr,!1,Uo))}function w(t,e){void 0===e.elements?t.uniformMatrix4fv(this.addr,!1,e):(Do.set(e.elements),t.uniformMatrix4fv(this.addr,!1,Do))}function S(t,e,i){var n=i.allocTextureUnit();t.uniform1i(this.addr,n),i.setTexture2D(e||Io,n)}function T(t,e,i){var n=i.allocTextureUnit();t.uniform1i(this.addr,n),i.setTextureCube(e||Ro,n)}function A(t,e){t.uniform2iv(this.addr,e)}function E(t,e){t.uniform3iv(this.addr,e)}function L(t,e){t.uniform4iv(this.addr,e)}function P(t,e){t.uniform1fv(this.addr,e)}function C(t,e){t.uniform1iv(this.addr,e)}function I(t,e){t.uniform2fv(this.addr,f(e,this.size,2))}function R(t,e){t.uniform3fv(this.addr,f(e,this.size,3))}function N(t,e){t.uniform4fv(this.addr,f(e,this.size,4))}function O(t,e){t.uniformMatrix2fv(this.addr,!1,f(e,this.size,4))}function D(t,e){t.uniformMatrix3fv(this.addr,!1,f(e,this.size,9))}function U(t,e){t.uniformMatrix4fv(this.addr,!1,f(e,this.size,16))}function F(t,e,i){var n=e.length,r=m(i,n);t.uniform1iv(this.addr,r);for(var a=0;a!==n;++a)i.setTexture2D(e[a]||Io,r[a])}function z(t,e,i){var n=e.length,r=m(i,n);t.uniform1iv(this.addr,r);for(var a=0;a!==n;++a)i.setTextureCube(e[a]||Ro,r[a])}function B(t,e,i){this.id=t,this.addr=i,this.setValue=function(t){switch(t){case 5126:return v;case 35664:return y;case 35665:return x;case 35666:return _;case 35674:return b;case 35675:return M;case 35676:return w;case 35678:case 36198:return S;case 35680:return T;case 5124:case 35670:return g;case 35667:case 35671:return A;case 35668:case 35672:return E;case 35669:case 35673:return L}}(e.type)}function G(t,e,i){this.id=t,this.addr=i,this.size=e.size,this.setValue=function(t){switch(t){case 5126:return P;case 35664:return I;case 35665:return R;case 35666:return N;case 35674:return O;case 35675:return D;case 35676:return U;case 35678:return F;case 35680:return z;case 5124:case 35670:return C;case 35667:case 35671:return A;case 35668:case 35672:return E;case 35669:case 35673:return L}}(e.type)}function V(t){this.id=t,d.call(this)}function k(t,e){t.seq.push(e),t.map[e.id]=e}function j(t,e,i){var n=t.name,r=n.length;for(Fo.lastIndex=0;;){var a=Fo.exec(n),o=Fo.lastIndex,s=a[1],h="]"===a[2],c=a[3];if(h&&(s|=0),void 0===c||"["===c&&o+2===r){k(i,void 0===c?new B(s,t,e):new G(s,t,e));break}var l=i.map[s];void 0===l&&k(i,l=new V(s)),i=l}}function W(t,e,i){d.call(this),this.renderer=i;for(var n=t.getProgramParameter(e,t.ACTIVE_UNIFORMS),r=0;r<n;++r){var a=t.getActiveUniform(e,r),o=a.name;j(a,t.getUniformLocation(e,o),this)}}function H(t,e,i){return void 0===e&&void 0===i?this.set(t):this.setRGB(t,e,i)}function X(t,e){this.min=void 0!==t?t:new i(1/0,1/0),this.max=void 0!==e?e:new i(-1/0,-1/0)}function q(t,e,n,r,o){function s(){var t=new Float32Array([-1,-1,0,0,1,-1,1,0,1,1,1,1,-1,1,0,1]),i=new Uint16Array([0,1,2,0,2,3]);h=e.createBuffer(),c=e.createBuffer(),e.bindBuffer(e.ARRAY_BUFFER,h),e.bufferData(e.ARRAY_BUFFER,t,e.STATIC_DRAW),e.bindBuffer(e.ELEMENT_ARRAY_BUFFER,c),e.bufferData(e.ELEMENT_ARRAY_BUFFER,i,e.STATIC_DRAW),f=e.createTexture(),m=e.createTexture(),n.bindTexture(e.TEXTURE_2D,f),e.texImage2D(e.TEXTURE_2D,0,e.RGB,16,16,0,e.RGB,e.UNSIGNED_BYTE,null),e.texParameteri(e.TEXTURE_2D,e.TEXTURE_WRAP_S,e.CLAMP_TO_EDGE),e.texParameteri(e.TEXTURE_2D,e.TEXTURE_WRAP_T,e.CLAMP_TO_EDGE),e.texParameteri(e.TEXTURE_2D,e.TEXTURE_MAG_FILTER,e.NEAREST),e.texParameteri(e.TEXTURE_2D,e.TEXTURE_MIN_FILTER,e.NEAREST),n.bindTexture(e.TEXTURE_2D,m),e.texImage2D(e.TEXTURE_2D,0,e.RGBA,16,16,0,e.RGBA,e.UNSIGNED_BYTE,null),e.texParameteri(e.TEXTURE_2D,e.TEXTURE_WRAP_S,e.CLAMP_TO_EDGE),e.texParameteri(e.TEXTURE_2D,e.TEXTURE_WRAP_T,e.CLAMP_TO_EDGE),e.texParameteri(e.TEXTURE_2D,e.TEXTURE_MAG_FILTER,e.NEAREST),e.texParameteri(e.TEXTURE_2D,e.TEXTURE_MIN_FILTER,e.NEAREST),l={vertexShader:["uniform lowp int renderType;","uniform vec3 screenPosition;","uniform vec2 scale;","uniform float rotation;","uniform sampler2D occlusionMap;","attribute vec2 position;","attribute vec2 uv;","varying vec2 vUV;","varying float vVisibility;","void main() {","\tvUV = uv;","\tvec2 pos = position;","\tif ( renderType == 2 ) {","\t\tvec4 visibility = texture2D( occlusionMap, vec2( 0.1, 0.1 ) );","\t\tvisibility += texture2D( occlusionMap, vec2( 0.5, 0.1 ) );","\t\tvisibility += texture2D( occlusionMap, vec2( 0.9, 0.1 ) );","\t\tvisibility += texture2D( occlusionMap, vec2( 0.9, 0.5 ) );","\t\tvisibility += texture2D( occlusionMap, vec2( 0.9, 0.9 ) );","\t\tvisibility += texture2D( occlusionMap, vec2( 0.5, 0.9 ) );","\t\tvisibility += texture2D( occlusionMap, vec2( 0.1, 0.9 ) );","\t\tvisibility += texture2D( occlusionMap, vec2( 0.1, 0.5 ) );","\t\tvisibility += texture2D( occlusionMap, vec2( 0.5, 0.5 ) );","\t\tvVisibility =        visibility.r / 9.0;","\t\tvVisibility *= 1.0 - visibility.g / 9.0;","\t\tvVisibility *=       visibility.b / 9.0;","\t\tvVisibility *= 1.0 - visibility.a / 9.0;","\t\tpos.x = cos( rotation ) * position.x - sin( rotation ) * position.y;","\t\tpos.y = sin( rotation ) * position.x + cos( rotation ) * position.y;","\t}","\tgl_Position = vec4( ( pos * scale + screenPosition.xy ).xy, screenPosition.z, 1.0 );","}"].join("\n"),fragmentShader:["uniform lowp int renderType;","uniform sampler2D map;","uniform float opacity;","uniform vec3 color;","varying vec2 vUV;","varying float vVisibility;","void main() {","\tif ( renderType == 0 ) {","\t\tgl_FragColor = vec4( 1.0, 0.0, 1.0, 0.0 );","\t} else if ( renderType == 1 ) {","\t\tgl_FragColor = texture2D( map, vUV );","\t} else {","\t\tvec4 texture = texture2D( map, vUV );","\t\ttexture.a *= opacity * vVisibility;","\t\tgl_FragColor = texture;","\t\tgl_FragColor.rgb *= color;","\t}","}"].join("\n")},u=function(t){var i=e.createProgram(),n=e.createShader(e.FRAGMENT_SHADER),r=e.createShader(e.VERTEX_SHADER),a="precision "+o.precision+" float;\n";return e.shaderSource(n,a+t.fragmentShader),e.shaderSource(r,a+t.vertexShader),e.compileShader(n),e.compileShader(r),e.attachShader(i,n),e.attachShader(i,r),e.linkProgram(i),i}(l),p={vertex:e.getAttribLocation(u,"position"),uv:e.getAttribLocation(u,"uv")},d={renderType:e.getUniformLocation(u,"renderType"),map:e.getUniformLocation(u,"map"),occlusionMap:e.getUniformLocation(u,"occlusionMap"),opacity:e.getUniformLocation(u,"opacity"),color:e.getUniformLocation(u,"color"),scale:e.getUniformLocation(u,"scale"),rotation:e.getUniformLocation(u,"rotation"),screenPosition:e.getUniformLocation(u,"screenPosition")}}var h,c,l,u,p,d,f,m;this.render=function(t,o,l,v){if(0!==t.length){var g=new a,y=v.w/v.z,x=.5*v.z,_=.5*v.w,b=16/v.w,M=new i(b*y,b),w=new a(1,1,0),S=new i(1,1),T=new X;T.min.set(v.x,v.y),T.max.set(v.x+(v.z-16),v.y+(v.w-16)),void 0===u&&s(),n.useProgram(u),n.initAttributes(),n.enableAttribute(p.vertex),n.enableAttribute(p.uv),n.disableUnusedAttributes(),e.uniform1i(d.occlusionMap,0),e.uniform1i(d.map,1),e.bindBuffer(e.ARRAY_BUFFER,h),e.vertexAttribPointer(p.vertex,2,e.FLOAT,!1,16,0),e.vertexAttribPointer(p.uv,2,e.FLOAT,!1,16,8),e.bindBuffer(e.ELEMENT_ARRAY_BUFFER,c),n.disable(e.CULL_FACE),n.buffers.depth.setMask(!1);for(var A=0,E=t.length;A<E;A++){b=16/v.w,M.set(b*y,b);var L=t[A];if(g.set(L.matrixWorld.elements[12],L.matrixWorld.elements[13],L.matrixWorld.elements[14]),g.applyMatrix4(l.matrixWorldInverse),g.applyMatrix4(l.projectionMatrix),w.copy(g),S.x=v.x+w.x*x+x-8,S.y=v.y+w.y*_+_-8,!0===T.containsPoint(S)){n.activeTexture(e.TEXTURE0),n.bindTexture(e.TEXTURE_2D,null),n.activeTexture(e.TEXTURE1),n.bindTexture(e.TEXTURE_2D,f),e.copyTexImage2D(e.TEXTURE_2D,0,e.RGB,S.x,S.y,16,16,0),e.uniform1i(d.renderType,0),e.uniform2f(d.scale,M.x,M.y),e.uniform3f(d.screenPosition,w.x,w.y,w.z),n.disable(e.BLEND),n.enable(e.DEPTH_TEST),e.drawElements(e.TRIANGLES,6,e.UNSIGNED_SHORT,0),n.activeTexture(e.TEXTURE0),n.bindTexture(e.TEXTURE_2D,m),e.copyTexImage2D(e.TEXTURE_2D,0,e.RGBA,S.x,S.y,16,16,0),e.uniform1i(d.renderType,1),n.disable(e.DEPTH_TEST),n.activeTexture(e.TEXTURE1),n.bindTexture(e.TEXTURE_2D,f),e.drawElements(e.TRIANGLES,6,e.UNSIGNED_SHORT,0),L.positionScreen.copy(w),L.customUpdateCallback?L.customUpdateCallback(L):L.updateLensFlares(),e.uniform1i(d.renderType,2),n.enable(e.BLEND);for(var P=0,C=L.lensFlares.length;P<C;P++){var I=L.lensFlares[P];I.opacity>.001&&I.scale>.001&&(w.x=I.x,w.y=I.y,w.z=I.z,b=I.size*I.scale/v.w,M.x=b*y,M.y=b,e.uniform3f(d.screenPosition,w.x,w.y,w.z),e.uniform2f(d.scale,M.x,M.y),e.uniform1f(d.rotation,I.rotation),e.uniform1f(d.opacity,I.opacity),e.uniform3f(d.color,I.color.r,I.color.g,I.color.b),n.setBlending(I.blending,I.blendEquation,I.blendSrc,I.blendDst),r.setTexture2D(I.texture,1),e.drawElements(e.TRIANGLES,6,e.UNSIGNED_SHORT,0))}}}n.enable(e.CULL_FACE),n.enable(e.DEPTH_TEST),n.buffers.depth.setMask(!0),n.reset()}}}function Y(t,e,i,n,r,a,o,h,c){s.call(this,t,e,i,n,r,a,o,h,c),this.needsUpdate=!0}function Z(t,e,i,n,o){function s(){var t=new Float32Array([-.5,-.5,0,0,.5,-.5,1,0,.5,.5,1,1,-.5,.5,0,1]),i=new Uint16Array([0,1,2,0,2,3]);c=e.createBuffer(),l=e.createBuffer(),e.bindBuffer(e.ARRAY_BUFFER,c),e.bufferData(e.ARRAY_BUFFER,t,e.STATIC_DRAW),e.bindBuffer(e.ELEMENT_ARRAY_BUFFER,l),e.bufferData(e.ELEMENT_ARRAY_BUFFER,i,e.STATIC_DRAW),u=function(){var t=e.createProgram(),i=e.createShader(e.VERTEX_SHADER),n=e.createShader(e.FRAGMENT_SHADER);return e.shaderSource(i,["precision "+o.precision+" float;","#define SHADER_NAME SpriteMaterial","uniform mat4 modelViewMatrix;","uniform mat4 projectionMatrix;","uniform float rotation;","uniform vec2 scale;","uniform vec2 uvOffset;","uniform vec2 uvScale;","attribute vec2 position;","attribute vec2 uv;","varying vec2 vUV;","varying float fogDepth;","void main() {","\tvUV = uvOffset + uv * uvScale;","\tvec2 alignedPosition = position * scale;","\tvec2 rotatedPosition;","\trotatedPosition.x = cos( rotation ) * alignedPosition.x - sin( rotation ) * alignedPosition.y;","\trotatedPosition.y = sin( rotation ) * alignedPosition.x + cos( rotation ) * alignedPosition.y;","\tvec4 mvPosition;","\tmvPosition = modelViewMatrix * vec4( 0.0, 0.0, 0.0, 1.0 );","\tmvPosition.xy += rotatedPosition;","\tgl_Position = projectionMatrix * mvPosition;","\tfogDepth = - mvPosition.z;","}"].join("\n")),e.shaderSource(n,["precision "+o.precision+" float;","#define SHADER_NAME SpriteMaterial","uniform vec3 color;","uniform sampler2D map;","uniform float opacity;","uniform int fogType;","uniform vec3 fogColor;","uniform float fogDensity;","uniform float fogNear;","uniform float fogFar;","uniform float alphaTest;","varying vec2 vUV;","varying float fogDepth;","void main() {","\tvec4 texture = texture2D( map, vUV );","\tgl_FragColor = vec4( color * texture.xyz, texture.a * opacity );","\tif ( gl_FragColor.a < alphaTest ) discard;","\tif ( fogType > 0 ) {","\t\tfloat fogFactor = 0.0;","\t\tif ( fogType == 1 ) {","\t\t\tfogFactor = smoothstep( fogNear, fogFar, fogDepth );","\t\t} else {","\t\t\tconst float LOG2 = 1.442695;","\t\t\tfogFactor = exp2( - fogDensity * fogDensity * fogDepth * fogDepth * LOG2 );","\t\t\tfogFactor = 1.0 - clamp( fogFactor, 0.0, 1.0 );","\t\t}","\t\tgl_FragColor.rgb = mix( gl_FragColor.rgb, fogColor, fogFactor );","\t}","}"].join("\n")),e.compileShader(i),e.compileShader(n),e.attachShader(t,i),e.attachShader(t,n),e.linkProgram(t),t}(),p={position:e.getAttribLocation(u,"position"),uv:e.getAttribLocation(u,"uv")},d={uvOffset:e.getUniformLocation(u,"uvOffset"),uvScale:e.getUniformLocation(u,"uvScale"),rotation:e.getUniformLocation(u,"rotation"),scale:e.getUniformLocation(u,"scale"),color:e.getUniformLocation(u,"color"),map:e.getUniformLocation(u,"map"),opacity:e.getUniformLocation(u,"opacity"),modelViewMatrix:e.getUniformLocation(u,"modelViewMatrix"),projectionMatrix:e.getUniformLocation(u,"projectionMatrix"),fogType:e.getUniformLocation(u,"fogType"),fogDensity:e.getUniformLocation(u,"fogDensity"),fogNear:e.getUniformLocation(u,"fogNear"),fogFar:e.getUniformLocation(u,"fogFar"),fogColor:e.getUniformLocation(u,"fogColor"),fogDepth:e.getUniformLocation(u,"fogDepth"),alphaTest:e.getUniformLocation(u,"alphaTest")};var n=document.createElementNS("http://www.w3.org/1999/xhtml","canvas");n.width=8,n.height=8;var r=n.getContext("2d");r.fillStyle="white",r.fillRect(0,0,8,8),f=new Y(n)}function h(t,e){return t.renderOrder!==e.renderOrder?t.renderOrder-e.renderOrder:t.z!==e.z?e.z-t.z:e.id-t.id}var c,l,u,p,d,f,m=new a,v=new r,g=new a;this.render=function(r,a,o){if(0!==r.length){void 0===u&&s(),i.useProgram(u),i.initAttributes(),i.enableAttribute(p.position),i.enableAttribute(p.uv),i.disableUnusedAttributes(),i.disable(e.CULL_FACE),i.enable(e.BLEND),e.bindBuffer(e.ARRAY_BUFFER,c),e.vertexAttribPointer(p.position,2,e.FLOAT,!1,16,0),e.vertexAttribPointer(p.uv,2,e.FLOAT,!1,16,8),e.bindBuffer(e.ELEMENT_ARRAY_BUFFER,l),e.uniformMatrix4fv(d.projectionMatrix,!1,o.projectionMatrix.elements),i.activeTexture(e.TEXTURE0),e.uniform1i(d.map,0);var y=0,x=0,_=a.fog;_?(e.uniform3f(d.fogColor,_.color.r,_.color.g,_.color.b),_.isFog?(e.uniform1f(d.fogNear,_.near),e.uniform1f(d.fogFar,_.far),e.uniform1i(d.fogType,1),y=1,x=1):_.isFogExp2&&(e.uniform1f(d.fogDensity,_.density),e.uniform1i(d.fogType,2),y=2,x=2)):(e.uniform1i(d.fogType,0),y=0,x=0);for(var b=0,M=r.length;b<M;b++){(S=r[b]).modelViewMatrix.multiplyMatrices(o.matrixWorldInverse,S.matrixWorld),S.z=-S.modelViewMatrix.elements[14]}r.sort(h);var w=[];for(b=0,M=r.length;b<M;b++){var S,T=(S=r[b]).material;if(!1!==T.visible){S.onBeforeRender(t,a,o,void 0,T,void 0),e.uniform1f(d.alphaTest,T.alphaTest),e.uniformMatrix4fv(d.modelViewMatrix,!1,S.modelViewMatrix.elements),S.matrixWorld.decompose(m,v,g),w[0]=g.x,w[1]=g.y;var A=0;a.fog&&T.fog&&(A=x),y!==A&&(e.uniform1i(d.fogType,A),y=A),null!==T.map?(e.uniform2f(d.uvOffset,T.map.offset.x,T.map.offset.y),e.uniform2f(d.uvScale,T.map.repeat.x,T.map.repeat.y)):(e.uniform2f(d.uvOffset,0,0),e.uniform2f(d.uvScale,1,1)),e.uniform1f(d.opacity,T.opacity),e.uniform3f(d.color,T.color.r,T.color.g,T.color.b),e.uniform1f(d.rotation,T.rotation),e.uniform2fv(d.scale,w),i.setBlending(T.blending,T.blendEquation,T.blendSrc,T.blendDst,T.blendEquationAlpha,T.blendSrcAlpha,T.blendDstAlpha,T.premultipliedAlpha),i.buffers.depth.setTest(T.depthTest),i.buffers.depth.setMask(T.depthWrite),i.buffers.color.setMask(T.colorWrite),n.setTexture2D(T.map||f,0),e.drawElements(e.TRIANGLES,6,e.UNSIGNED_SHORT,0),S.onAfterRender(t,a,o,void 0,T,void 0)}}i.enable(e.CULL_FACE),i.reset()}}}function J(){Object.defineProperty(this,"id",{value:jo++}),this.uuid=Po.generateUUID(),this.name="",this.type="Material",this.fog=!0,this.lights=!0,this.blending=Gr,this.side=Nr,this.flatShading=!1,this.vertexColors=Ur,this.opacity=1,this.transparent=!1,this.blendSrc=ta,this.blendDst=ea,this.blendEquation=Hr,this.blendSrcAlpha=null,this.blendDstAlpha=null,this.blendEquationAlpha=null,this.depthFunc=la,this.depthTest=!0,this.depthWrite=!0,this.clippingPlanes=null,this.clipIntersection=!1,this.clipShadows=!1,this.colorWrite=!0,this.precision=null,this.polygonOffset=!1,this.polygonOffsetFactor=0,this.polygonOffsetUnits=0,this.dithering=!1,this.alphaTest=0,this.premultipliedAlpha=!1,this.overdraw=0,this.visible=!0,this.userData={},this.needsUpdate=!0}function Q(t){J.call(this),this.type="MeshDepthMaterial",this.depthPacking=Eo,this.skinning=!1,this.morphTargets=!1,this.map=null,this.alphaMap=null,this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.wireframe=!1,this.wireframeLinewidth=1,this.fog=!1,this.lights=!1,this.setValues(t)}function K(t){J.call(this),this.type="MeshDistanceMaterial",this.referencePosition=new a,this.nearDistance=1,this.farDistance=1e3,this.skinning=!1,this.morphTargets=!1,this.map=null,this.alphaMap=null,this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.fog=!1,this.lights=!1,this.setValues(t)}function $(t,e){this.min=void 0!==t?t:new a(1/0,1/0,1/0),this.max=void 0!==e?e:new a(-1/0,-1/0,-1/0)}function tt(t,e){this.center=void 0!==t?t:new a,this.radius=void 0!==e?e:0}function et(t,e){this.normal=void 0!==t?t:new a(1,0,0),this.constant=void 0!==e?e:0}function it(t,e,i,n,r,a){this.planes=[void 0!==t?t:new et,void 0!==e?e:new et,void 0!==i?i:new et,void 0!==n?n:new et,void 0!==r?r:new et,void 0!==a?a:new et]}function nt(t,e,r){function o(e,i,n,r,a,o){var s=e.geometry,h=null,c=x,l=e.customDepthMaterial;if(n&&(c=_,l=e.customDistanceMaterial),l)h=l;else{var u=!1;i.morphTargets&&(s&&s.isBufferGeometry?u=s.morphAttributes&&s.morphAttributes.position&&s.morphAttributes.position.length>0:s&&s.isGeometry&&(u=s.morphTargets&&s.morphTargets.length>0)),e.isSkinnedMesh&&i.skinning;var p=e.isSkinnedMesh&&i.skinning,d=0;u&&(d|=v),p&&(d|=g),h=c[d]}if(t.localClippingEnabled&&!0===i.clipShadows&&0!==i.clippingPlanes.length){var f=h.uuid,m=i.uuid,y=b[f];void 0===y&&(y={},b[f]=y);var M=y[m];void 0===M&&(M=h.clone(),y[m]=M),h=M}h.visible=i.visible,h.wireframe=i.wireframe;var w=i.side;return C.renderSingleSided&&w==Dr&&(w=Nr),C.renderReverseSided&&(w===Nr?w=Or:w===Or&&(w=Nr)),h.side=w,h.clipShadows=i.clipShadows,h.clippingPlanes=i.clippingPlanes,h.clipIntersection=i.clipIntersection,h.wireframeLinewidth=i.wireframeLinewidth,h.linewidth=i.linewidth,n&&h.isMeshDistanceMaterial&&(h.referencePosition.copy(r),h.nearDistance=a,h.farDistance=o),h}function s(i,n,r,a){if(!1!==i.visible){if(i.layers.test(n.layers)&&(i.isMesh||i.isLine||i.isPoints)&&i.castShadow&&(!i.frustumCulled||l.intersectsObject(i))){i.modelViewMatrix.multiplyMatrices(r.matrixWorldInverse,i.matrixWorld);var h=e.update(i),c=i.material;if(Array.isArray(c))for(var u=h.groups,p=0,d=u.length;p<d;p++){var f=u[p],v=c[f.materialIndex];if(v&&v.visible){var g=o(i,v,a,m,r.near,r.far);t.renderBufferDirect(r,null,h,g,i,f)}}else if(c.visible){g=o(i,c,a,m,r.near,r.far);t.renderBufferDirect(r,null,h,g,i,null)}}for(var y=i.children,x=0,_=y.length;x<_;x++)s(y[x],n,r,a)}}for(var l=new it,u=new n,p=new i,d=new i(r,r),f=new a,m=new a,v=1,g=2,y=1+(v|g),x=new Array(y),_=new Array(y),b={},M=[new a(1,0,0),new a(-1,0,0),new a(0,0,1),new a(0,0,-1),new a(0,1,0),new a(0,-1,0)],w=[new a(0,1,0),new a(0,1,0),new a(0,1,0),new a(0,1,0),new a(0,0,1),new a(0,0,-1)],S=[new h,new h,new h,new h,new h,new h],T=0;T!==y;++T){var A=0!=(T&v),E=0!=(T&g),L=new Q({depthPacking:Lo,morphTargets:A,skinning:E});x[T]=L;var P=new K({morphTargets:A,skinning:E});_[T]=P}var C=this;this.enabled=!1,this.autoUpdate=!0,this.needsUpdate=!1,this.type=Ir,this.renderReverseSided=!0,this.renderSingleSided=!0,this.render=function(e,i,n){if(!1!==C.enabled&&(!1!==C.autoUpdate||!1!==C.needsUpdate)&&0!==e.length){var r=t.context,a=t.state;a.disable(r.BLEND),a.buffers.color.setClear(1,1,1,1),a.buffers.depth.setTest(!0),a.setScissorTest(!1);for(var o,h=0,v=e.length;h<v;h++){var g=e[h],y=g.shadow,x=g&&g.isPointLight;if(void 0!==y){var _=y.camera;if(p.copy(y.mapSize),p.min(d),x){var b=p.x,T=p.y;S[0].set(2*b,T,b,T),S[1].set(0,T,b,T),S[2].set(3*b,T,b,T),S[3].set(b,T,b,T),S[4].set(3*b,0,b,T),S[5].set(b,0,b,T),p.x*=4,p.y*=2}if(null===y.map){var A={minFilter:Na,magFilter:Na,format:$a};y.map=new c(p.x,p.y,A),y.map.texture.name=g.name+".shadowMap",_.updateProjectionMatrix()}y.isSpotLightShadow&&y.update(g);var E=y.map,L=y.matrix;m.setFromMatrixPosition(g.matrixWorld),_.position.copy(m),x?(o=6,L.makeTranslation(-m.x,-m.y,-m.z)):(o=1,f.setFromMatrixPosition(g.target.matrixWorld),_.lookAt(f),_.updateMatrixWorld(),L.set(.5,0,0,.5,0,.5,0,.5,0,0,.5,.5,0,0,0,1),L.multiply(_.projectionMatrix),L.multiply(_.matrixWorldInverse)),t.setRenderTarget(E),t.clear();for(var P=0;P<o;P++){if(x){f.copy(_.position),f.add(M[P]),_.up.copy(w[P]),_.lookAt(f),_.updateMatrixWorld();var I=S[P];a.viewport(I)}u.multiplyMatrices(_.projectionMatrix,_.matrixWorldInverse),l.setFromMatrix(u),s(i,n,_,x)}}}C.needsUpdate=!1}}}function rt(t){var e={};return{get:function(t){return t.isInterleavedBufferAttribute&&(t=t.data),e[t.uuid]},remove:function(i){i.isInterleavedBufferAttribute&&(i=i.data);var n=e[i.uuid];n&&(t.deleteBuffer(n.buffer),delete e[i.uuid])},update:function(i,n){i.isInterleavedBufferAttribute&&(i=i.data);var r=e[i.uuid];void 0===r?e[i.uuid]=function(e,i){var n=e.array,r=e.dynamic?t.DYNAMIC_DRAW:t.STATIC_DRAW,a=t.createBuffer();t.bindBuffer(i,a),t.bufferData(i,n,r),e.onUploadCallback();var o=t.FLOAT;return n instanceof Float32Array?o=t.FLOAT:n instanceof Float64Array||(n instanceof Uint16Array?o=t.UNSIGNED_SHORT:n instanceof Int16Array?o=t.SHORT:n instanceof Uint32Array?o=t.UNSIGNED_INT:n instanceof Int32Array?o=t.INT:n instanceof Int8Array?o=t.BYTE:n instanceof Uint8Array&&(o=t.UNSIGNED_BYTE)),{buffer:a,type:o,bytesPerElement:n.BYTES_PER_ELEMENT,version:e.version}}(i,n):r.version<i.version&&(function(e,i,n){var r=i.array,a=i.updateRange;t.bindBuffer(n,e),!1===i.dynamic?t.bufferData(n,r,t.STATIC_DRAW):-1===a.count?t.bufferSubData(n,0,r):0===a.count||(t.bufferSubData(n,a.offset*r.BYTES_PER_ELEMENT,r.subarray(a.offset,a.offset+a.count)),a.count=-1)}(r.buffer,i,n),r.version=i.version)}}}function at(t,e,i,n){this._x=t||0,this._y=e||0,this._z=i||0,this._order=n||at.DefaultOrder}function ot(){this.mask=1}function st(){Object.defineProperty(this,"id",{value:Wo++}),this.uuid=Po.generateUUID(),this.name="",this.type="Object3D",this.parent=null,this.children=[],this.up=st.DefaultUp.clone();var t=new a,e=new at,i=new r,s=new a(1,1,1);e.onChange(function(){i.setFromEuler(e,!1)}),i.onChange(function(){e.setFromQuaternion(i,void 0,!1)}),Object.defineProperties(this,{position:{enumerable:!0,value:t},rotation:{enumerable:!0,value:e},quaternion:{enumerable:!0,value:i},scale:{enumerable:!0,value:s},modelViewMatrix:{value:new n},normalMatrix:{value:new o}}),this.matrix=new n,this.matrixWorld=new n,this.matrixAutoUpdate=st.DefaultMatrixAutoUpdate,this.matrixWorldNeedsUpdate=!1,this.layers=new ot,this.visible=!0,this.castShadow=!1,this.receiveShadow=!1,this.frustumCulled=!0,this.renderOrder=0,this.userData={}}function ht(){st.call(this),this.type="Camera",this.matrixWorldInverse=new n,this.projectionMatrix=new n}function ct(t,e,i,n,r,a){ht.call(this),this.type="OrthographicCamera",this.zoom=1,this.view=null,this.left=t,this.right=e,this.top=i,this.bottom=n,this.near=void 0!==r?r:.1,this.far=void 0!==a?a:2e3,this.updateProjectionMatrix()}function lt(t,e,i,n,r,o){this.a=t,this.b=e,this.c=i,this.normal=n&&n.isVector3?n:new a,this.vertexNormals=Array.isArray(n)?n:[],this.color=r&&r.isColor?r:new H,this.vertexColors=Array.isArray(r)?r:[],this.materialIndex=void 0!==o?o:0}function ut(){Object.defineProperty(this,"id",{value:Ho+=2}),this.uuid=Po.generateUUID(),this.name="",this.type="Geometry",this.vertices=[],this.colors=[],this.faces=[],this.faceVertexUvs=[[]],this.morphTargets=[],this.morphNormals=[],this.skinWeights=[],this.skinIndices=[],this.lineDistances=[],this.boundingBox=null,this.boundingSphere=null,this.elementsNeedUpdate=!1,this.verticesNeedUpdate=!1,this.uvsNeedUpdate=!1,this.normalsNeedUpdate=!1,this.colorsNeedUpdate=!1,this.lineDistancesNeedUpdate=!1,this.groupsNeedUpdate=!1}function pt(t,e,i){if(Array.isArray(t))throw new TypeError("THREE.BufferAttribute: array should be a Typed Array.");this.uuid=Po.generateUUID(),this.name="",this.array=t,this.itemSize=e,this.count=void 0!==t?t.length/e:0,this.normalized=!0===i,this.dynamic=!1,this.updateRange={offset:0,count:-1},this.onUploadCallback=function(){},this.version=0}function dt(t,e,i){pt.call(this,new Int8Array(t),e,i)}function ft(t,e,i){pt.call(this,new Uint8Array(t),e,i)}function mt(t,e,i){pt.call(this,new Uint8ClampedArray(t),e,i)}function vt(t,e,i){pt.call(this,new Int16Array(t),e,i)}function gt(t,e,i){pt.call(this,new Uint16Array(t),e,i)}function yt(t,e,i){pt.call(this,new Int32Array(t),e,i)}function xt(t,e,i){pt.call(this,new Uint32Array(t),e,i)}function _t(t,e,i){pt.call(this,new Float32Array(t),e,i)}function bt(t,e,i){pt.call(this,new Float64Array(t),e,i)}function Mt(){this.indices=[],this.vertices=[],this.normals=[],this.colors=[],this.uvs=[],this.uvs2=[],this.groups=[],this.morphTargets={},this.skinWeights=[],this.skinIndices=[],this.boundingBox=null,this.boundingSphere=null,this.verticesNeedUpdate=!1,this.normalsNeedUpdate=!1,this.colorsNeedUpdate=!1,this.uvsNeedUpdate=!1,this.groupsNeedUpdate=!1}function wt(t){if(0===t.length)return-1/0;for(var e=t[0],i=1,n=t.length;i<n;++i)t[i]>e&&(e=t[i]);return e}function St(){Object.defineProperty(this,"id",{value:Xo+=2}),this.uuid=Po.generateUUID(),this.name="",this.type="BufferGeometry",this.index=null,this.attributes={},this.morphAttributes={},this.groups=[],this.boundingBox=null,this.boundingSphere=null,this.drawRange={start:0,count:1/0}}function Tt(t,e,i,n,r,a){ut.call(this),this.type="BoxGeometry",this.parameters={width:t,height:e,depth:i,widthSegments:n,heightSegments:r,depthSegments:a},this.fromBufferGeometry(new At(t,e,i,n,r,a)),this.mergeVertices()}function At(t,e,i,n,r,o){function s(t,e,i,n,r,o,s,m,v,g,y){var x,_,b=o/v,M=s/g,w=o/2,S=s/2,T=m/2,A=v+1,E=g+1,L=0,P=0,C=new a;for(_=0;_<E;_++){var I=_*M-S;for(x=0;x<A;x++){var R=x*b-w;C[t]=R*n,C[e]=I*r,C[i]=T,l.push(C.x,C.y,C.z),C[t]=0,C[e]=0,C[i]=m>0?1:-1,u.push(C.x,C.y,C.z),p.push(x/v),p.push(1-_/g),L+=1}}for(_=0;_<g;_++)for(x=0;x<v;x++){var N=d+x+A*_,O=d+x+A*(_+1),D=d+(x+1)+A*(_+1),U=d+(x+1)+A*_;c.push(N,O,U),c.push(O,D,U),P+=6}h.addGroup(f,P,y),f+=P,d+=L}St.call(this),this.type="BoxBufferGeometry",this.parameters={width:t,height:e,depth:i,widthSegments:n,heightSegments:r,depthSegments:o};var h=this;t=t||1,e=e||1,i=i||1,n=Math.floor(n)||1,r=Math.floor(r)||1;var c=[],l=[],u=[],p=[],d=0,f=0;s("z","y","x",-1,-1,i,e,t,o=Math.floor(o)||1,r,0),s("z","y","x",1,-1,i,e,-t,o,r,1),s("x","z","y",1,1,t,i,e,n,o,2),s("x","z","y",1,-1,t,i,-e,n,o,3),s("x","y","z",1,-1,t,e,i,n,r,4),s("x","y","z",-1,-1,t,e,-i,n,r,5),this.setIndex(c),this.addAttribute("position",new _t(l,3)),this.addAttribute("normal",new _t(u,3)),this.addAttribute("uv",new _t(p,2))}function Et(t,e,i,n){ut.call(this),this.type="PlaneGeometry",this.parameters={width:t,height:e,widthSegments:i,heightSegments:n},this.fromBufferGeometry(new Lt(t,e,i,n)),this.mergeVertices()}function Lt(t,e,i,n){St.call(this),this.type="PlaneBufferGeometry",this.parameters={width:t,height:e,widthSegments:i,heightSegments:n};var r,a,o=(t=t||1)/2,s=(e=e||1)/2,h=Math.floor(i)||1,c=Math.floor(n)||1,l=h+1,u=c+1,p=t/h,d=e/c,f=[],m=[],v=[],g=[];for(a=0;a<u;a++){var y=a*d-s;for(r=0;r<l;r++){var x=r*p-o;m.push(x,-y,0),v.push(0,0,1),g.push(r/h),g.push(1-a/c)}}for(a=0;a<c;a++)for(r=0;r<h;r++){var _=r+l*a,b=r+l*(a+1),M=r+1+l*(a+1),w=r+1+l*a;f.push(_,b,w),f.push(b,M,w)}this.setIndex(f),this.addAttribute("position",new _t(m,3)),this.addAttribute("normal",new _t(v,3)),this.addAttribute("uv",new _t(g,2))}function Pt(t){J.call(this),this.type="MeshBasicMaterial",this.color=new H(16777215),this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.combine=ma,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.skinning=!1,this.morphTargets=!1,this.lights=!1,this.setValues(t)}function Ct(t){J.call(this),this.type="ShaderMaterial",this.defines={},this.uniforms={},this.vertexShader="void main() {\n\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n}",this.fragmentShader="void main() {\n\tgl_FragColor = vec4( 1.0, 0.0, 0.0, 1.0 );\n}",this.linewidth=1,this.wireframe=!1,this.wireframeLinewidth=1,this.fog=!1,this.lights=!1,this.clipping=!1,this.skinning=!1,this.morphTargets=!1,this.morphNormals=!1,this.extensions={derivatives:!1,fragDepth:!1,drawBuffers:!1,shaderTextureLOD:!1},this.defaultAttributeValues={color:[1,1,1],uv:[0,0],uv2:[0,0]},this.index0AttributeName=void 0,void 0!==t&&(t.attributes,this.setValues(t))}function It(t,e){this.origin=void 0!==t?t:new a,this.direction=void 0!==e?e:new a}function Rt(t,e){this.start=void 0!==t?t:new a,this.end=void 0!==e?e:new a}function Nt(t,e,i){this.a=void 0!==t?t:new a,this.b=void 0!==e?e:new a,this.c=void 0!==i?i:new a}function Ot(t,e){st.call(this),this.type="Mesh",this.geometry=void 0!==t?t:new St,this.material=void 0!==e?e:new Pt({color:16777215*Math.random()}),this.drawMode=go,this.updateMorphTargets()}function Dt(t,e){return t.renderOrder!==e.renderOrder?t.renderOrder-e.renderOrder:t.program&&e.program&&t.program!==e.program?t.program.id-e.program.id:t.material.id!==e.material.id?t.material.id-e.material.id:t.z!==e.z?t.z-e.z:t.id-e.id}function Ut(t,e){return t.renderOrder!==e.renderOrder?t.renderOrder-e.renderOrder:t.z!==e.z?e.z-t.z:t.id-e.id}function Ft(){var t={};return{get:function(e,i){var n=e.id+","+i.id,r=t[n];return void 0===r&&(r=new function(){var t=[],e=0,i=[],n=[];return{opaque:i,transparent:n,init:function(){e=0,i.length=0,n.length=0},push:function(r,a,o,s,h){var c=t[e];void 0===c?(c={id:r.id,object:r,geometry:a,material:o,program:o.program,renderOrder:r.renderOrder,z:s,group:h},t[e]=c):(c.id=r.id,c.object=r,c.geometry=a,c.material=o,c.program=o.program,c.renderOrder=r.renderOrder,c.z=s,c.group=h),(!0===o.transparent?n:i).push(c),e++},sort:function(){i.length>1&&i.sort(Dt),n.length>1&&n.sort(Ut)}}},t[n]=r),r},dispose:function(){t={}}}}function zt(t,e){return Math.abs(e[1])-Math.abs(t[1])}function Bt(){var t=new function(){var t={};return{get:function(e){if(void 0!==t[e.id])return t[e.id];var n;switch(e.type){case"DirectionalLight":n={direction:new a,color:new H,shadow:!1,shadowBias:0,shadowRadius:1,shadowMapSize:new i};break;case"SpotLight":n={position:new a,direction:new a,color:new H,distance:0,coneCos:0,penumbraCos:0,decay:0,shadow:!1,shadowBias:0,shadowRadius:1,shadowMapSize:new i};break;case"PointLight":n={position:new a,color:new H,distance:0,decay:0,shadow:!1,shadowBias:0,shadowRadius:1,shadowMapSize:new i,shadowCameraNear:1,shadowCameraFar:1e3};break;case"HemisphereLight":n={direction:new a,skyColor:new H,groundColor:new H};break;case"RectAreaLight":n={color:new H,position:new a,halfWidth:new a,halfHeight:new a}}return t[e.id]=n,n}}},e={hash:"",ambient:[0,0,0],directional:[],directionalShadowMap:[],directionalShadowMatrix:[],spot:[],spotShadowMap:[],spotShadowMatrix:[],rectArea:[],point:[],pointShadowMap:[],pointShadowMatrix:[],hemi:[]},r=new a,o=new n,s=new n;return{setup:function(i,n,a){for(var h=0,c=0,l=0,u=0,p=0,d=0,f=0,m=0,v=a.matrixWorldInverse,g=0,y=i.length;g<y;g++){var x=i[g],_=x.color,b=x.intensity,M=x.distance,w=x.shadow&&x.shadow.map?x.shadow.map.texture:null;if(x.isAmbientLight)h+=_.r*b,c+=_.g*b,l+=_.b*b;else if(x.isDirectionalLight){if((T=t.get(x)).color.copy(x.color).multiplyScalar(x.intensity),T.direction.setFromMatrixPosition(x.matrixWorld),r.setFromMatrixPosition(x.target.matrixWorld),T.direction.sub(r),T.direction.transformDirection(v),T.shadow=x.castShadow,x.castShadow){var S=x.shadow;T.shadowBias=S.bias,T.shadowRadius=S.radius,T.shadowMapSize=S.mapSize}e.directionalShadowMap[u]=w,e.directionalShadowMatrix[u]=x.shadow.matrix,e.directional[u]=T,u++}else if(x.isSpotLight)(T=t.get(x)).position.setFromMatrixPosition(x.matrixWorld),T.position.applyMatrix4(v),T.color.copy(_).multiplyScalar(b),T.distance=M,T.direction.setFromMatrixPosition(x.matrixWorld),r.setFromMatrixPosition(x.target.matrixWorld),T.direction.sub(r),T.direction.transformDirection(v),T.coneCos=Math.cos(x.angle),T.penumbraCos=Math.cos(x.angle*(1-x.penumbra)),T.decay=0===x.distance?0:x.decay,T.shadow=x.castShadow,x.castShadow&&(S=x.shadow,T.shadowBias=S.bias,T.shadowRadius=S.radius,T.shadowMapSize=S.mapSize),e.spotShadowMap[d]=w,e.spotShadowMatrix[d]=x.shadow.matrix,e.spot[d]=T,d++;else if(x.isRectAreaLight)(T=t.get(x)).color.copy(_).multiplyScalar(b/(x.width*x.height)),T.position.setFromMatrixPosition(x.matrixWorld),T.position.applyMatrix4(v),s.identity(),o.copy(x.matrixWorld),o.premultiply(v),s.extractRotation(o),T.halfWidth.set(.5*x.width,0,0),T.halfHeight.set(0,.5*x.height,0),T.halfWidth.applyMatrix4(s),T.halfHeight.applyMatrix4(s),e.rectArea[f]=T,f++;else if(x.isPointLight)(T=t.get(x)).position.setFromMatrixPosition(x.matrixWorld),T.position.applyMatrix4(v),T.color.copy(x.color).multiplyScalar(x.intensity),T.distance=x.distance,T.decay=0===x.distance?0:x.decay,T.shadow=x.castShadow,x.castShadow&&(S=x.shadow,T.shadowBias=S.bias,T.shadowRadius=S.radius,T.shadowMapSize=S.mapSize,T.shadowCameraNear=S.camera.near,T.shadowCameraFar=S.camera.far),e.pointShadowMap[p]=w,e.pointShadowMatrix[p]=x.shadow.matrix,e.point[p]=T,p++;else if(x.isHemisphereLight){var T;(T=t.get(x)).direction.setFromMatrixPosition(x.matrixWorld),T.direction.transformDirection(v),T.direction.normalize(),T.skyColor.copy(x.color).multiplyScalar(b),T.groundColor.copy(x.groundColor).multiplyScalar(b),e.hemi[m]=T,m++}}e.ambient[0]=h,e.ambient[1]=c,e.ambient[2]=l,e.directional.length=u,e.spot.length=d,e.rectArea.length=f,e.point.length=p,e.hemi.length=m,e.hash=u+","+p+","+d+","+f+","+m+","+n.length},state:e}}function Gt(t,e,i){var n=t.createShader(e);return t.shaderSource(n,i),t.compileShader(n),t.getShaderParameter(n,t.COMPILE_STATUS),t.getShaderInfoLog(n),n}function Vt(t){switch(t){case _o:return["Linear","( value )"];case bo:return["sRGB","( value )"];case wo:return["RGBE","( value )"];case So:return["RGBM","( value, 7.0 )"];case To:return["RGBM","( value, 16.0 )"];case Ao:return["RGBD","( value, 256.0 )"];case Mo:return["Gamma","( value, float( GAMMA_FACTOR ) )"];default:throw new Error("unsupported encoding: "+t)}}function kt(t,e){var i=Vt(e);return"vec4 "+t+"( vec4 value ) { return "+i[0]+"ToLinear"+i[1]+"; }"}function jt(t){return""!==t}function Wt(t,e){return t.replace(/NUM_DIR_LIGHTS/g,e.numDirLights).replace(/NUM_SPOT_LIGHTS/g,e.numSpotLights).replace(/NUM_RECT_AREA_LIGHTS/g,e.numRectAreaLights).replace(/NUM_POINT_LIGHTS/g,e.numPointLights).replace(/NUM_HEMI_LIGHTS/g,e.numHemiLights)}function Ht(t){return t.replace(/^[ \t]*#include +<([\w\d.]+)>/gm,function(t,e){var i=Vo[e];if(void 0===i)throw new Error("Can not resolve #include <"+e+">");return Ht(i)})}function Xt(t){return t.replace(/for \( int i \= (\d+)\; i < (\d+)\; i \+\+ \) \{([\s\S]+?)(?=\})\}/g,function(t,e,i,n){for(var r="",a=parseInt(e);a<parseInt(i);a++)r+=n.replace(/\[ i \]/g,"[ "+a+" ]");return r})}function qt(t,e,i,n,r,a){var o=t.context,s=n.defines,h=r.vertexShader,c=r.fragmentShader,l="SHADOWMAP_TYPE_BASIC";a.shadowMapType===Ir?l="SHADOWMAP_TYPE_PCF":a.shadowMapType===Rr&&(l="SHADOWMAP_TYPE_PCF_SOFT");var u="ENVMAP_TYPE_CUBE",p="ENVMAP_MODE_REFLECTION",d="ENVMAP_BLENDING_MULTIPLY";if(a.envMap){switch(n.envMap.mapping){case wa:case Sa:u="ENVMAP_TYPE_CUBE";break;case La:case Pa:u="ENVMAP_TYPE_CUBE_UV";break;case Ta:case Aa:u="ENVMAP_TYPE_EQUIREC";break;case Ea:u="ENVMAP_TYPE_SPHERE"}switch(n.envMap.mapping){case Sa:case Aa:p="ENVMAP_MODE_REFRACTION"}switch(n.combine){case ma:d="ENVMAP_BLENDING_MULTIPLY";break;case va:d="ENVMAP_BLENDING_MIX";break;case ga:d="ENVMAP_BLENDING_ADD"}}var f,m,v=t.gammaFactor>0?t.gammaFactor:1,g=function(t,e,i){return[(t=t||{}).derivatives||e.envMapCubeUV||e.bumpMap||e.normalMap||e.flatShading?"#extension GL_OES_standard_derivatives : enable":"",(t.fragDepth||e.logarithmicDepthBuffer)&&i.get("EXT_frag_depth")?"#extension GL_EXT_frag_depth : enable":"",t.drawBuffers&&i.get("WEBGL_draw_buffers")?"#extension GL_EXT_draw_buffers : require":"",(t.shaderTextureLOD||e.envMap)&&i.get("EXT_shader_texture_lod")?"#extension GL_EXT_shader_texture_lod : enable":""].filter(jt).join("\n")}(n.extensions,a,e),y=function(t){var e=[];for(var i in t){var n=t[i];!1!==n&&e.push("#define "+i+" "+n)}return e.join("\n")}(s),x=o.createProgram();n.isRawShaderMaterial?((f=[y].filter(jt).join("\n")).length>0&&(f+="\n"),(m=[g,y].filter(jt).join("\n")).length>0&&(m+="\n")):(f=["precision "+a.precision+" float;","precision "+a.precision+" int;","#define SHADER_NAME "+r.name,y,a.supportsVertexTextures?"#define VERTEX_TEXTURES":"","#define GAMMA_FACTOR "+v,"#define MAX_BONES "+a.maxBones,a.useFog&&a.fog?"#define USE_FOG":"",a.useFog&&a.fogExp?"#define FOG_EXP2":"",a.map?"#define USE_MAP":"",a.envMap?"#define USE_ENVMAP":"",a.envMap?"#define "+p:"",a.lightMap?"#define USE_LIGHTMAP":"",a.aoMap?"#define USE_AOMAP":"",a.emissiveMap?"#define USE_EMISSIVEMAP":"",a.bumpMap?"#define USE_BUMPMAP":"",a.normalMap?"#define USE_NORMALMAP":"",a.displacementMap&&a.supportsVertexTextures?"#define USE_DISPLACEMENTMAP":"",a.specularMap?"#define USE_SPECULARMAP":"",a.roughnessMap?"#define USE_ROUGHNESSMAP":"",a.metalnessMap?"#define USE_METALNESSMAP":"",a.alphaMap?"#define USE_ALPHAMAP":"",a.vertexColors?"#define USE_COLOR":"",a.flatShading?"#define FLAT_SHADED":"",a.skinning?"#define USE_SKINNING":"",a.useVertexTexture?"#define BONE_TEXTURE":"",a.morphTargets?"#define USE_MORPHTARGETS":"",a.morphNormals&&!1===a.flatShading?"#define USE_MORPHNORMALS":"",a.doubleSided?"#define DOUBLE_SIDED":"",a.flipSided?"#define FLIP_SIDED":"","#define NUM_CLIPPING_PLANES "+a.numClippingPlanes,a.shadowMapEnabled?"#define USE_SHADOWMAP":"",a.shadowMapEnabled?"#define "+l:"",a.sizeAttenuation?"#define USE_SIZEATTENUATION":"",a.logarithmicDepthBuffer?"#define USE_LOGDEPTHBUF":"",a.logarithmicDepthBuffer&&e.get("EXT_frag_depth")?"#define USE_LOGDEPTHBUF_EXT":"","uniform mat4 modelMatrix;","uniform mat4 modelViewMatrix;","uniform mat4 projectionMatrix;","uniform mat4 viewMatrix;","uniform mat3 normalMatrix;","uniform vec3 cameraPosition;","attribute vec3 position;","attribute vec3 normal;","attribute vec2 uv;","#ifdef USE_COLOR","\tattribute vec3 color;","#endif","#ifdef USE_MORPHTARGETS","\tattribute vec3 morphTarget0;","\tattribute vec3 morphTarget1;","\tattribute vec3 morphTarget2;","\tattribute vec3 morphTarget3;","\t#ifdef USE_MORPHNORMALS","\t\tattribute vec3 morphNormal0;","\t\tattribute vec3 morphNormal1;","\t\tattribute vec3 morphNormal2;","\t\tattribute vec3 morphNormal3;","\t#else","\t\tattribute vec3 morphTarget4;","\t\tattribute vec3 morphTarget5;","\t\tattribute vec3 morphTarget6;","\t\tattribute vec3 morphTarget7;","\t#endif","#endif","#ifdef USE_SKINNING","\tattribute vec4 skinIndex;","\tattribute vec4 skinWeight;","#endif","\n"].filter(jt).join("\n"),m=[g,"precision "+a.precision+" float;","precision "+a.precision+" int;","#define SHADER_NAME "+r.name,y,a.alphaTest?"#define ALPHATEST "+a.alphaTest:"","#define GAMMA_FACTOR "+v,a.useFog&&a.fog?"#define USE_FOG":"",a.useFog&&a.fogExp?"#define FOG_EXP2":"",a.map?"#define USE_MAP":"",a.envMap?"#define USE_ENVMAP":"",a.envMap?"#define "+u:"",a.envMap?"#define "+p:"",a.envMap?"#define "+d:"",a.lightMap?"#define USE_LIGHTMAP":"",a.aoMap?"#define USE_AOMAP":"",a.emissiveMap?"#define USE_EMISSIVEMAP":"",a.bumpMap?"#define USE_BUMPMAP":"",a.normalMap?"#define USE_NORMALMAP":"",a.specularMap?"#define USE_SPECULARMAP":"",a.roughnessMap?"#define USE_ROUGHNESSMAP":"",a.metalnessMap?"#define USE_METALNESSMAP":"",a.alphaMap?"#define USE_ALPHAMAP":"",a.vertexColors?"#define USE_COLOR":"",a.gradientMap?"#define USE_GRADIENTMAP":"",a.flatShading?"#define FLAT_SHADED":"",a.doubleSided?"#define DOUBLE_SIDED":"",a.flipSided?"#define FLIP_SIDED":"","#define NUM_CLIPPING_PLANES "+a.numClippingPlanes,"#define UNION_CLIPPING_PLANES "+(a.numClippingPlanes-a.numClipIntersection),a.shadowMapEnabled?"#define USE_SHADOWMAP":"",a.shadowMapEnabled?"#define "+l:"",a.premultipliedAlpha?"#define PREMULTIPLIED_ALPHA":"",a.physicallyCorrectLights?"#define PHYSICALLY_CORRECT_LIGHTS":"",a.logarithmicDepthBuffer?"#define USE_LOGDEPTHBUF":"",a.logarithmicDepthBuffer&&e.get("EXT_frag_depth")?"#define USE_LOGDEPTHBUF_EXT":"",a.envMap&&e.get("EXT_shader_texture_lod")?"#define TEXTURE_LOD_EXT":"","uniform mat4 viewMatrix;","uniform vec3 cameraPosition;",a.toneMapping!==ya?"#define TONE_MAPPING":"",a.toneMapping!==ya?Vo.tonemapping_pars_fragment:"",a.toneMapping!==ya?function(t,e){var i;switch(e){case xa:i="Linear";break;case _a:i="Reinhard";break;case ba:i="Uncharted2";break;case Ma:i="OptimizedCineon";break;default:throw new Error("unsupported toneMapping: "+e)}return"vec3 "+t+"( vec3 color ) { return "+i+"ToneMapping( color ); }"}("toneMapping",a.toneMapping):"",a.dithering?"#define DITHERING":"",a.outputEncoding||a.mapEncoding||a.envMapEncoding||a.emissiveMapEncoding?Vo.encodings_pars_fragment:"",a.mapEncoding?kt("mapTexelToLinear",a.mapEncoding):"",a.envMapEncoding?kt("envMapTexelToLinear",a.envMapEncoding):"",a.emissiveMapEncoding?kt("emissiveMapTexelToLinear",a.emissiveMapEncoding):"",a.outputEncoding?function(t,e){var i=Vt(e);return"vec4 "+t+"( vec4 value ) { return LinearTo"+i[0]+i[1]+"; }"}("linearToOutputTexel",a.outputEncoding):"",a.depthPacking?"#define DEPTH_PACKING "+n.depthPacking:"","\n"].filter(jt).join("\n")),h=Wt(h=Ht(h),a),c=Wt(c=Ht(c),a),n.isShaderMaterial||(h=Xt(h),c=Xt(c));var _=f+h,b=m+c,M=Gt(o,o.VERTEX_SHADER,_),w=Gt(o,o.FRAGMENT_SHADER,b);o.attachShader(x,M),o.attachShader(x,w),void 0!==n.index0AttributeName?o.bindAttribLocation(x,0,n.index0AttributeName):!0===a.morphTargets&&o.bindAttribLocation(x,0,"position"),o.linkProgram(x);var S=o.getProgramInfoLog(x),T=o.getShaderInfoLog(M),A=o.getShaderInfoLog(w),E=!0,L=!0;!1===o.getProgramParameter(x,o.LINK_STATUS)?E=!1:""!==S||""!==T&&""!==A||(L=!1),L&&(this.diagnostics={runnable:E,material:n,programLog:S,vertexShader:{log:T,prefix:f},fragmentShader:{log:A,prefix:m}}),o.deleteShader(M),o.deleteShader(w);var P;this.getUniforms=function(){return void 0===P&&(P=new W(o,x,t)),P};var C;return this.getAttributes=function(){return void 0===C&&(C=function(t,e){for(var i={},n=t.getProgramParameter(e,t.ACTIVE_ATTRIBUTES),r=0;r<n;r++){var a=t.getActiveAttrib(e,r).name;i[a]=t.getAttribLocation(e,a)}return i}(o,x)),C},this.destroy=function(){o.deleteProgram(x),this.program=void 0},Object.defineProperties(this,{uniforms:{get:function(){return this.getUniforms()}},attributes:{get:function(){return this.getAttributes()}}}),this.id=qo++,this.code=i,this.usedTimes=1,this.program=x,this.vertexShader=M,this.fragmentShader=w,this}function Yt(t,e,i){function n(t,e){var i;return t?t.isTexture?i=t.encoding:t.isWebGLRenderTarget&&(i=t.texture.encoding):i=_o,i===_o&&e&&(i=Mo),i}var r=[],a={MeshDepthMaterial:"depth",MeshDistanceMaterial:"distanceRGBA",MeshNormalMaterial:"normal",MeshBasicMaterial:"basic",MeshLambertMaterial:"lambert",MeshPhongMaterial:"phong",MeshToonMaterial:"phong",MeshStandardMaterial:"physical",MeshPhysicalMaterial:"physical",LineBasicMaterial:"basic",LineDashedMaterial:"dashed",PointsMaterial:"points",ShadowMaterial:"shadow"},o=["precision","supportsVertexTextures","map","mapEncoding","envMap","envMapMode","envMapEncoding","lightMap","aoMap","emissiveMap","emissiveMapEncoding","bumpMap","normalMap","displacementMap","specularMap","roughnessMap","metalnessMap","gradientMap","alphaMap","combine","vertexColors","fog","useFog","fogExp","flatShading","sizeAttenuation","logarithmicDepthBuffer","skinning","maxBones","useVertexTexture","morphTargets","morphNormals","maxMorphTargets","maxMorphNormals","premultipliedAlpha","numDirLights","numPointLights","numSpotLights","numHemiLights","numRectAreaLights","shadowMapEnabled","shadowMapType","toneMapping","physicallyCorrectLights","alphaTest","doubleSided","flipSided","numClippingPlanes","numClipIntersection","depthPacking","dithering"];this.getParameters=function(e,r,o,s,h,c,l){var u=a[e.type],p=l.isSkinnedMesh?function(t){var e=t.skeleton.bones;if(i.floatVertexTextures)return 1024;var n=i.maxVertexUniforms,r=Math.floor((n-20)/4),a=Math.min(r,e.length);return a<e.length?0:a}(l):0,d=i.precision;null!==e.precision&&(d=i.getMaxPrecision(e.precision),e.precision);var f=t.getRenderTarget();return{shaderID:u,precision:d,supportsVertexTextures:i.vertexTextures,outputEncoding:n(f?f.texture:null,t.gammaOutput),map:!!e.map,mapEncoding:n(e.map,t.gammaInput),envMap:!!e.envMap,envMapMode:e.envMap&&e.envMap.mapping,envMapEncoding:n(e.envMap,t.gammaInput),envMapCubeUV:!!e.envMap&&(e.envMap.mapping===La||e.envMap.mapping===Pa),lightMap:!!e.lightMap,aoMap:!!e.aoMap,emissiveMap:!!e.emissiveMap,emissiveMapEncoding:n(e.emissiveMap,t.gammaInput),bumpMap:!!e.bumpMap,normalMap:!!e.normalMap,displacementMap:!!e.displacementMap,roughnessMap:!!e.roughnessMap,metalnessMap:!!e.metalnessMap,specularMap:!!e.specularMap,alphaMap:!!e.alphaMap,gradientMap:!!e.gradientMap,combine:e.combine,vertexColors:e.vertexColors,fog:!!s,useFog:e.fog,fogExp:s&&s.isFogExp2,flatShading:e.flatShading,sizeAttenuation:e.sizeAttenuation,logarithmicDepthBuffer:i.logarithmicDepthBuffer,skinning:e.skinning&&p>0,maxBones:p,useVertexTexture:i.floatVertexTextures,morphTargets:e.morphTargets,morphNormals:e.morphNormals,maxMorphTargets:t.maxMorphTargets,maxMorphNormals:t.maxMorphNormals,numDirLights:r.directional.length,numPointLights:r.point.length,numSpotLights:r.spot.length,numRectAreaLights:r.rectArea.length,numHemiLights:r.hemi.length,numClippingPlanes:h,numClipIntersection:c,dithering:e.dithering,shadowMapEnabled:t.shadowMap.enabled&&l.receiveShadow&&o.length>0,shadowMapType:t.shadowMap.type,toneMapping:t.toneMapping,physicallyCorrectLights:t.physicallyCorrectLights,premultipliedAlpha:e.premultipliedAlpha,alphaTest:e.alphaTest,doubleSided:e.side===Dr,flipSided:e.side===Or,depthPacking:void 0!==e.depthPacking&&e.depthPacking}},this.getProgramCode=function(e,i){var n=[];if(i.shaderID?n.push(i.shaderID):(n.push(e.fragmentShader),n.push(e.vertexShader)),void 0!==e.defines)for(var r in e.defines)n.push(r),n.push(e.defines[r]);for(var a=0;a<o.length;a++)n.push(i[o[a]]);return n.push(e.onBeforeCompile.toString()),n.push(t.gammaOutput),n.join()},this.acquireProgram=function(i,n,a,o){for(var s,h=0,c=r.length;h<c;h++){var l=r[h];if(l.code===o){++(s=l).usedTimes;break}}return void 0===s&&(s=new qt(t,e,o,i,n,a),r.push(s)),s},this.releaseProgram=function(t){if(0==--t.usedTimes){var e=r.indexOf(t);r[e]=r[r.length-1],r.pop(),t.destroy()}},this.programs=r}function Zt(t,e,i,n,r,a,o){function s(t,e){if(t.width>e||t.height>e){var i=e/Math.max(t.width,t.height),n=document.createElementNS("http://www.w3.org/1999/xhtml","canvas");n.width=Math.floor(t.width*i),n.height=Math.floor(t.height*i);return n.getContext("2d").drawImage(t,0,0,t.width,t.height,0,0,n.width,n.height),n}return t}function h(t){return Po.isPowerOfTwo(t.width)&&Po.isPowerOfTwo(t.height)}function c(t,e){return t.generateMipmaps&&e&&t.minFilter!==Na&&t.minFilter!==Ua}function l(e){return e===Na||e===Oa||e===Da?t.NEAREST:t.LINEAR}function u(e){var i=e.target;i.removeEventListener("dispose",u),function(e){var i=n.get(e);if(e.image&&i.__image__webglTextureCube)t.deleteTexture(i.__image__webglTextureCube);else{if(void 0===i.__webglInit)return;t.deleteTexture(i.__webglTexture)}n.remove(e)}(i),i.isVideoTexture&&delete x[i.id],o.textures--}function p(e){var i=e.target;i.removeEventListener("dispose",p),function(e){var i=n.get(e),r=n.get(e.texture);if(!e)return;void 0!==r.__webglTexture&&t.deleteTexture(r.__webglTexture);e.depthTexture&&e.depthTexture.dispose();if(e.isWebGLRenderTargetCube)for(var a=0;a<6;a++)t.deleteFramebuffer(i.__webglFramebuffer[a]),i.__webglDepthbuffer&&t.deleteRenderbuffer(i.__webglDepthbuffer[a]);else t.deleteFramebuffer(i.__webglFramebuffer),i.__webglDepthbuffer&&t.deleteRenderbuffer(i.__webglDepthbuffer);n.remove(e.texture),n.remove(e)}(i),o.textures--}function d(e,l){var p=n.get(e);if(e.version>0&&p.__version!==e.version){var d=e.image;if(void 0===d);else if(!1!==d.complete)return void function(e,n,l){void 0===e.__webglInit&&(e.__webglInit=!0,n.addEventListener("dispose",u),e.__webglTexture=t.createTexture(),n.isVideoTexture&&(x[n.id]=n),o.textures++);i.activeTexture(t.TEXTURE0+l),i.bindTexture(t.TEXTURE_2D,e.__webglTexture),t.pixelStorei(t.UNPACK_FLIP_Y_WEBGL,n.flipY),t.pixelStorei(t.UNPACK_PREMULTIPLY_ALPHA_WEBGL,n.premultiplyAlpha),t.pixelStorei(t.UNPACK_ALIGNMENT,n.unpackAlignment);var p=s(n.image,r.maxTextureSize);(function(t){return t.wrapS!==Ia||t.wrapT!==Ia||t.minFilter!==Na&&t.minFilter!==Ua})(n)&&!1===h(p)&&(p=function(t){if(t instanceof HTMLImageElement||t instanceof HTMLCanvasElement||t instanceof ImageBitmap){var e=document.createElementNS("http://www.w3.org/1999/xhtml","canvas");return e.width=Po.floorPowerOfTwo(t.width),e.height=Po.floorPowerOfTwo(t.height),e.getContext("2d").drawImage(t,0,0,e.width,e.height),e}return t}(p));var d=h(p),m=a.convert(n.format),v=a.convert(n.type);f(t.TEXTURE_2D,n,d);var g,_=n.mipmaps;if(n.isDepthTexture){var b=t.DEPTH_COMPONENT;if(n.type===Ha){if(!y)throw new Error("Float Depth Texture only supported in WebGL2.0");b=t.DEPTH_COMPONENT32F}else y&&(b=t.DEPTH_COMPONENT16);n.format===no&&b===t.DEPTH_COMPONENT&&n.type!==ka&&n.type!==Wa&&(n.type=ka,v=a.convert(n.type)),n.format===ro&&(b=t.DEPTH_STENCIL,n.type!==Ja&&(n.type=Ja,v=a.convert(n.type))),i.texImage2D(t.TEXTURE_2D,0,b,p.width,p.height,0,m,v,null)}else if(n.isDataTexture)if(_.length>0&&d){for(var M=0,w=_.length;M<w;M++)g=_[M],i.texImage2D(t.TEXTURE_2D,M,m,g.width,g.height,0,m,v,g.data);n.generateMipmaps=!1}else i.texImage2D(t.TEXTURE_2D,0,m,p.width,p.height,0,m,v,p.data);else if(n.isCompressedTexture)for(var M=0,w=_.length;M<w;M++)g=_[M],n.format!==$a&&n.format!==Ka?i.getCompressedTextureFormats().indexOf(m)>-1&&i.compressedTexImage2D(t.TEXTURE_2D,M,m,g.width,g.height,0,g.data):i.texImage2D(t.TEXTURE_2D,M,m,g.width,g.height,0,m,v,g.data);else if(_.length>0&&d){for(var M=0,w=_.length;M<w;M++)g=_[M],i.texImage2D(t.TEXTURE_2D,M,m,m,v,g);n.generateMipmaps=!1}else i.texImage2D(t.TEXTURE_2D,0,m,m,v,p);c(n,d)&&t.generateMipmap(t.TEXTURE_2D);e.__version=n.version,n.onUpdate&&n.onUpdate(n)}(p,e,l)}i.activeTexture(t.TEXTURE0+l),i.bindTexture(t.TEXTURE_2D,p.__webglTexture)}function f(i,o,s){var h;if(s?(t.texParameteri(i,t.TEXTURE_WRAP_S,a.convert(o.wrapS)),t.texParameteri(i,t.TEXTURE_WRAP_T,a.convert(o.wrapT)),t.texParameteri(i,t.TEXTURE_MAG_FILTER,a.convert(o.magFilter)),t.texParameteri(i,t.TEXTURE_MIN_FILTER,a.convert(o.minFilter))):(t.texParameteri(i,t.TEXTURE_WRAP_S,t.CLAMP_TO_EDGE),t.texParameteri(i,t.TEXTURE_WRAP_T,t.CLAMP_TO_EDGE),o.wrapS!==Ia||o.wrapT,t.texParameteri(i,t.TEXTURE_MAG_FILTER,l(o.magFilter)),t.texParameteri(i,t.TEXTURE_MIN_FILTER,l(o.minFilter)),o.minFilter!==Na&&o.minFilter),h=e.get("EXT_texture_filter_anisotropic")){if(o.type===Ha&&null===e.get("OES_texture_float_linear"))return;if(o.type===Xa&&null===e.get("OES_texture_half_float_linear"))return;(o.anisotropy>1||n.get(o).__currentAnisotropy)&&(t.texParameterf(i,h.TEXTURE_MAX_ANISOTROPY_EXT,Math.min(o.anisotropy,r.getMaxAnisotropy())),n.get(o).__currentAnisotropy=o.anisotropy)}}function m(e,r,o,s){var h=a.convert(r.texture.format),c=a.convert(r.texture.type);i.texImage2D(s,0,h,r.width,r.height,0,h,c,null),t.bindFramebuffer(t.FRAMEBUFFER,e),t.framebufferTexture2D(t.FRAMEBUFFER,o,s,n.get(r.texture).__webglTexture,0),t.bindFramebuffer(t.FRAMEBUFFER,null)}function v(e,i){t.bindRenderbuffer(t.RENDERBUFFER,e),i.depthBuffer&&!i.stencilBuffer?(t.renderbufferStorage(t.RENDERBUFFER,t.DEPTH_COMPONENT16,i.width,i.height),t.framebufferRenderbuffer(t.FRAMEBUFFER,t.DEPTH_ATTACHMENT,t.RENDERBUFFER,e)):i.depthBuffer&&i.stencilBuffer?(t.renderbufferStorage(t.RENDERBUFFER,t.DEPTH_STENCIL,i.width,i.height),t.framebufferRenderbuffer(t.FRAMEBUFFER,t.DEPTH_STENCIL_ATTACHMENT,t.RENDERBUFFER,e)):t.renderbufferStorage(t.RENDERBUFFER,t.RGBA4,i.width,i.height),t.bindRenderbuffer(t.RENDERBUFFER,null)}function g(e){var i=n.get(e),r=!0===e.isWebGLRenderTargetCube;if(e.depthTexture){if(r)throw new Error("target.depthTexture not supported in Cube render targets");!function(e,i){if(i&&i.isWebGLRenderTargetCube)throw new Error("Depth Texture with cube render targets is not supported");if(t.bindFramebuffer(t.FRAMEBUFFER,e),!i.depthTexture||!i.depthTexture.isDepthTexture)throw new Error("renderTarget.depthTexture must be an instance of THREE.DepthTexture");n.get(i.depthTexture).__webglTexture&&i.depthTexture.image.width===i.width&&i.depthTexture.image.height===i.height||(i.depthTexture.image.width=i.width,i.depthTexture.image.height=i.height,i.depthTexture.needsUpdate=!0),d(i.depthTexture,0);var r=n.get(i.depthTexture).__webglTexture;if(i.depthTexture.format===no)t.framebufferTexture2D(t.FRAMEBUFFER,t.DEPTH_ATTACHMENT,t.TEXTURE_2D,r,0);else{if(i.depthTexture.format!==ro)throw new Error("Unknown depthTexture format");t.framebufferTexture2D(t.FRAMEBUFFER,t.DEPTH_STENCIL_ATTACHMENT,t.TEXTURE_2D,r,0)}}(i.__webglFramebuffer,e)}else if(r){i.__webglDepthbuffer=[];for(var a=0;a<6;a++)t.bindFramebuffer(t.FRAMEBUFFER,i.__webglFramebuffer[a]),i.__webglDepthbuffer[a]=t.createRenderbuffer(),v(i.__webglDepthbuffer[a],e)}else t.bindFramebuffer(t.FRAMEBUFFER,i.__webglFramebuffer),i.__webglDepthbuffer=t.createRenderbuffer(),v(i.__webglDepthbuffer,e);t.bindFramebuffer(t.FRAMEBUFFER,null)}var y="undefined"!=typeof WebGL2RenderingContext&&t instanceof window.WebGL2RenderingContext,x={};this.setTexture2D=d,this.setTextureCube=function(e,l){var p=n.get(e);if(6===e.image.length)if(e.version>0&&p.__version!==e.version){p.__image__webglTextureCube||(e.addEventListener("dispose",u),p.__image__webglTextureCube=t.createTexture(),o.textures++),i.activeTexture(t.TEXTURE0+l),i.bindTexture(t.TEXTURE_CUBE_MAP,p.__image__webglTextureCube),t.pixelStorei(t.UNPACK_FLIP_Y_WEBGL,e.flipY);for(var d=e&&e.isCompressedTexture,m=e.image[0]&&e.image[0].isDataTexture,v=[],g=0;g<6;g++)v[g]=d||m?m?e.image[g].image:e.image[g]:s(e.image[g],r.maxCubemapSize);var y=h(v[0]),x=a.convert(e.format),_=a.convert(e.type);for(f(t.TEXTURE_CUBE_MAP,e,y),g=0;g<6;g++)if(d)for(var b,M=v[g].mipmaps,w=0,S=M.length;w<S;w++)b=M[w],e.format!==$a&&e.format!==Ka?i.getCompressedTextureFormats().indexOf(x)>-1&&i.compressedTexImage2D(t.TEXTURE_CUBE_MAP_POSITIVE_X+g,w,x,b.width,b.height,0,b.data):i.texImage2D(t.TEXTURE_CUBE_MAP_POSITIVE_X+g,w,x,b.width,b.height,0,x,_,b.data);else m?i.texImage2D(t.TEXTURE_CUBE_MAP_POSITIVE_X+g,0,x,v[g].width,v[g].height,0,x,_,v[g].data):i.texImage2D(t.TEXTURE_CUBE_MAP_POSITIVE_X+g,0,x,x,_,v[g]);c(e,y)&&t.generateMipmap(t.TEXTURE_CUBE_MAP),p.__version=e.version,e.onUpdate&&e.onUpdate(e)}else i.activeTexture(t.TEXTURE0+l),i.bindTexture(t.TEXTURE_CUBE_MAP,p.__image__webglTextureCube)},this.setTextureCubeDynamic=function(e,r){i.activeTexture(t.TEXTURE0+r),i.bindTexture(t.TEXTURE_CUBE_MAP,n.get(e).__webglTexture)},this.setupRenderTarget=function(e){var r=n.get(e),a=n.get(e.texture);e.addEventListener("dispose",p),a.__webglTexture=t.createTexture(),o.textures++;var s=!0===e.isWebGLRenderTargetCube,l=h(e);if(s){r.__webglFramebuffer=[];for(var u=0;u<6;u++)r.__webglFramebuffer[u]=t.createFramebuffer()}else r.__webglFramebuffer=t.createFramebuffer();if(s){for(i.bindTexture(t.TEXTURE_CUBE_MAP,a.__webglTexture),f(t.TEXTURE_CUBE_MAP,e.texture,l),u=0;u<6;u++)m(r.__webglFramebuffer[u],e,t.COLOR_ATTACHMENT0,t.TEXTURE_CUBE_MAP_POSITIVE_X+u);c(e.texture,l)&&t.generateMipmap(t.TEXTURE_CUBE_MAP),i.bindTexture(t.TEXTURE_CUBE_MAP,null)}else i.bindTexture(t.TEXTURE_2D,a.__webglTexture),f(t.TEXTURE_2D,e.texture,l),m(r.__webglFramebuffer,e,t.COLOR_ATTACHMENT0,t.TEXTURE_2D),c(e.texture,l)&&t.generateMipmap(t.TEXTURE_2D),i.bindTexture(t.TEXTURE_2D,null);e.depthBuffer&&g(e)},this.updateRenderTargetMipmap=function(e){var r=e.texture;if(c(r,h(e))){var a=e.isWebGLRenderTargetCube?t.TEXTURE_CUBE_MAP:t.TEXTURE_2D,o=n.get(r).__webglTexture;i.bindTexture(a,o),t.generateMipmap(a),i.bindTexture(a,null)}},this.updateVideoTextures=function(){for(var t in x)x[t].update()}}function Jt(t,e,i,n){ht.call(this),this.type="PerspectiveCamera",this.fov=void 0!==t?t:50,this.zoom=1,this.near=void 0!==i?i:.1,this.far=void 0!==n?n:2e3,this.focus=10,this.aspect=void 0!==e?e:1,this.view=null,this.filmGauge=35,this.filmOffset=0,this.updateProjectionMatrix()}function Qt(t){Jt.call(this),this.cameras=t||[]}function Kt(t){function e(){if(null!==r&&r.isPresenting){var e=r.getEyeParameters("left"),n=e.renderWidth,a=e.renderHeight;d=t.getPixelRatio(),p=t.getSize(),t.setDrawingBufferSize(2*n,a,1)}else i.enabled&&t.setDrawingBufferSize(p.width,p.height,d)}var i=this,r=null,a=null,o=null;"undefined"!=typeof window&&"VRFrameData"in window&&(a=new window.VRFrameData);var s=new n,c=new Jt;c.bounds=new h(0,0,.5,1),c.layers.enable(1);var l=new Jt;l.bounds=new h(.5,0,.5,1),l.layers.enable(2);var u=new Qt([c,l]);u.layers.enable(1),u.layers.enable(2);var p,d;"undefined"!=typeof window&&window.addEventListener("vrdisplaypresentchange",e,!1),this.enabled=!1,this.getDevice=function(){return r},this.setDevice=function(t){void 0!==t&&(r=t)},this.setPoseTarget=function(t){void 0!==t&&(o=t)},this.getCamera=function(t){if(null===r)return t;r.depthNear=t.near,r.depthFar=t.far,r.getFrameData(a);var e=a.pose,i=null!==o?o:t;if(null!==e.position?i.position.fromArray(e.position):i.position.set(0,0,0),null!==e.orientation&&i.quaternion.fromArray(e.orientation),i.updateMatrixWorld(),!1===r.isPresenting)return t;c.near=t.near,l.near=t.near,c.far=t.far,l.far=t.far,u.matrixWorld.copy(t.matrixWorld),u.matrixWorldInverse.copy(t.matrixWorldInverse),c.matrixWorldInverse.fromArray(a.leftViewMatrix),l.matrixWorldInverse.fromArray(a.rightViewMatrix);var n=i.parent;null!==n&&(s.getInverse(n.matrixWorld),c.matrixWorldInverse.multiply(s),l.matrixWorldInverse.multiply(s)),c.matrixWorld.getInverse(c.matrixWorldInverse),l.matrixWorld.getInverse(l.matrixWorldInverse),c.projectionMatrix.fromArray(a.leftProjectionMatrix),l.projectionMatrix.fromArray(a.rightProjectionMatrix),u.projectionMatrix.copy(c.projectionMatrix);var h=r.getLayers();if(h.length){var p=h[0];null!==p.leftBounds&&4===p.leftBounds.length&&c.bounds.fromArray(p.leftBounds),null!==p.rightBounds&&4===p.rightBounds.length&&l.bounds.fromArray(p.rightBounds)}return u},this.submitFrame=function(){r&&r.isPresenting&&r.submitFrame()},this.dispose=function(){"undefined"!=typeof window&&window.removeEventListener("vrdisplaypresentchange",e)}}function $t(t,e){return{convert:function(i){var n;if(i===Ca)return t.REPEAT;if(i===Ia)return t.CLAMP_TO_EDGE;if(i===Ra)return t.MIRRORED_REPEAT;if(i===Na)return t.NEAREST;if(i===Oa)return t.NEAREST_MIPMAP_NEAREST;if(i===Da)return t.NEAREST_MIPMAP_LINEAR;if(i===Ua)return t.LINEAR;if(i===Fa)return t.LINEAR_MIPMAP_NEAREST;if(i===za)return t.LINEAR_MIPMAP_LINEAR;if(i===Ba)return t.UNSIGNED_BYTE;if(i===qa)return t.UNSIGNED_SHORT_4_4_4_4;if(i===Ya)return t.UNSIGNED_SHORT_5_5_5_1;if(i===Za)return t.UNSIGNED_SHORT_5_6_5;if(i===Ga)return t.BYTE;if(i===Va)return t.SHORT;if(i===ka)return t.UNSIGNED_SHORT;if(i===ja)return t.INT;if(i===Wa)return t.UNSIGNED_INT;if(i===Ha)return t.FLOAT;if(i===Xa&&null!==(n=e.get("OES_texture_half_float")))return n.HALF_FLOAT_OES;if(i===Qa)return t.ALPHA;if(i===Ka)return t.RGB;if(i===$a)return t.RGBA;if(i===to)return t.LUMINANCE;if(i===eo)return t.LUMINANCE_ALPHA;if(i===no)return t.DEPTH_COMPONENT;if(i===ro)return t.DEPTH_STENCIL;if(i===Hr)return t.FUNC_ADD;if(i===Xr)return t.FUNC_SUBTRACT;if(i===qr)return t.FUNC_REVERSE_SUBTRACT;if(i===Jr)return t.ZERO;if(i===Qr)return t.ONE;if(i===Kr)return t.SRC_COLOR;if(i===$r)return t.ONE_MINUS_SRC_COLOR;if(i===ta)return t.SRC_ALPHA;if(i===ea)return t.ONE_MINUS_SRC_ALPHA;if(i===ia)return t.DST_ALPHA;if(i===na)return t.ONE_MINUS_DST_ALPHA;if(i===ra)return t.DST_COLOR;if(i===aa)return t.ONE_MINUS_DST_COLOR;if(i===oa)return t.SRC_ALPHA_SATURATE;if((i===ao||i===oo||i===so||i===ho)&&null!==(n=e.get("WEBGL_compressed_texture_s3tc"))){if(i===ao)return n.COMPRESSED_RGB_S3TC_DXT1_EXT;if(i===oo)return n.COMPRESSED_RGBA_S3TC_DXT1_EXT;if(i===so)return n.COMPRESSED_RGBA_S3TC_DXT3_EXT;if(i===ho)return n.COMPRESSED_RGBA_S3TC_DXT5_EXT}if((i===co||i===lo||i===uo||i===po)&&null!==(n=e.get("WEBGL_compressed_texture_pvrtc"))){if(i===co)return n.COMPRESSED_RGB_PVRTC_4BPPV1_IMG;if(i===lo)return n.COMPRESSED_RGB_PVRTC_2BPPV1_IMG;if(i===uo)return n.COMPRESSED_RGBA_PVRTC_4BPPV1_IMG;if(i===po)return n.COMPRESSED_RGBA_PVRTC_2BPPV1_IMG}if(i===fo&&null!==(n=e.get("WEBGL_compressed_texture_etc1")))return n.COMPRESSED_RGB_ETC1_WEBGL;if((i===Yr||i===Zr)&&null!==(n=e.get("EXT_blend_minmax"))){if(i===Yr)return n.MIN_EXT;if(i===Zr)return n.MAX_EXT}return i===Ja&&null!==(n=e.get("WEBGL_depth_texture"))?n.UNSIGNED_INT_24_8_WEBGL:0}}}function te(t){function e(){return null===F?$:1}function i(){(_t=new function(t){var e={};return{get:function(i){if(void 0!==e[i])return e[i];var n;switch(i){case"WEBGL_depth_texture":n=t.getExtension("WEBGL_depth_texture")||t.getExtension("MOZ_WEBGL_depth_texture")||t.getExtension("WEBKIT_WEBGL_depth_texture");break;case"EXT_texture_filter_anisotropic":n=t.getExtension("EXT_texture_filter_anisotropic")||t.getExtension("MOZ_EXT_texture_filter_anisotropic")||t.getExtension("WEBKIT_EXT_texture_filter_anisotropic");break;case"WEBGL_compressed_texture_s3tc":n=t.getExtension("WEBGL_compressed_texture_s3tc")||t.getExtension("MOZ_WEBGL_compressed_texture_s3tc")||t.getExtension("WEBKIT_WEBGL_compressed_texture_s3tc");break;case"WEBGL_compressed_texture_pvrtc":n=t.getExtension("WEBGL_compressed_texture_pvrtc")||t.getExtension("WEBKIT_WEBGL_compressed_texture_pvrtc");break;case"WEBGL_compressed_texture_etc1":n=t.getExtension("WEBGL_compressed_texture_etc1");break;default:n=t.getExtension(i)}return e[i]=n,n}}}(vt)).get("WEBGL_depth_texture"),_t.get("OES_texture_float"),_t.get("OES_texture_float_linear"),_t.get("OES_texture_half_float"),_t.get("OES_texture_half_float_linear"),_t.get("OES_standard_derivatives"),_t.get("OES_element_index_uint"),_t.get("ANGLE_instanced_arrays"),qt=new $t(vt,_t),bt=new function(t,e,i){function n(e){if("highp"===e){if(t.getShaderPrecisionFormat(t.VERTEX_SHADER,t.HIGH_FLOAT).precision>0&&t.getShaderPrecisionFormat(t.FRAGMENT_SHADER,t.HIGH_FLOAT).precision>0)return"highp";e="mediump"}return"mediump"===e&&t.getShaderPrecisionFormat(t.VERTEX_SHADER,t.MEDIUM_FLOAT).precision>0&&t.getShaderPrecisionFormat(t.FRAGMENT_SHADER,t.MEDIUM_FLOAT).precision>0?"mediump":"lowp"}var r,a=void 0!==i.precision?i.precision:"highp",o=n(a);o!==a&&(a=o);var s=!0===i.logarithmicDepthBuffer,h=t.getParameter(t.MAX_TEXTURE_IMAGE_UNITS),c=t.getParameter(t.MAX_VERTEX_TEXTURE_IMAGE_UNITS),l=t.getParameter(t.MAX_TEXTURE_SIZE),u=t.getParameter(t.MAX_CUBE_MAP_TEXTURE_SIZE),p=t.getParameter(t.MAX_VERTEX_ATTRIBS),d=t.getParameter(t.MAX_VERTEX_UNIFORM_VECTORS),f=t.getParameter(t.MAX_VARYING_VECTORS),m=t.getParameter(t.MAX_FRAGMENT_UNIFORM_VECTORS),v=c>0,g=!!e.get("OES_texture_float");return{getMaxAnisotropy:function(){if(void 0!==r)return r;var i=e.get("EXT_texture_filter_anisotropic");return r=null!==i?t.getParameter(i.MAX_TEXTURE_MAX_ANISOTROPY_EXT):0},getMaxPrecision:n,precision:a,logarithmicDepthBuffer:s,maxTextures:h,maxVertexTextures:c,maxTextureSize:l,maxCubemapSize:u,maxAttributes:p,maxVertexUniforms:d,maxVaryings:f,maxFragmentUniforms:m,vertexTextures:v,floatFragmentTextures:g,floatVertexTextures:v&&g}}(vt,_t,t),(Mt=new function(t,e,i){function n(e,i,n){var r=new Uint8Array(4),a=t.createTexture();t.bindTexture(e,a),t.texParameteri(e,t.TEXTURE_MIN_FILTER,t.NEAREST),t.texParameteri(e,t.TEXTURE_MAG_FILTER,t.NEAREST);for(var o=0;o<n;o++)t.texImage2D(i+o,0,t.RGBA,1,1,0,t.RGBA,t.UNSIGNED_BYTE,r);return a}function r(e){!0!==x[e]&&(t.enable(e),x[e]=!0)}function a(e){!1!==x[e]&&(t.disable(e),x[e]=!1)}function o(e,n,o,s,h,c,l,u){if(e!==Br?r(t.BLEND):a(t.BLEND),e!==Wr){if(e!==M||u!==P)switch(e){case Vr:u?(t.blendEquationSeparate(t.FUNC_ADD,t.FUNC_ADD),t.blendFuncSeparate(t.ONE,t.ONE,t.ONE,t.ONE)):(t.blendEquation(t.FUNC_ADD),t.blendFunc(t.SRC_ALPHA,t.ONE));break;case kr:u?(t.blendEquationSeparate(t.FUNC_ADD,t.FUNC_ADD),t.blendFuncSeparate(t.ZERO,t.ZERO,t.ONE_MINUS_SRC_COLOR,t.ONE_MINUS_SRC_ALPHA)):(t.blendEquation(t.FUNC_ADD),t.blendFunc(t.ZERO,t.ONE_MINUS_SRC_COLOR));break;case jr:u?(t.blendEquationSeparate(t.FUNC_ADD,t.FUNC_ADD),t.blendFuncSeparate(t.ZERO,t.SRC_COLOR,t.ZERO,t.SRC_ALPHA)):(t.blendEquation(t.FUNC_ADD),t.blendFunc(t.ZERO,t.SRC_COLOR));break;default:u?(t.blendEquationSeparate(t.FUNC_ADD,t.FUNC_ADD),t.blendFuncSeparate(t.ONE,t.ONE_MINUS_SRC_ALPHA,t.ONE,t.ONE_MINUS_SRC_ALPHA)):(t.blendEquationSeparate(t.FUNC_ADD,t.FUNC_ADD),t.blendFuncSeparate(t.SRC_ALPHA,t.ONE_MINUS_SRC_ALPHA,t.ONE,t.ONE_MINUS_SRC_ALPHA))}w=null,S=null,T=null,A=null,E=null,L=null}else h=h||n,c=c||o,l=l||s,n===w&&h===A||(t.blendEquationSeparate(i.convert(n),i.convert(h)),w=n,A=h),o===S&&s===T&&c===E&&l===L||(t.blendFuncSeparate(i.convert(o),i.convert(s),i.convert(c),i.convert(l)),S=o,T=s,E=c,L=l);M=e,P=u}function s(e){C!==e&&(e?t.frontFace(t.CW):t.frontFace(t.CCW),C=e)}function c(e){e!==Er?(r(t.CULL_FACE),e!==I&&(e===Lr?t.cullFace(t.BACK):e===Pr?t.cullFace(t.FRONT):t.cullFace(t.FRONT_AND_BACK))):a(t.CULL_FACE),I=e}function l(e,i,n){e?(r(t.POLYGON_OFFSET_FILL),N===i&&O===n||(t.polygonOffset(i,n),N=i,O=n)):a(t.POLYGON_OFFSET_FILL)}function u(e){void 0===e&&(e=t.TEXTURE0+D-1),z!==e&&(t.activeTexture(e),z=e)}var p=new function(){var e=!1,i=new h,n=null,r=new h(0,0,0,0);return{setMask:function(i){n===i||e||(t.colorMask(i,i,i,i),n=i)},setLocked:function(t){e=t},setClear:function(e,n,a,o,s){!0===s&&(e*=o,n*=o,a*=o),i.set(e,n,a,o),!1===r.equals(i)&&(t.clearColor(e,n,a,o),r.copy(i))},reset:function(){e=!1,n=null,r.set(-1,0,0,0)}}},d=new function(){var e=!1,i=null,n=null,o=null;return{setTest:function(e){e?r(t.DEPTH_TEST):a(t.DEPTH_TEST)},setMask:function(n){i===n||e||(t.depthMask(n),i=n)},setFunc:function(e){if(n!==e){if(e)switch(e){case sa:t.depthFunc(t.NEVER);break;case ha:t.depthFunc(t.ALWAYS);break;case ca:t.depthFunc(t.LESS);break;case la:t.depthFunc(t.LEQUAL);break;case ua:t.depthFunc(t.EQUAL);break;case pa:t.depthFunc(t.GEQUAL);break;case da:t.depthFunc(t.GREATER);break;case fa:t.depthFunc(t.NOTEQUAL);break;default:t.depthFunc(t.LEQUAL)}else t.depthFunc(t.LEQUAL);n=e}},setLocked:function(t){e=t},setClear:function(e){o!==e&&(t.clearDepth(e),o=e)},reset:function(){e=!1,i=null,n=null,o=null}}},f=new function(){var e=!1,i=null,n=null,o=null,s=null,h=null,c=null,l=null,u=null;return{setTest:function(e){e?r(t.STENCIL_TEST):a(t.STENCIL_TEST)},setMask:function(n){i===n||e||(t.stencilMask(n),i=n)},setFunc:function(e,i,r){n===e&&o===i&&s===r||(t.stencilFunc(e,i,r),n=e,o=i,s=r)},setOp:function(e,i,n){h===e&&c===i&&l===n||(t.stencilOp(e,i,n),h=e,c=i,l=n)},setLocked:function(t){e=t},setClear:function(e){u!==e&&(t.clearStencil(e),u=e)},reset:function(){e=!1,i=null,n=null,o=null,s=null,h=null,c=null,l=null,u=null}}},m=t.getParameter(t.MAX_VERTEX_ATTRIBS),v=new Uint8Array(m),g=new Uint8Array(m),y=new Uint8Array(m),x={},_=null,b=null,M=null,w=null,S=null,T=null,A=null,E=null,L=null,P=!1,C=null,I=null,R=null,N=null,O=null,D=t.getParameter(t.MAX_COMBINED_TEXTURE_IMAGE_UNITS),U=parseFloat(/^WebGL\ ([0-9])/.exec(t.getParameter(t.VERSION))[1]),F=parseFloat(U)>=1,z=null,B={},G=new h,V=new h,k={};return k[t.TEXTURE_2D]=n(t.TEXTURE_2D,t.TEXTURE_2D,1),k[t.TEXTURE_CUBE_MAP]=n(t.TEXTURE_CUBE_MAP,t.TEXTURE_CUBE_MAP_POSITIVE_X,6),p.setClear(0,0,0,1),d.setClear(1),f.setClear(0),r(t.DEPTH_TEST),d.setFunc(la),s(!1),c(Lr),r(t.CULL_FACE),r(t.BLEND),o(Gr),{buffers:{color:p,depth:d,stencil:f},initAttributes:function(){for(var t=0,e=v.length;t<e;t++)v[t]=0},enableAttribute:function(i){v[i]=1,0===g[i]&&(t.enableVertexAttribArray(i),g[i]=1),0!==y[i]&&(e.get("ANGLE_instanced_arrays").vertexAttribDivisorANGLE(i,0),y[i]=0)},enableAttributeAndDivisor:function(i,n){v[i]=1,0===g[i]&&(t.enableVertexAttribArray(i),g[i]=1),y[i]!==n&&(e.get("ANGLE_instanced_arrays").vertexAttribDivisorANGLE(i,n),y[i]=n)},disableUnusedAttributes:function(){for(var e=0,i=g.length;e!==i;++e)g[e]!==v[e]&&(t.disableVertexAttribArray(e),g[e]=0)},enable:r,disable:a,getCompressedTextureFormats:function(){if(null===_&&(_=[],e.get("WEBGL_compressed_texture_pvrtc")||e.get("WEBGL_compressed_texture_s3tc")||e.get("WEBGL_compressed_texture_etc1")))for(var i=t.getParameter(t.COMPRESSED_TEXTURE_FORMATS),n=0;n<i.length;n++)_.push(i[n]);return _},useProgram:function(e){return b!==e&&(t.useProgram(e),b=e,!0)},setBlending:o,setMaterial:function(e,i){e.side===Dr?a(t.CULL_FACE):r(t.CULL_FACE);var n=e.side===Or;i&&(n=!n),s(n),!0===e.transparent?o(e.blending,e.blendEquation,e.blendSrc,e.blendDst,e.blendEquationAlpha,e.blendSrcAlpha,e.blendDstAlpha,e.premultipliedAlpha):o(Br),d.setFunc(e.depthFunc),d.setTest(e.depthTest),d.setMask(e.depthWrite),p.setMask(e.colorWrite),l(e.polygonOffset,e.polygonOffsetFactor,e.polygonOffsetUnits)},setFlipSided:s,setCullFace:c,setLineWidth:function(e){e!==R&&(F&&t.lineWidth(e),R=e)},setPolygonOffset:l,setScissorTest:function(e){e?r(t.SCISSOR_TEST):a(t.SCISSOR_TEST)},activeTexture:u,bindTexture:function(e,i){null===z&&u();var n=B[z];void 0===n&&(n={type:void 0,texture:void 0},B[z]=n),n.type===e&&n.texture===i||(t.bindTexture(e,i||k[e]),n.type=e,n.texture=i)},compressedTexImage2D:function(){try{t.compressedTexImage2D.apply(t,arguments)}catch(t){}},texImage2D:function(){try{t.texImage2D.apply(t,arguments)}catch(t){}},scissor:function(e){!1===G.equals(e)&&(t.scissor(e.x,e.y,e.z,e.w),G.copy(e))},viewport:function(e){!1===V.equals(e)&&(t.viewport(e.x,e.y,e.z,e.w),V.copy(e))},reset:function(){for(var e=0;e<g.length;e++)1===g[e]&&(t.disableVertexAttribArray(e),g[e]=0);x={},_=null,z=null,B={},b=null,M=null,C=null,I=null,p.reset(),d.reset(),f.reset()}}}(vt,_t,qt)).scissor(X.copy(at).multiplyScalar($)),Mt.viewport(j.copy(tt).multiplyScalar($)),Tt=new function(){var t={};return{get:function(e){var i=e.uuid,n=t[i];return void 0===n&&(n={},t[i]=n),n},remove:function(e){delete t[e.uuid]},clear:function(){t={}}}},Et=new Zt(vt,_t,Mt,Tt,bt,qt,ft),It=new rt(vt),Rt=new function(t,e,i){function n(t){var o=t.target,s=r[o.id];null!==s.index&&e.remove(s.index);for(var h in s.attributes)e.remove(s.attributes[h]);o.removeEventListener("dispose",n),delete r[o.id];var c=a[o.id];c&&(e.remove(c),delete a[o.id]),(c=a[s.id])&&(e.remove(c),delete a[s.id]),i.geometries--}var r={},a={};return{get:function(t,e){var a=r[e.id];return a||(e.addEventListener("dispose",n),e.isBufferGeometry?a=e:e.isGeometry&&(void 0===e._bufferGeometry&&(e._bufferGeometry=(new St).setFromObject(t)),a=e._bufferGeometry),r[e.id]=a,i.geometries++,a)},update:function(i){var n=i.index,r=i.attributes;null!==n&&e.update(n,t.ELEMENT_ARRAY_BUFFER);for(var a in r)e.update(r[a],t.ARRAY_BUFFER);var o=i.morphAttributes;for(var a in o)for(var s=o[a],h=0,c=s.length;h<c;h++)e.update(s[h],t.ARRAY_BUFFER)},getWireframeAttribute:function(i){var n=a[i.id];if(n)return n;var r=[],o=i.index,s=i.attributes;if(null!==o)for(var h=0,c=(d=o.array).length;h<c;h+=3){var l=d[h+0],u=d[h+1],p=d[h+2];r.push(l,u,u,p,p,l)}else{var d;for(h=0,c=(d=s.position.array).length/3-1;h<c;h+=3)l=h+0,u=h+1,p=h+2,r.push(l,u,u,p,p,l)}return n=new(wt(r)>65535?xt:gt)(r,1),e.update(n,t.ELEMENT_ARRAY_BUFFER),a[i.id]=n,n}}}(vt,It,ft),Nt=new function(t,e){var i={};return{update:function(n){var r=e.frame,a=n.geometry,o=t.get(n,a);return i[o.id]!==r&&(a.isGeometry&&o.updateFromObject(n),t.update(o),i[o.id]=r),o},clear:function(){i={}}}}(Rt,mt),kt=new function(t){var e={},i=new Float32Array(8);return{update:function(n,r,a,o){var s=n.morphTargetInfluences,h=s.length,c=e[r.id];if(void 0===c){c=[];for(var l=0;l<h;l++)c[l]=[l,0];e[r.id]=c}var u=a.morphTargets&&r.morphAttributes.position,p=a.morphNormals&&r.morphAttributes.normal;for(l=0;l<h;l++)0!==(d=c[l])[1]&&(u&&r.removeAttribute("morphTarget"+l),p&&r.removeAttribute("morphNormal"+l));for(l=0;l<h;l++)(d=c[l])[0]=l,d[1]=s[l];for(c.sort(zt),l=0;l<8;l++){var d;if(d=c[l]){var f=d[0],m=d[1];if(m){u&&r.addAttribute("morphTarget"+l,u[f]),p&&r.addAttribute("morphNormal"+l,p[f]),i[l]=m;continue}}i[l]=0}o.getUniforms().setValue(t,"morphTargetInfluences",i)}}}(vt),Ut=new Yt(D,_t,bt),Dt=new Bt,Gt=new Ft,Vt=new function(t,e,i,n){function r(t,i){e.buffers.color.setClear(t.r,t.g,t.b,i,n)}var a,o,s,h=new H(0),c=0;return{getClearColor:function(){return h},setClearColor:function(t,e){h.set(t),r(h,c=void 0!==e?e:1)},getClearAlpha:function(){return c},setClearAlpha:function(t){r(h,c=t)},render:function(e,n,l,u){var p=n.background;null===p?r(h,c):p&&p.isColor&&(r(p,1),u=!0),(t.autoClear||u)&&t.clear(t.autoClearColor,t.autoClearDepth,t.autoClearStencil),p&&p.isCubeTexture?(void 0===s&&((s=new Ot(new At(1,1,1),new Ct({uniforms:ko.cube.uniforms,vertexShader:ko.cube.vertexShader,fragmentShader:ko.cube.fragmentShader,side:Or,depthTest:!0,depthWrite:!1,fog:!1}))).geometry.removeAttribute("normal"),s.geometry.removeAttribute("uv"),s.onBeforeRender=function(t,e,i){this.matrixWorld.copyPosition(i.matrixWorld)},i.update(s.geometry)),s.material.uniforms.tCube.value=p,e.push(s,s.geometry,s.material,0,null)):p&&p.isTexture&&(void 0===a&&(a=new ct(-1,1,1,-1,0,1),o=new Ot(new Lt(2,2),new Pt({depthTest:!1,depthWrite:!1,fog:!1})),i.update(o.geometry)),o.material.map=p,t.renderBufferDirect(a,null,o.geometry,o.material,o,null))}}}(D,Mt,Rt,E),jt=new function(t,e,i){var n;this.setMode=function(t){n=t},this.render=function(e,r){t.drawArrays(n,e,r),i.calls++,i.vertices+=r,n===t.TRIANGLES?i.faces+=r/3:n===t.POINTS&&(i.points+=r)},this.renderInstances=function(r,a,o){var s=e.get("ANGLE_instanced_arrays");if(null!==s){var h=r.attributes.position;h.isInterleavedBufferAttribute?(o=h.data.count,s.drawArraysInstancedANGLE(n,0,o,r.maxInstancedCount)):s.drawArraysInstancedANGLE(n,a,o,r.maxInstancedCount),i.calls++,i.vertices+=o*r.maxInstancedCount,n===t.TRIANGLES?i.faces+=r.maxInstancedCount*o/3:n===t.POINTS&&(i.points+=r.maxInstancedCount*o)}}}(vt,_t,mt),Wt=new function(t,e,i){var n,r,a;this.setMode=function(t){n=t},this.setIndex=function(t){r=t.type,a=t.bytesPerElement},this.render=function(e,o){t.drawElements(n,o,r,e*a),i.calls++,i.vertices+=o,n===t.TRIANGLES?i.faces+=o/3:n===t.POINTS&&(i.points+=o)},this.renderInstances=function(o,s,h){var c=e.get("ANGLE_instanced_arrays");null!==c&&(c.drawElementsInstancedANGLE(n,h,r,s*a,o.maxInstancedCount),i.calls++,i.vertices+=h*o.maxInstancedCount,n===t.TRIANGLES?i.faces+=o.maxInstancedCount*h/3:n===t.POINTS&&(i.points+=o.maxInstancedCount*h))}}(vt,_t,mt),Ht=new q(D,vt,Mt,Et,bt),Xt=new Z(D,vt,Mt,Et,bt),D.info.programs=Ut.programs,D.context=vt,D.capabilities=bt,D.extensions=_t,D.properties=Tt,D.renderLists=Gt,D.state=Mt}function r(t){t.preventDefault(),U=!0}function s(){U=!1,i()}function c(t){var e=t.target;e.removeEventListener("dispose",c),function(t){l(t),Tt.remove(t)}(e)}function l(t){var e=Tt.get(t).program;t.program=void 0,void 0!==e&&Ut.releaseProgram(e)}function p(t){null!==ee&&ee(t);var e=Jt.getDevice();e&&e.isPresenting?e.requestAnimationFrame(p):window.requestAnimationFrame(p)}function d(t,e,i){if(!1!==t.visible){if(t.layers.test(e.layers))if(t.isLight)C.push(t),t.castShadow&&I.push(t);else if(t.isSprite)t.frustumCulled&&!st.intersectsSprite(t)||N.push(t);else if(t.isLensFlare)O.push(t);else if(t.isImmediateRenderObject)i&&dt.setFromMatrixPosition(t.matrixWorld).applyMatrix4(pt),R.push(t,null,t.material,dt.z,null);else if((t.isMesh||t.isLine||t.isPoints)&&(t.isSkinnedMesh&&t.skeleton.update(),!t.frustumCulled||st.intersectsObject(t))){i&&dt.setFromMatrixPosition(t.matrixWorld).applyMatrix4(pt);var n=Nt.update(t),r=t.material;if(Array.isArray(r))for(var a=n.groups,o=0,s=a.length;o<s;o++){var h=a[o],c=r[h.materialIndex];c&&c.visible&&R.push(t,n,c,dt.z,h)}else r.visible&&R.push(t,n,r,dt.z,null)}var l=t.children;for(o=0,s=l.length;o<s;o++)d(l[o],e,i)}}function f(t,e,i,n){for(var r=0,a=t.length;r<a;r++){var o=t[r],s=o.object,h=o.geometry,c=void 0===n?o.material:n,l=o.group;if(i.isArrayCamera){k=i;for(var u=i.cameras,p=0,d=u.length;p<d;p++){var f=u[p];if(s.layers.test(f.layers)){var v=f.bounds,g=v.x*Q,y=v.y*K,x=v.z*Q,_=v.w*K;Mt.viewport(j.set(g,y,x,_).multiplyScalar($)),m(s,e,f,h,c,l)}}}else k=null,m(s,e,i,h,c,l)}}function m(t,e,i,n,r,a){if(t.onBeforeRender(D,e,i,n,r,a),t.modelViewMatrix.multiplyMatrices(i.matrixWorldInverse,t.matrixWorld),t.normalMatrix.getNormalMatrix(t.modelViewMatrix),t.isImmediateRenderObject){var o=t.isMesh&&t.matrixWorld.determinant()<0;Mt.setMaterial(r,o);var s=g(i,e.fog,r,t);G="",function(t,e,i){t.render(function(t){D.renderBufferImmediate(t,e,i)})}(t,s,r)}else D.renderBufferDirect(i,e.fog,n,r,t,a);t.onAfterRender(D,e,i,n,r,a)}function v(t,e,i){var n=Tt.get(t),r=Ut.getParameters(t,Dt.state,I,e,ht.numPlanes,ht.numIntersection,i),a=Ut.getProgramCode(t,r),o=n.program,s=!0;if(void 0===o)t.addEventListener("dispose",c);else if(o.code!==a)l(t);else{if(void 0!==r.shaderID)return;s=!1}if(s){if(r.shaderID){var h=ko[r.shaderID];n.shader={name:t.type,uniforms:Go.clone(h.uniforms),vertexShader:h.vertexShader,fragmentShader:h.fragmentShader}}else n.shader={name:t.type,uniforms:t.uniforms,vertexShader:t.vertexShader,fragmentShader:t.fragmentShader};t.onBeforeCompile(n.shader),o=Ut.acquireProgram(t,n.shader,r,a),n.program=o,t.program=o}var u=o.getAttributes();if(t.morphTargets){t.numSupportedMorphTargets=0;for(var p=0;p<D.maxMorphTargets;p++)u["morphTarget"+p]>=0&&t.numSupportedMorphTargets++}if(t.morphNormals){t.numSupportedMorphNormals=0;for(p=0;p<D.maxMorphNormals;p++)u["morphNormal"+p]>=0&&t.numSupportedMorphNormals++}var d=n.shader.uniforms;(t.isShaderMaterial||t.isRawShaderMaterial)&&!0!==t.clipping||(n.numClippingPlanes=ht.numPlanes,n.numIntersection=ht.numIntersection,d.clippingPlanes=ht.uniform),n.fog=e,n.lightsHash=Dt.state.hash,t.lights&&(d.ambientLightColor.value=Dt.state.ambient,d.directionalLights.value=Dt.state.directional,d.spotLights.value=Dt.state.spot,d.rectAreaLights.value=Dt.state.rectArea,d.pointLights.value=Dt.state.point,d.hemisphereLights.value=Dt.state.hemi,d.directionalShadowMap.value=Dt.state.directionalShadowMap,d.directionalShadowMatrix.value=Dt.state.directionalShadowMatrix,d.spotShadowMap.value=Dt.state.spotShadowMap,d.spotShadowMatrix.value=Dt.state.spotShadowMatrix,d.pointShadowMap.value=Dt.state.pointShadowMap,d.pointShadowMatrix.value=Dt.state.pointShadowMatrix);var f=n.program.getUniforms(),m=W.seqWithValue(f.seq,d);n.uniformsList=m}function g(t,e,i,n){J=0;var r=Tt.get(i);if(lt&&(ut||t!==V)){var a=t===V&&i.id===B;ht.setState(i.clippingPlanes,i.clipIntersection,i.clipShadows,t,r,a)}!1===i.needsUpdate&&(void 0===r.program?i.needsUpdate=!0:i.fog&&r.fog!==e?i.needsUpdate=!0:i.lights&&r.lightsHash!==Dt.state.hash?i.needsUpdate=!0:void 0===r.numClippingPlanes||r.numClippingPlanes===ht.numPlanes&&r.numIntersection===ht.numIntersection||(i.needsUpdate=!0)),i.needsUpdate&&(v(i,e,n),i.needsUpdate=!1);var o=!1,s=!1,h=!1,c=r.program,l=c.getUniforms(),p=r.shader.uniforms;if(Mt.useProgram(c.program)&&(o=!0,s=!0,h=!0),i.id!==B&&(B=i.id,s=!0),o||t!==V){if(l.setValue(vt,"projectionMatrix",t.projectionMatrix),bt.logarithmicDepthBuffer&&l.setValue(vt,"logDepthBufFC",2/(Math.log(t.far+1)/Math.LN2)),V!==(k||t)&&(V=k||t,s=!0,h=!0),i.isShaderMaterial||i.isMeshPhongMaterial||i.isMeshStandardMaterial||i.envMap){var d=l.map.cameraPosition;void 0!==d&&d.setValue(vt,dt.setFromMatrixPosition(t.matrixWorld))}(i.isMeshPhongMaterial||i.isMeshLambertMaterial||i.isMeshBasicMaterial||i.isMeshStandardMaterial||i.isShaderMaterial||i.skinning)&&l.setValue(vt,"viewMatrix",t.matrixWorldInverse)}if(i.skinning){l.setOptional(vt,n,"bindMatrix"),l.setOptional(vt,n,"bindMatrixInverse");var f=n.skeleton;if(f){var m=f.bones;if(bt.floatVertexTextures){if(void 0===f.boneTexture){var g=Math.sqrt(4*m.length);g=Po.ceilPowerOfTwo(g),g=Math.max(g,4);var b=new Float32Array(g*g*4);b.set(f.boneMatrices);var M=new u(b,g,g,$a,Ha);f.boneMatrices=b,f.boneTexture=M,f.boneTextureSize=g}l.setValue(vt,"boneTexture",f.boneTexture),l.setValue(vt,"boneTextureSize",f.boneTextureSize)}else l.setOptional(vt,f,"boneMatrices")}}return s&&(l.setValue(vt,"toneMappingExposure",D.toneMappingExposure),l.setValue(vt,"toneMappingWhitePoint",D.toneMappingWhitePoint),i.lights&&function(t,e){t.ambientLightColor.needsUpdate=e,t.directionalLights.needsUpdate=e,t.pointLights.needsUpdate=e,t.spotLights.needsUpdate=e,t.rectAreaLights.needsUpdate=e,t.hemisphereLights.needsUpdate=e}(p,h),e&&i.fog&&function(t,e){t.fogColor.value=e.color,e.isFog?(t.fogNear.value=e.near,t.fogFar.value=e.far):e.isFogExp2&&(t.fogDensity.value=e.density)}(p,e),i.isMeshBasicMaterial?y(p,i):i.isMeshLambertMaterial?(y(p,i),function(t,e){e.emissiveMap&&(t.emissiveMap.value=e.emissiveMap)}(p,i)):i.isMeshPhongMaterial?(y(p,i),i.isMeshToonMaterial?function(t,e){x(t,e),e.gradientMap&&(t.gradientMap.value=e.gradientMap)}(p,i):x(p,i)):i.isMeshStandardMaterial?(y(p,i),i.isMeshPhysicalMaterial?function(t,e){t.clearCoat.value=e.clearCoat,t.clearCoatRoughness.value=e.clearCoatRoughness,_(t,e)}(p,i):_(p,i)):i.isMeshDepthMaterial?(y(p,i),function(t,e){e.displacementMap&&(t.displacementMap.value=e.displacementMap,t.displacementScale.value=e.displacementScale,t.displacementBias.value=e.displacementBias)}(p,i)):i.isMeshDistanceMaterial?(y(p,i),function(t,e){e.displacementMap&&(t.displacementMap.value=e.displacementMap,t.displacementScale.value=e.displacementScale,t.displacementBias.value=e.displacementBias);t.referencePosition.value.copy(e.referencePosition),t.nearDistance.value=e.nearDistance,t.farDistance.value=e.farDistance}(p,i)):i.isMeshNormalMaterial?(y(p,i),function(t,e){e.bumpMap&&(t.bumpMap.value=e.bumpMap,t.bumpScale.value=e.bumpScale);e.normalMap&&(t.normalMap.value=e.normalMap,t.normalScale.value.copy(e.normalScale));e.displacementMap&&(t.displacementMap.value=e.displacementMap,t.displacementScale.value=e.displacementScale,t.displacementBias.value=e.displacementBias)}(p,i)):i.isLineBasicMaterial?(function(t,e){t.diffuse.value=e.color,t.opacity.value=e.opacity}(p,i),i.isLineDashedMaterial&&function(t,e){t.dashSize.value=e.dashSize,t.totalSize.value=e.dashSize+e.gapSize,t.scale.value=e.scale}(p,i)):i.isPointsMaterial?function(t,e){if(t.diffuse.value=e.color,t.opacity.value=e.opacity,t.size.value=e.size*$,t.scale.value=.5*K,t.map.value=e.map,null!==e.map){if(!0===e.map.matrixAutoUpdate){var i=e.map.offset,n=e.map.repeat,r=e.map.rotation,a=e.map.center;e.map.matrix.setUvTransform(i.x,i.y,n.x,n.y,r,a.x,a.y)}t.uvTransform.value.copy(e.map.matrix)}}(p,i):i.isShadowMaterial&&(p.color.value=i.color,p.opacity.value=i.opacity),void 0!==p.ltcMat&&(p.ltcMat.value=Bo.LTC_MAT_TEXTURE),void 0!==p.ltcMag&&(p.ltcMag.value=Bo.LTC_MAG_TEXTURE),W.upload(vt,r.uniformsList,p,D)),l.setValue(vt,"modelViewMatrix",n.modelViewMatrix),l.setValue(vt,"normalMatrix",n.normalMatrix),l.setValue(vt,"modelMatrix",n.matrixWorld),c}function y(t,e){t.opacity.value=e.opacity,e.color&&(t.diffuse.value=e.color),e.emissive&&t.emissive.value.copy(e.emissive).multiplyScalar(e.emissiveIntensity),e.map&&(t.map.value=e.map),e.alphaMap&&(t.alphaMap.value=e.alphaMap),e.specularMap&&(t.specularMap.value=e.specularMap),e.envMap&&(t.envMap.value=e.envMap,t.flipEnvMap.value=e.envMap&&e.envMap.isCubeTexture?-1:1,t.reflectivity.value=e.reflectivity,t.refractionRatio.value=e.refractionRatio),e.lightMap&&(t.lightMap.value=e.lightMap,t.lightMapIntensity.value=e.lightMapIntensity),e.aoMap&&(t.aoMap.value=e.aoMap,t.aoMapIntensity.value=e.aoMapIntensity);var i;if(e.map?i=e.map:e.specularMap?i=e.specularMap:e.displacementMap?i=e.displacementMap:e.normalMap?i=e.normalMap:e.bumpMap?i=e.bumpMap:e.roughnessMap?i=e.roughnessMap:e.metalnessMap?i=e.metalnessMap:e.alphaMap?i=e.alphaMap:e.emissiveMap&&(i=e.emissiveMap),void 0!==i){if(i.isWebGLRenderTarget&&(i=i.texture),!0===i.matrixAutoUpdate){var n=i.offset,r=i.repeat,a=i.rotation,o=i.center;i.matrix.setUvTransform(n.x,n.y,r.x,r.y,a,o.x,o.y)}t.uvTransform.value.copy(i.matrix)}}function x(t,e){t.specular.value=e.specular,t.shininess.value=Math.max(e.shininess,1e-4),e.emissiveMap&&(t.emissiveMap.value=e.emissiveMap),e.bumpMap&&(t.bumpMap.value=e.bumpMap,t.bumpScale.value=e.bumpScale),e.normalMap&&(t.normalMap.value=e.normalMap,t.normalScale.value.copy(e.normalScale)),e.displacementMap&&(t.displacementMap.value=e.displacementMap,t.displacementScale.value=e.displacementScale,t.displacementBias.value=e.displacementBias)}function _(t,e){t.roughness.value=e.roughness,t.metalness.value=e.metalness,e.roughnessMap&&(t.roughnessMap.value=e.roughnessMap),e.metalnessMap&&(t.metalnessMap.value=e.metalnessMap),e.emissiveMap&&(t.emissiveMap.value=e.emissiveMap),e.bumpMap&&(t.bumpMap.value=e.bumpMap,t.bumpScale.value=e.bumpScale),e.normalMap&&(t.normalMap.value=e.normalMap,t.normalScale.value.copy(e.normalScale)),e.displacementMap&&(t.displacementMap.value=e.displacementMap,t.displacementScale.value=e.displacementScale,t.displacementBias.value=e.displacementBias),e.envMap&&(t.envMapIntensity.value=e.envMapIntensity)}var b=void 0!==(t=t||{}).canvas?t.canvas:document.createElementNS("http://www.w3.org/1999/xhtml","canvas"),M=void 0!==t.context?t.context:null,w=void 0!==t.alpha&&t.alpha,S=void 0===t.depth||t.depth,T=void 0===t.stencil||t.stencil,A=void 0!==t.antialias&&t.antialias,E=void 0===t.premultipliedAlpha||t.premultipliedAlpha,L=void 0!==t.preserveDrawingBuffer&&t.preserveDrawingBuffer,P=void 0!==t.powerPreference?t.powerPreference:"default",C=[],I=[],R=null,N=[],O=[];this.domElement=b,this.context=null,this.autoClear=!0,this.autoClearColor=!0,this.autoClearDepth=!0,this.autoClearStencil=!0,this.sortObjects=!0,this.clippingPlanes=[],this.localClippingEnabled=!1,this.gammaFactor=2,this.gammaInput=!1,this.gammaOutput=!1,this.physicallyCorrectLights=!1,this.toneMapping=xa,this.toneMappingExposure=1,this.toneMappingWhitePoint=1,this.maxMorphTargets=8,this.maxMorphNormals=4;var D=this,U=!1,F=null,z=null,B=-1,G="",V=null,k=null,j=new h,X=new h,Y=null,J=0,Q=b.width,K=b.height,$=1,tt=new h(0,0,Q,K),at=new h(0,0,Q,K),ot=!1,st=new it,ht=new function(){function t(){l.value!==n&&(l.value=n,l.needsUpdate=r>0),i.numPlanes=r,i.numIntersection=0}function e(t,e,n,r){var a=null!==t?t.length:0,o=null;if(0!==a){if(o=l.value,!0!==r||null===o){var s=n+4*a,u=e.matrixWorldInverse;c.getNormalMatrix(u),(null===o||o.length<s)&&(o=new Float32Array(s));for(var p=0,d=n;p!==a;++p,d+=4)h.copy(t[p]).applyMatrix4(u,c),h.normal.toArray(o,d),o[d+3]=h.constant}l.value=o,l.needsUpdate=!0}return i.numPlanes=a,o}var i=this,n=null,r=0,a=!1,s=!1,h=new et,c=new o,l={value:null,needsUpdate:!1};this.uniform=l,this.numPlanes=0,this.numIntersection=0,this.init=function(t,i,o){var s=0!==t.length||i||0!==r||a;return a=i,n=e(t,o,0),r=t.length,s},this.beginShadows=function(){s=!0,e(null)},this.endShadows=function(){s=!1,t()},this.setState=function(i,o,h,c,u,p){if(!a||null===i||0===i.length||s&&!h)s?e(null):t();else{var d=s?0:r,f=4*d,m=u.clippingState||null;l.value=m,m=e(i,c,f,p);for(var v=0;v!==f;++v)m[v]=n[v];u.clippingState=m,this.numIntersection=o?this.numPlanes:0,this.numPlanes+=d}}},lt=!1,ut=!1,pt=new n,dt=new a,ft={geometries:0,textures:0},mt={frame:0,calls:0,vertices:0,faces:0,points:0};this.info={render:mt,memory:ft,programs:null};var vt;try{var yt={alpha:w,depth:S,stencil:T,antialias:A,premultipliedAlpha:E,preserveDrawingBuffer:L,powerPreference:P};if(b.addEventListener("webglcontextlost",r,!1),b.addEventListener("webglcontextrestored",s,!1),null===(vt=M||b.getContext("webgl",yt)||b.getContext("experimental-webgl",yt)))throw null!==b.getContext("webgl")?new Error("Error creating WebGL context with your selected attributes."):new Error("Error creating WebGL context.");void 0===vt.getShaderPrecisionFormat&&(vt.getShaderPrecisionFormat=function(){return{rangeMin:1,rangeMax:1,precision:1}})}catch(t){}var _t,bt,Mt,Tt,Et,It,Rt,Nt,Dt,Ut,Gt,Vt,kt,jt,Wt,Ht,Xt,qt;i();var Jt=new Kt(D);this.vr=Jt;var Qt=new nt(D,Nt,bt.maxTextureSize);this.shadowMap=Qt,this.getContext=function(){return vt},this.getContextAttributes=function(){return vt.getContextAttributes()},this.forceContextLoss=function(){var t=_t.get("WEBGL_lose_context");t&&t.loseContext()},this.forceContextRestore=function(){var t=_t.get("WEBGL_lose_context");t&&t.restoreContext()},this.getPixelRatio=function(){return $},this.setPixelRatio=function(t){void 0!==t&&($=t,this.setSize(Q,K,!1))},this.getSize=function(){return{width:Q,height:K}},this.setSize=function(t,e,i){var n=Jt.getDevice();n&&n.isPresenting||(Q=t,K=e,b.width=t*$,b.height=e*$,!1!==i&&(b.style.width=t+"px",b.style.height=e+"px"),this.setViewport(0,0,t,e))},this.getDrawingBufferSize=function(){return{width:Q*$,height:K*$}},this.setDrawingBufferSize=function(t,e,i){Q=t,K=e,$=i,b.width=t*i,b.height=e*i,this.setViewport(0,0,t,e)},this.setViewport=function(t,e,i,n){tt.set(t,K-e-n,i,n),Mt.viewport(j.copy(tt).multiplyScalar($))},this.setScissor=function(t,e,i,n){at.set(t,K-e-n,i,n),Mt.scissor(X.copy(at).multiplyScalar($))},this.setScissorTest=function(t){Mt.setScissorTest(ot=t)},this.getClearColor=function(){return Vt.getClearColor()},this.setClearColor=function(){Vt.setClearColor.apply(Vt,arguments)},this.getClearAlpha=function(){return Vt.getClearAlpha()},this.setClearAlpha=function(){Vt.setClearAlpha.apply(Vt,arguments)},this.clear=function(t,e,i){var n=0;(void 0===t||t)&&(n|=vt.COLOR_BUFFER_BIT),(void 0===e||e)&&(n|=vt.DEPTH_BUFFER_BIT),(void 0===i||i)&&(n|=vt.STENCIL_BUFFER_BIT),vt.clear(n)},this.clearColor=function(){this.clear(!0,!1,!1)},this.clearDepth=function(){this.clear(!1,!0,!1)},this.clearStencil=function(){this.clear(!1,!1,!0)},this.clearTarget=function(t,e,i,n){this.setRenderTarget(t),this.clear(e,i,n)},this.dispose=function(){b.removeEventListener("webglcontextlost",r,!1),b.removeEventListener("webglcontextrestored",s,!1),Gt.dispose(),Jt.dispose()},this.renderBufferImmediate=function(t,e,i){Mt.initAttributes();var n=Tt.get(t);t.hasPositions&&!n.position&&(n.position=vt.createBuffer()),t.hasNormals&&!n.normal&&(n.normal=vt.createBuffer()),t.hasUvs&&!n.uv&&(n.uv=vt.createBuffer()),t.hasColors&&!n.color&&(n.color=vt.createBuffer());var r=e.getAttributes();if(t.hasPositions&&(vt.bindBuffer(vt.ARRAY_BUFFER,n.position),vt.bufferData(vt.ARRAY_BUFFER,t.positionArray,vt.DYNAMIC_DRAW),Mt.enableAttribute(r.position),vt.vertexAttribPointer(r.position,3,vt.FLOAT,!1,0,0)),t.hasNormals){if(vt.bindBuffer(vt.ARRAY_BUFFER,n.normal),!i.isMeshPhongMaterial&&!i.isMeshStandardMaterial&&!i.isMeshNormalMaterial&&!0===i.flatShading)for(var a=0,o=3*t.count;a<o;a+=9){var s=t.normalArray,h=(s[a+0]+s[a+3]+s[a+6])/3,c=(s[a+1]+s[a+4]+s[a+7])/3,l=(s[a+2]+s[a+5]+s[a+8])/3;s[a+0]=h,s[a+1]=c,s[a+2]=l,s[a+3]=h,s[a+4]=c,s[a+5]=l,s[a+6]=h,s[a+7]=c,s[a+8]=l}vt.bufferData(vt.ARRAY_BUFFER,t.normalArray,vt.DYNAMIC_DRAW),Mt.enableAttribute(r.normal),vt.vertexAttribPointer(r.normal,3,vt.FLOAT,!1,0,0)}t.hasUvs&&i.map&&(vt.bindBuffer(vt.ARRAY_BUFFER,n.uv),vt.bufferData(vt.ARRAY_BUFFER,t.uvArray,vt.DYNAMIC_DRAW),Mt.enableAttribute(r.uv),vt.vertexAttribPointer(r.uv,2,vt.FLOAT,!1,0,0)),t.hasColors&&i.vertexColors!==Ur&&(vt.bindBuffer(vt.ARRAY_BUFFER,n.color),vt.bufferData(vt.ARRAY_BUFFER,t.colorArray,vt.DYNAMIC_DRAW),Mt.enableAttribute(r.color),vt.vertexAttribPointer(r.color,3,vt.FLOAT,!1,0,0)),Mt.disableUnusedAttributes(),vt.drawArrays(vt.TRIANGLES,0,t.count),t.count=0},this.renderBufferDirect=function(t,i,n,r,a,o){var s=a.isMesh&&a.matrixWorld.determinant()<0;Mt.setMaterial(r,s);var h=g(t,i,r,a),c=n.id+"_"+h.id+"_"+(!0===r.wireframe),l=!1;c!==G&&(G=c,l=!0),a.morphTargetInfluences&&(kt.update(a,n,r,h),l=!0);var u=n.index,p=n.attributes.position,d=1;!0===r.wireframe&&(u=Rt.getWireframeAttribute(n),d=2);var f,m=jt;null!==u&&(f=It.get(u),(m=Wt).setIndex(f)),l&&(!function(t,e,i,n){if(!i||!i.isInstancedBufferGeometry||null!==_t.get("ANGLE_instanced_arrays")){void 0===n&&(n=0),Mt.initAttributes();var r=i.attributes,a=e.getAttributes(),o=t.defaultAttributeValues;for(var s in a){var h=a[s];if(h>=0){var c=r[s];if(void 0!==c){var l=c.normalized,u=c.itemSize,p=It.get(c);if(void 0===p)continue;var d=p.buffer,f=p.type,m=p.bytesPerElement;if(c.isInterleavedBufferAttribute){var v=c.data,g=v.stride,y=c.offset;v&&v.isInstancedInterleavedBuffer?(Mt.enableAttributeAndDivisor(h,v.meshPerAttribute),void 0===i.maxInstancedCount&&(i.maxInstancedCount=v.meshPerAttribute*v.count)):Mt.enableAttribute(h),vt.bindBuffer(vt.ARRAY_BUFFER,d),vt.vertexAttribPointer(h,u,f,l,g*m,(n*g+y)*m)}else c.isInstancedBufferAttribute?(Mt.enableAttributeAndDivisor(h,c.meshPerAttribute),void 0===i.maxInstancedCount&&(i.maxInstancedCount=c.meshPerAttribute*c.count)):Mt.enableAttribute(h),vt.bindBuffer(vt.ARRAY_BUFFER,d),vt.vertexAttribPointer(h,u,f,l,0,n*u*m)}else if(void 0!==o){var x=o[s];if(void 0!==x)switch(x.length){case 2:vt.vertexAttrib2fv(h,x);break;case 3:vt.vertexAttrib3fv(h,x);break;case 4:vt.vertexAttrib4fv(h,x);break;default:vt.vertexAttrib1fv(h,x)}}}}Mt.disableUnusedAttributes()}}(r,h,n),null!==u&&vt.bindBuffer(vt.ELEMENT_ARRAY_BUFFER,f.buffer));var v=0;null!==u?v=u.count:void 0!==p&&(v=p.count);var y=n.drawRange.start*d,x=n.drawRange.count*d,_=null!==o?o.start*d:0,b=null!==o?o.count*d:1/0,M=Math.max(y,_),w=Math.min(v,y+x,_+b)-1,S=Math.max(0,w-M+1);if(0!==S){if(a.isMesh)if(!0===r.wireframe)Mt.setLineWidth(r.wireframeLinewidth*e()),m.setMode(vt.LINES);else switch(a.drawMode){case go:m.setMode(vt.TRIANGLES);break;case yo:m.setMode(vt.TRIANGLE_STRIP);break;case xo:m.setMode(vt.TRIANGLE_FAN)}else if(a.isLine){var T=r.linewidth;void 0===T&&(T=1),Mt.setLineWidth(T*e()),a.isLineSegments?m.setMode(vt.LINES):a.isLineLoop?m.setMode(vt.LINE_LOOP):m.setMode(vt.LINE_STRIP)}else a.isPoints&&m.setMode(vt.POINTS);n&&n.isInstancedBufferGeometry?n.maxInstancedCount>0&&m.renderInstances(n,M,S):m.render(M,S)}},this.compile=function(t,e){C.length=0,I.length=0,t.traverse(function(t){t.isLight&&(C.push(t),t.castShadow&&I.push(t))}),Dt.setup(C,I,e),t.traverse(function(e){if(e.material)if(Array.isArray(e.material))for(var i=0;i<e.material.length;i++)v(e.material[i],t.fog,e);else v(e.material,t.fog,e)})};var te=!1,ee=null;this.animate=function(t){ee=t,function(){if(!te){var t=Jt.getDevice();t&&t.isPresenting?t.requestAnimationFrame(p):window.requestAnimationFrame(p),te=!0}}()},this.render=function(t,e,i,n){if(e&&e.isCamera&&!U){G="",B=-1,V=null,!0===t.autoUpdate&&t.updateMatrixWorld(),null===e.parent&&e.updateMatrixWorld(),Jt.enabled&&(e=Jt.getCamera(e)),pt.multiplyMatrices(e.projectionMatrix,e.matrixWorldInverse),st.setFromMatrix(pt),C.length=0,I.length=0,N.length=0,O.length=0,ut=this.localClippingEnabled,lt=ht.init(this.clippingPlanes,ut,e),(R=Gt.get(t,e)).init(),d(t,e,D.sortObjects),!0===D.sortObjects&&R.sort(),Et.updateVideoTextures(),lt&&ht.beginShadows(),Qt.render(I,t,e),Dt.setup(C,I,e),lt&&ht.endShadows(),mt.frame++,mt.calls=0,mt.vertices=0,mt.faces=0,mt.points=0,void 0===i&&(i=null),this.setRenderTarget(i),Vt.render(R,t,e,n);var r=R.opaque,a=R.transparent;if(t.overrideMaterial){var o=t.overrideMaterial;r.length&&f(r,t,e,o),a.length&&f(a,t,e,o)}else r.length&&f(r,t,e),a.length&&f(a,t,e);Xt.render(N,t,e),Ht.render(O,t,e,j),i&&Et.updateRenderTargetMipmap(i),Mt.buffers.depth.setTest(!0),Mt.buffers.depth.setMask(!0),Mt.buffers.color.setMask(!0),Mt.setPolygonOffset(!1),Jt.enabled&&Jt.submitFrame()}},this.setFaceCulling=function(t,e){Mt.setCullFace(t),Mt.setFlipSided(e===Cr)},this.allocTextureUnit=function(){var t=J;return bt.maxTextures,J+=1,t},this.setTexture2D=function(){var t=!1;return function(e,i){e&&e.isWebGLRenderTarget&&(t||(t=!0),e=e.texture),Et.setTexture2D(e,i)}}(),this.setTexture=function(){var t=!1;return function(e,i){t||(t=!0),Et.setTexture2D(e,i)}}(),this.setTextureCube=function(){var t=!1;return function(e,i){e&&e.isWebGLRenderTargetCube&&(t||(t=!0),e=e.texture),e&&e.isCubeTexture||Array.isArray(e.image)&&6===e.image.length?Et.setTextureCube(e,i):Et.setTextureCubeDynamic(e,i)}}(),this.getRenderTarget=function(){return F},this.setRenderTarget=function(t){F=t,t&&void 0===Tt.get(t).__webglFramebuffer&&Et.setupRenderTarget(t);var e=null,i=!1;if(t){var n=Tt.get(t).__webglFramebuffer;t.isWebGLRenderTargetCube?(e=n[t.activeCubeFace],i=!0):e=n,j.copy(t.viewport),X.copy(t.scissor),Y=t.scissorTest}else j.copy(tt).multiplyScalar($),X.copy(at).multiplyScalar($),Y=ot;if(z!==e&&(vt.bindFramebuffer(vt.FRAMEBUFFER,e),z=e),Mt.viewport(j),Mt.scissor(X),Mt.setScissorTest(Y),i){var r=Tt.get(t.texture);vt.framebufferTexture2D(vt.FRAMEBUFFER,vt.COLOR_ATTACHMENT0,vt.TEXTURE_CUBE_MAP_POSITIVE_X+t.activeCubeFace,r.__webglTexture,t.activeMipMapLevel)}},this.readRenderTargetPixels=function(t,e,i,n,r,a){if(t&&t.isWebGLRenderTarget){var o=Tt.get(t).__webglFramebuffer;if(o){var s=!1;o!==z&&(vt.bindFramebuffer(vt.FRAMEBUFFER,o),s=!0);try{var h=t.texture,c=h.format,l=h.type;if(c!==$a&&qt.convert(c)!==vt.getParameter(vt.IMPLEMENTATION_COLOR_READ_FORMAT))return;if(!(l===Ba||qt.convert(l)===vt.getParameter(vt.IMPLEMENTATION_COLOR_READ_TYPE)||l===Ha&&(_t.get("OES_texture_float")||_t.get("WEBGL_color_buffer_float"))||l===Xa&&_t.get("EXT_color_buffer_half_float")))return;vt.checkFramebufferStatus(vt.FRAMEBUFFER)===vt.FRAMEBUFFER_COMPLETE&&e>=0&&e<=t.width-n&&i>=0&&i<=t.height-r&&vt.readPixels(e,i,n,r,qt.convert(c),qt.convert(l),a)}finally{s&&vt.bindFramebuffer(vt.FRAMEBUFFER,z)}}}}}function ee(t,e){this.name="",this.color=new H(t),this.density=void 0!==e?e:25e-5}function ie(t,e,i){this.name="",this.color=new H(t),this.near=void 0!==e?e:1,this.far=void 0!==i?i:1e3}function ne(){st.call(this),this.type="Scene",this.background=null,this.fog=null,this.overrideMaterial=null,this.autoUpdate=!0}function re(t,e,i,n,r){st.call(this),this.lensFlares=[],this.positionScreen=new a,this.customUpdateCallback=void 0,void 0!==t&&this.add(t,e,i,n,r)}function ae(t){J.call(this),this.type="SpriteMaterial",this.color=new H(16777215),this.map=null,this.rotation=0,this.fog=!1,this.lights=!1,this.setValues(t)}function oe(t){st.call(this),this.type="Sprite",this.material=void 0!==t?t:new ae}function se(){st.call(this),this.type="LOD",Object.defineProperties(this,{levels:{enumerable:!0,value:[]}})}function he(t,e){if(t=t||[],this.bones=t.slice(0),this.boneMatrices=new Float32Array(16*this.bones.length),void 0===e)this.calculateInverses();else if(this.bones.length===e.length)this.boneInverses=e.slice(0);else{this.boneInverses=[];for(var i=0,r=this.bones.length;i<r;i++)this.boneInverses.push(new n)}}function ce(){st.call(this),this.type="Bone"}function le(t,e){Ot.call(this,t,e),this.type="SkinnedMesh",this.bindMode="attached",this.bindMatrix=new n,this.bindMatrixInverse=new n;var i=new he(this.initBones());this.bind(i,this.matrixWorld),this.normalizeSkinWeights()}function ue(t){J.call(this),this.type="LineBasicMaterial",this.color=new H(16777215),this.linewidth=1,this.linecap="round",this.linejoin="round",this.lights=!1,this.setValues(t)}function pe(t,e,i){if(1===i)return new de(t,e);st.call(this),this.type="Line",this.geometry=void 0!==t?t:new St,this.material=void 0!==e?e:new ue({color:16777215*Math.random()})}function de(t,e){pe.call(this,t,e),this.type="LineSegments"}function fe(t,e){pe.call(this,t,e),this.type="LineLoop"}function me(t){J.call(this),this.type="PointsMaterial",this.color=new H(16777215),this.map=null,this.size=1,this.sizeAttenuation=!0,this.lights=!1,this.setValues(t)}function ve(t,e){st.call(this),this.type="Points",this.geometry=void 0!==t?t:new St,this.material=void 0!==e?e:new me({color:16777215*Math.random()})}function ge(){st.call(this),this.type="Group"}function ye(t,e,i,n,r,a,o,h,c){function l(){t.removeEventListener("loadeddata",l,!1),u.needsUpdate=!0}s.call(this,t,e,i,n,r,a,o,h,c),this.generateMipmaps=!1;var u=this;t.addEventListener("loadeddata",l,!1)}function xe(t,e,i,n,r,a,o,h,c,l,u,p){s.call(this,null,a,o,h,c,l,n,r,u,p),this.image={width:e,height:i},this.mipmaps=t,this.flipY=!1,this.generateMipmaps=!1}function _e(t,e,i,n,r,a,o,h,c,l){if((l=void 0!==l?l:no)!==no&&l!==ro)throw new Error("DepthTexture format must be either THREE.DepthFormat or THREE.DepthStencilFormat");void 0===i&&l===no&&(i=ka),void 0===i&&l===ro&&(i=Ja),s.call(this,null,n,r,a,o,h,l,i,c),this.image={width:t,height:e},this.magFilter=void 0!==o?o:Na,this.minFilter=void 0!==h?h:Na,this.flipY=!1,this.generateMipmaps=!1}function be(t){St.call(this),this.type="WireframeGeometry";var e,i,n,r,o,s,h,c,l,u,p=[],d=[0,0],f={},m=["a","b","c"];if(t&&t.isGeometry){var v=t.faces;for(e=0,n=v.length;e<n;e++){var g=v[e];for(i=0;i<3;i++)h=g[m[i]],c=g[m[(i+1)%3]],d[0]=Math.min(h,c),d[1]=Math.max(h,c),void 0===f[l=d[0]+","+d[1]]&&(f[l]={index1:d[0],index2:d[1]})}for(l in f)s=f[l],u=t.vertices[s.index1],p.push(u.x,u.y,u.z),u=t.vertices[s.index2],p.push(u.x,u.y,u.z)}else if(t&&t.isBufferGeometry){var y,x,_,b,M,w,S;if(u=new a,null!==t.index){for(y=t.attributes.position,x=t.index,0===(_=t.groups).length&&(_=[{start:0,count:x.count,materialIndex:0}]),r=0,o=_.length;r<o;++r)for(e=M=(b=_[r]).start,n=M+b.count;e<n;e+=3)for(i=0;i<3;i++)h=x.getX(e+i),c=x.getX(e+(i+1)%3),d[0]=Math.min(h,c),d[1]=Math.max(h,c),void 0===f[l=d[0]+","+d[1]]&&(f[l]={index1:d[0],index2:d[1]});for(l in f)s=f[l],u.fromBufferAttribute(y,s.index1),p.push(u.x,u.y,u.z),u.fromBufferAttribute(y,s.index2),p.push(u.x,u.y,u.z)}else for(e=0,n=(y=t.attributes.position).count/3;e<n;e++)for(i=0;i<3;i++)w=3*e+i,u.fromBufferAttribute(y,w),p.push(u.x,u.y,u.z),S=3*e+(i+1)%3,u.fromBufferAttribute(y,S),p.push(u.x,u.y,u.z)}this.addAttribute("position",new _t(p,3))}function Me(t,e,i){ut.call(this),this.type="ParametricGeometry",this.parameters={func:t,slices:e,stacks:i},this.fromBufferGeometry(new we(t,e,i)),this.mergeVertices()}function we(t,e,i){St.call(this),this.type="ParametricBufferGeometry",this.parameters={func:t,slices:e,stacks:i};var n,r,o=[],s=[],h=[],c=[],l=new a,u=new a,p=new a,d=new a,f=new a,m=e+1;for(n=0;n<=i;n++){var v=n/i;for(r=0;r<=e;r++){var g=r/e;u=t(g,v,u),s.push(u.x,u.y,u.z),g-1e-5>=0?(p=t(g-1e-5,v,p),d.subVectors(u,p)):(p=t(g+1e-5,v,p),d.subVectors(p,u)),v-1e-5>=0?(p=t(g,v-1e-5,p),f.subVectors(u,p)):(p=t(g,v+1e-5,p),f.subVectors(p,u)),l.crossVectors(d,f).normalize(),h.push(l.x,l.y,l.z),c.push(g,v)}}for(n=0;n<i;n++)for(r=0;r<e;r++){var y=n*m+r,x=n*m+r+1,_=(n+1)*m+r+1,b=(n+1)*m+r;o.push(y,x,b),o.push(x,_,b)}this.setIndex(o),this.addAttribute("position",new _t(s,3)),this.addAttribute("normal",new _t(h,3)),this.addAttribute("uv",new _t(c,2))}function Se(t,e,i,n){ut.call(this),this.type="PolyhedronGeometry",this.parameters={vertices:t,indices:e,radius:i,detail:n},this.fromBufferGeometry(new Te(t,e,i,n)),this.mergeVertices()}function Te(t,e,n,r){function o(t){l.push(t.x,t.y,t.z)}function s(e,i){var n=3*e;i.x=t[n+0],i.y=t[n+1],i.z=t[n+2]}function h(t,e,i,n){n<0&&1===t.x&&(u[e]=t.x-1),0===i.x&&0===i.z&&(u[e]=n/2/Math.PI+.5)}function c(t){return Math.atan2(t.z,-t.x)}St.call(this),this.type="PolyhedronBufferGeometry",this.parameters={vertices:t,indices:e,radius:n,detail:r},n=n||1;var l=[],u=[];!function(t){for(var i=new a,n=new a,r=new a,h=0;h<e.length;h+=3)s(e[h+0],i),s(e[h+1],n),s(e[h+2],r),function(t,e,i,n){var r,a,s=Math.pow(2,n),h=[];for(r=0;r<=s;r++){h[r]=[];var c=t.clone().lerp(i,r/s),l=e.clone().lerp(i,r/s),u=s-r;for(a=0;a<=u;a++)h[r][a]=0===a&&r===s?c:c.clone().lerp(l,a/u)}for(r=0;r<s;r++)for(a=0;a<2*(s-r)-1;a++){var p=Math.floor(a/2);a%2==0?(o(h[r][p+1]),o(h[r+1][p]),o(h[r][p])):(o(h[r][p+1]),o(h[r+1][p+1]),o(h[r+1][p]))}}(i,n,r,t)}(r=r||0),function(t){for(var e=new a,i=0;i<l.length;i+=3)e.x=l[i+0],e.y=l[i+1],e.z=l[i+2],e.normalize().multiplyScalar(t),l[i+0]=e.x,l[i+1]=e.y,l[i+2]=e.z}(n),function(){for(var t=new a,e=0;e<l.length;e+=3){t.x=l[e+0],t.y=l[e+1],t.z=l[e+2];var n=c(t)/2/Math.PI+.5,r=function(t){return Math.atan2(-t.y,Math.sqrt(t.x*t.x+t.z*t.z))}(t)/Math.PI+.5;u.push(n,1-r)}!function(){for(var t=new a,e=new a,n=new a,r=new a,o=new i,s=new i,p=new i,d=0,f=0;d<l.length;d+=9,f+=6){t.set(l[d+0],l[d+1],l[d+2]),e.set(l[d+3],l[d+4],l[d+5]),n.set(l[d+6],l[d+7],l[d+8]),o.set(u[f+0],u[f+1]),s.set(u[f+2],u[f+3]),p.set(u[f+4],u[f+5]),r.copy(t).add(e).add(n).divideScalar(3);var m=c(r);h(o,f+0,t,m),h(s,f+2,e,m),h(p,f+4,n,m)}}(),function(){for(var t=0;t<u.length;t+=6){var e=u[t+0],i=u[t+2],n=u[t+4],r=Math.max(e,i,n),a=Math.min(e,i,n);r>.9&&a<.1&&(e<.2&&(u[t+0]+=1),i<.2&&(u[t+2]+=1),n<.2&&(u[t+4]+=1))}}()}(),this.addAttribute("position",new _t(l,3)),this.addAttribute("normal",new _t(l.slice(),3)),this.addAttribute("uv",new _t(u,2)),0===r?this.computeVertexNormals():this.normalizeNormals()}function Ae(t,e){ut.call(this),this.type="TetrahedronGeometry",this.parameters={radius:t,detail:e},this.fromBufferGeometry(new Ee(t,e)),this.mergeVertices()}function Ee(t,e){Te.call(this,[1,1,1,-1,-1,1,-1,1,-1,1,-1,-1],[2,1,0,0,3,2,1,3,0,2,3,1],t,e),this.type="TetrahedronBufferGeometry",this.parameters={radius:t,detail:e}}function Le(t,e){ut.call(this),this.type="OctahedronGeometry",this.parameters={radius:t,detail:e},this.fromBufferGeometry(new Pe(t,e)),this.mergeVertices()}function Pe(t,e){Te.call(this,[1,0,0,-1,0,0,0,1,0,0,-1,0,0,0,1,0,0,-1],[0,2,4,0,4,3,0,3,5,0,5,2,1,2,5,1,5,3,1,3,4,1,4,2],t,e),this.type="OctahedronBufferGeometry",this.parameters={radius:t,detail:e}}function Ce(t,e){ut.call(this),this.type="IcosahedronGeometry",this.parameters={radius:t,detail:e},this.fromBufferGeometry(new Ie(t,e)),this.mergeVertices()}function Ie(t,e){var i=(1+Math.sqrt(5))/2;Te.call(this,[-1,i,0,1,i,0,-1,-i,0,1,-i,0,0,-1,i,0,1,i,0,-1,-i,0,1,-i,i,0,-1,i,0,1,-i,0,-1,-i,0,1],[0,11,5,0,5,1,0,1,7,0,7,10,0,10,11,1,5,9,5,11,4,11,10,2,10,7,6,7,1,8,3,9,4,3,4,2,3,2,6,3,6,8,3,8,9,4,9,5,2,4,11,6,2,10,8,6,7,9,8,1],t,e),this.type="IcosahedronBufferGeometry",this.parameters={radius:t,detail:e}}function Re(t,e){ut.call(this),this.type="DodecahedronGeometry",this.parameters={radius:t,detail:e},this.fromBufferGeometry(new Ne(t,e)),this.mergeVertices()}function Ne(t,e){var i=(1+Math.sqrt(5))/2,n=1/i;Te.call(this,[-1,-1,-1,-1,-1,1,-1,1,-1,-1,1,1,1,-1,-1,1,-1,1,1,1,-1,1,1,1,0,-n,-i,0,-n,i,0,n,-i,0,n,i,-n,-i,0,-n,i,0,n,-i,0,n,i,0,-i,0,-n,i,0,-n,-i,0,n,i,0,n],[3,11,7,3,7,15,3,15,13,7,19,17,7,17,6,7,6,15,17,4,8,17,8,10,17,10,6,8,0,16,8,16,2,8,2,10,0,12,1,0,1,18,0,18,16,6,10,2,6,2,13,6,13,15,2,16,18,2,18,3,2,3,13,18,1,9,18,9,11,18,11,3,4,14,12,4,12,0,4,0,8,11,9,5,11,5,19,11,19,7,19,5,14,19,14,4,19,4,17,1,12,14,1,14,5,1,5,9],t,e),this.type="DodecahedronBufferGeometry",this.parameters={radius:t,detail:e}}function Oe(t,e,i,n,r,a){ut.call(this),this.type="TubeGeometry",this.parameters={path:t,tubularSegments:e,radius:i,radialSegments:n,closed:r};var o=new De(t,e,i,n,r);this.tangents=o.tangents,this.normals=o.normals,this.binormals=o.binormals,this.fromBufferGeometry(o),this.mergeVertices()}function De(t,e,n,r,o){function s(i){f=t.getPointAt(i/e,f);var a=h.normals[i],o=h.binormals[i];for(l=0;l<=r;l++){var s=l/r*Math.PI*2,c=Math.sin(s),d=-Math.cos(s);p.x=d*a.x+c*o.x,p.y=d*a.y+c*o.y,p.z=d*a.z+c*o.z,p.normalize(),v.push(p.x,p.y,p.z),u.x=f.x+n*p.x,u.y=f.y+n*p.y,u.z=f.z+n*p.z,m.push(u.x,u.y,u.z)}}St.call(this),this.type="TubeBufferGeometry",this.parameters={path:t,tubularSegments:e,radius:n,radialSegments:r,closed:o},e=e||64,n=n||1,r=r||8,o=o||!1;var h=t.computeFrenetFrames(e,o);this.tangents=h.tangents,this.normals=h.normals,this.binormals=h.binormals;var c,l,u=new a,p=new a,d=new i,f=new a,m=[],v=[],g=[],y=[];!function(){for(c=0;c<e;c++)s(c);s(!1===o?e:0),function(){for(c=0;c<=e;c++)for(l=0;l<=r;l++)d.x=c/e,d.y=l/r,g.push(d.x,d.y)}(),function(){for(l=1;l<=e;l++)for(c=1;c<=r;c++){var t=(r+1)*(l-1)+(c-1),i=(r+1)*l+(c-1),n=(r+1)*l+c,a=(r+1)*(l-1)+c;y.push(t,i,a),y.push(i,n,a)}}()}(),this.setIndex(y),this.addAttribute("position",new _t(m,3)),this.addAttribute("normal",new _t(v,3)),this.addAttribute("uv",new _t(g,2))}function Ue(t,e,i,n,r,a,o){ut.call(this),this.type="TorusKnotGeometry",this.parameters={radius:t,tube:e,tubularSegments:i,radialSegments:n,p:r,q:a},this.fromBufferGeometry(new Fe(t,e,i,n,r,a)),this.mergeVertices()}function Fe(t,e,i,n,r,o){function s(t,e,i,n,r){var a=Math.cos(t),o=Math.sin(t),s=i/e*t,h=Math.cos(s);r.x=n*(2+h)*.5*a,r.y=n*(2+h)*o*.5,r.z=n*Math.sin(s)*.5}St.call(this),this.type="TorusKnotBufferGeometry",this.parameters={radius:t,tube:e,tubularSegments:i,radialSegments:n,p:r,q:o},t=t||1,e=e||.4,i=Math.floor(i)||64,n=Math.floor(n)||8,r=r||2,o=o||3;var h,c,l=[],u=[],p=[],d=[],f=new a,m=new a,v=new a,g=new a,y=new a,x=new a,_=new a;for(h=0;h<=i;++h){var b=h/i*r*Math.PI*2;for(s(b,r,o,t,v),s(b+.01,r,o,t,g),x.subVectors(g,v),_.addVectors(g,v),y.crossVectors(x,_),_.crossVectors(y,x),y.normalize(),_.normalize(),c=0;c<=n;++c){var M=c/n*Math.PI*2,w=-e*Math.cos(M),S=e*Math.sin(M);f.x=v.x+(w*_.x+S*y.x),f.y=v.y+(w*_.y+S*y.y),f.z=v.z+(w*_.z+S*y.z),u.push(f.x,f.y,f.z),m.subVectors(f,v).normalize(),p.push(m.x,m.y,m.z),d.push(h/i),d.push(c/n)}}for(c=1;c<=i;c++)for(h=1;h<=n;h++){var T=(n+1)*(c-1)+(h-1),A=(n+1)*c+(h-1),E=(n+1)*c+h,L=(n+1)*(c-1)+h;l.push(T,A,L),l.push(A,E,L)}this.setIndex(l),this.addAttribute("position",new _t(u,3)),this.addAttribute("normal",new _t(p,3)),this.addAttribute("uv",new _t(d,2))}function ze(t,e,i,n,r){ut.call(this),this.type="TorusGeometry",this.parameters={radius:t,tube:e,radialSegments:i,tubularSegments:n,arc:r},this.fromBufferGeometry(new Be(t,e,i,n,r)),this.mergeVertices()}function Be(t,e,i,n,r){St.call(this),this.type="TorusBufferGeometry",this.parameters={radius:t,tube:e,radialSegments:i,tubularSegments:n,arc:r},t=t||1,e=e||.4,i=Math.floor(i)||8,n=Math.floor(n)||6,r=r||2*Math.PI;var o,s,h=[],c=[],l=[],u=[],p=new a,d=new a,f=new a;for(o=0;o<=i;o++)for(s=0;s<=n;s++){var m=s/n*r,v=o/i*Math.PI*2;d.x=(t+e*Math.cos(v))*Math.cos(m),d.y=(t+e*Math.cos(v))*Math.sin(m),d.z=e*Math.sin(v),c.push(d.x,d.y,d.z),p.x=t*Math.cos(m),p.y=t*Math.sin(m),f.subVectors(d,p).normalize(),l.push(f.x,f.y,f.z),u.push(s/n),u.push(o/i)}for(o=1;o<=i;o++)for(s=1;s<=n;s++){var g=(n+1)*o+s-1,y=(n+1)*(o-1)+s-1,x=(n+1)*(o-1)+s,_=(n+1)*o+s;h.push(g,y,_),h.push(y,x,_)}this.setIndex(h),this.addAttribute("position",new _t(c,3)),this.addAttribute("normal",new _t(l,3)),this.addAttribute("uv",new _t(u,2))}function Ge(t,e,i,n,r){var a,o;if(r===function(t,e,i,n){for(var r=0,a=e,o=i-n;a<i;a+=n)r+=(t[o]-t[a])*(t[a+1]+t[o+1]),o=a;return r}(t,e,i,n)>0)for(a=e;a<i;a+=n)o=Ke(a,t[a],t[a+1],o);else for(a=i-n;a>=e;a-=n)o=Ke(a,t[a],t[a+1],o);return o&&Ye(o,o.next)&&($e(o),o=o.next),o}function Ve(t,e){if(!t)return t;e||(e=t);var i,n=t;do{if(i=!1,n.steiner||!Ye(n,n.next)&&0!==qe(n.prev,n,n.next))n=n.next;else{if($e(n),(n=e=n.prev)===n.next)break;i=!0}}while(i||n!==e);return e}function ke(t,e,i,n,r,a,o){if(t){!o&&a&&function(t,e,i,n){var r=t;do{null===r.z&&(r.z=He(r.x,r.y,e,i,n)),r.prevZ=r.prev,r.nextZ=r.next,r=r.next}while(r!==t);r.prevZ.nextZ=null,r.prevZ=null,function(t){var e,i,n,r,a,o,s,h,c=1;do{for(i=t,t=null,a=null,o=0;i;){for(o++,n=i,s=0,e=0;e<c&&(s++,n=n.nextZ);e++);for(h=c;s>0||h>0&&n;)0!==s&&(0===h||!n||i.z<=n.z)?(r=i,i=i.nextZ,s--):(r=n,n=n.nextZ,h--),a?a.nextZ=r:t=r,r.prevZ=a,a=r;i=n}a.nextZ=null,c*=2}while(o>1)}(r)}(t,n,r,a);for(var s,h,c=t;t.prev!==t.next;)if(s=t.prev,h=t.next,a?function(t,e,i,n){var r=t.prev,a=t,o=t.next;if(qe(r,a,o)>=0)return!1;var s=r.x<a.x?r.x<o.x?r.x:o.x:a.x<o.x?a.x:o.x,h=r.y<a.y?r.y<o.y?r.y:o.y:a.y<o.y?a.y:o.y,c=r.x>a.x?r.x>o.x?r.x:o.x:a.x>o.x?a.x:o.x,l=r.y>a.y?r.y>o.y?r.y:o.y:a.y>o.y?a.y:o.y,u=He(s,h,e,i,n),p=He(c,l,e,i,n),d=t.nextZ;for(;d&&d.z<=p;){if(d!==t.prev&&d!==t.next&&Xe(r.x,r.y,a.x,a.y,o.x,o.y,d.x,d.y)&&qe(d.prev,d,d.next)>=0)return!1;d=d.nextZ}d=t.prevZ;for(;d&&d.z>=u;){if(d!==t.prev&&d!==t.next&&Xe(r.x,r.y,a.x,a.y,o.x,o.y,d.x,d.y)&&qe(d.prev,d,d.next)>=0)return!1;d=d.prevZ}return!0}(t,n,r,a):function(t){var e=t.prev,i=t,n=t.next;if(qe(e,i,n)>=0)return!1;var r=t.next.next;for(;r!==t.prev;){if(Xe(e.x,e.y,i.x,i.y,n.x,n.y,r.x,r.y)&&qe(r.prev,r,r.next)>=0)return!1;r=r.next}return!0}(t))e.push(s.i/i),e.push(t.i/i),e.push(h.i/i),$e(t),t=h.next,c=h.next;else if((t=h)===c){o?1===o?ke(t=function(t,e,i){var n=t;do{var r=n.prev,a=n.next.next;!Ye(r,a)&&Ze(r,n,n.next,a)&&Je(r,a)&&Je(a,r)&&(e.push(r.i/i),e.push(n.i/i),e.push(a.i/i),$e(n),$e(n.next),n=t=a),n=n.next}while(n!==t);return n}(t,e,i),e,i,n,r,a,2):2===o&&function(t,e,i,n,r,a){var o=t;do{for(var s=o.next.next;s!==o.prev;){if(o.i!==s.i&&function(t,e){return t.next.i!==e.i&&t.prev.i!==e.i&&!function(t,e){var i=t;do{if(i.i!==t.i&&i.next.i!==t.i&&i.i!==e.i&&i.next.i!==e.i&&Ze(i,i.next,t,e))return!0;i=i.next}while(i!==t);return!1}(t,e)&&Je(t,e)&&Je(e,t)&&function(t,e){var i=t,n=!1,r=(t.x+e.x)/2,a=(t.y+e.y)/2;do{i.y>a!=i.next.y>a&&i.next.y!==i.y&&r<(i.next.x-i.x)*(a-i.y)/(i.next.y-i.y)+i.x&&(n=!n),i=i.next}while(i!==t);return n}(t,e)}(o,s)){var h=Qe(o,s);return o=Ve(o,o.next),h=Ve(h,h.next),ke(o,e,i,n,r,a),void ke(h,e,i,n,r,a)}s=s.next}o=o.next}while(o!==t)}(t,e,i,n,r,a):ke(Ve(t),e,i,n,r,a,1);break}}}function je(t,e,i,n){var r,a,o,s=[];for(r=0,a=e.length;r<a;r++)(o=Ge(t,e[r]*n,r<a-1?e[r+1]*n:t.length,n,!1))===o.next&&(o.steiner=!0),s.push(function(t){var e=t,i=t;do{e.x<i.x&&(i=e),e=e.next}while(e!==t);return i}(o));for(s.sort(We),r=0;r<s.length;r++)!function(t,e){if(e=function(t,e){var i,n=e,r=t.x,a=t.y,o=-1/0;do{if(a<=n.y&&a>=n.next.y&&n.next.y!==n.y){var s=n.x+(a-n.y)*(n.next.x-n.x)/(n.next.y-n.y);if(s<=r&&s>o){if(o=s,s===r){if(a===n.y)return n;if(a===n.next.y)return n.next}i=n.x<n.next.x?n:n.next}}n=n.next}while(n!==e);if(!i)return null;if(r===o)return i.prev;var h,c=i,l=i.x,u=i.y,p=1/0;for(n=i.next;n!==c;)r>=n.x&&n.x>=l&&r!==n.x&&Xe(a<u?r:o,a,l,u,a<u?o:r,a,n.x,n.y)&&((h=Math.abs(a-n.y)/(r-n.x))<p||h===p&&n.x>i.x)&&Je(n,t)&&(i=n,p=h),n=n.next;return i}(t,e)){var i=Qe(e,t);Ve(i,i.next)}}(s[r],i),i=Ve(i,i.next);return i}function We(t,e){return t.x-e.x}function He(t,e,i,n,r){return t=32767*(t-i)*r,e=32767*(e-n)*r,t=16711935&(t|t<<8),t=252645135&(t|t<<4),t=858993459&(t|t<<2),t=1431655765&(t|t<<1),e=16711935&(e|e<<8),e=252645135&(e|e<<4),e=858993459&(e|e<<2),e=1431655765&(e|e<<1),t|e<<1}function Xe(t,e,i,n,r,a,o,s){return(r-o)*(e-s)-(t-o)*(a-s)>=0&&(t-o)*(n-s)-(i-o)*(e-s)>=0&&(i-o)*(a-s)-(r-o)*(n-s)>=0}function qe(t,e,i){return(e.y-t.y)*(i.x-e.x)-(e.x-t.x)*(i.y-e.y)}function Ye(t,e){return t.x===e.x&&t.y===e.y}function Ze(t,e,i,n){return!!(Ye(t,e)&&Ye(i,n)||Ye(t,n)&&Ye(i,e))||qe(t,e,i)>0!=qe(t,e,n)>0&&qe(i,n,t)>0!=qe(i,n,e)>0}function Je(t,e){return qe(t.prev,t,t.next)<0?qe(t,e,t.next)>=0&&qe(t,t.prev,e)>=0:qe(t,e,t.prev)<0||qe(t,t.next,e)<0}function Qe(t,e){var i=new ti(t.i,t.x,t.y),n=new ti(e.i,e.x,e.y),r=t.next,a=e.prev;return t.next=e,e.prev=t,i.next=r,r.prev=i,n.next=i,i.prev=n,a.next=n,n.prev=a,n}function Ke(t,e,i,n){var r=new ti(t,e,i);return n?(r.next=n.next,r.prev=n,n.next.prev=r,n.next=r):(r.prev=r,r.next=r),r}function $e(t){t.next.prev=t.prev,t.prev.next=t.next,t.prevZ&&(t.prevZ.nextZ=t.nextZ),t.nextZ&&(t.nextZ.prevZ=t.prevZ)}function ti(t,e,i){this.i=t,this.x=e,this.y=i,this.prev=null,this.next=null,this.z=null,this.prevZ=null,this.nextZ=null,this.steiner=!1}function ei(t,e){ut.call(this),this.type="ExtrudeGeometry",this.parameters={shapes:t,options:e},this.fromBufferGeometry(new ii(t,e)),this.mergeVertices()}function ii(t,e){void 0!==t&&(St.call(this),this.type="ExtrudeBufferGeometry",t=Array.isArray(t)?t:[t],this.addShapeList(t,e),this.computeVertexNormals())}function ni(t,e){ut.call(this),this.type="TextGeometry",this.parameters={text:t,parameters:e},this.fromBufferGeometry(new ri(t,e)),this.mergeVertices()}function ri(t,e){var i=(e=e||{}).font;if(!i||!i.isFont)return new ut;var n=i.generateShapes(t,e.size,e.curveSegments);e.amount=void 0!==e.height?e.height:50,void 0===e.bevelThickness&&(e.bevelThickness=10),void 0===e.bevelSize&&(e.bevelSize=8),void 0===e.bevelEnabled&&(e.bevelEnabled=!1),ii.call(this,n,e),this.type="TextBufferGeometry"}function ai(t,e,i,n,r,a,o){ut.call(this),this.type="SphereGeometry",this.parameters={radius:t,widthSegments:e,heightSegments:i,phiStart:n,phiLength:r,thetaStart:a,thetaLength:o},this.fromBufferGeometry(new oi(t,e,i,n,r,a,o)),this.mergeVertices()}function oi(t,e,i,n,r,o,s){St.call(this),this.type="SphereBufferGeometry",this.parameters={radius:t,widthSegments:e,heightSegments:i,phiStart:n,phiLength:r,thetaStart:o,thetaLength:s},t=t||1,e=Math.max(3,Math.floor(e)||8),i=Math.max(2,Math.floor(i)||6),n=void 0!==n?n:0,r=void 0!==r?r:2*Math.PI;var h,c,l=(o=void 0!==o?o:0)+(s=void 0!==s?s:Math.PI),u=0,p=[],d=new a,f=new a,m=[],v=[],g=[],y=[];for(c=0;c<=i;c++){var x=[],_=c/i;for(h=0;h<=e;h++){var b=h/e;d.x=-t*Math.cos(n+b*r)*Math.sin(o+_*s),d.y=t*Math.cos(o+_*s),d.z=t*Math.sin(n+b*r)*Math.sin(o+_*s),v.push(d.x,d.y,d.z),f.set(d.x,d.y,d.z).normalize(),g.push(f.x,f.y,f.z),y.push(b,1-_),x.push(u++)}p.push(x)}for(c=0;c<i;c++)for(h=0;h<e;h++){var M=p[c][h+1],w=p[c][h],S=p[c+1][h],T=p[c+1][h+1];(0!==c||o>0)&&m.push(M,w,T),(c!==i-1||l<Math.PI)&&m.push(w,S,T)}this.setIndex(m),this.addAttribute("position",new _t(v,3)),this.addAttribute("normal",new _t(g,3)),this.addAttribute("uv",new _t(y,2))}function si(t,e,i,n,r,a){ut.call(this),this.type="RingGeometry",this.parameters={innerRadius:t,outerRadius:e,thetaSegments:i,phiSegments:n,thetaStart:r,thetaLength:a},this.fromBufferGeometry(new hi(t,e,i,n,r,a)),this.mergeVertices()}function hi(t,e,n,r,o,s){St.call(this),this.type="RingBufferGeometry",this.parameters={innerRadius:t,outerRadius:e,thetaSegments:n,phiSegments:r,thetaStart:o,thetaLength:s},t=t||.5,e=e||1,o=void 0!==o?o:0,s=void 0!==s?s:2*Math.PI,n=void 0!==n?Math.max(3,n):8;var h,c,l,u=[],p=[],d=[],f=[],m=t,v=(e-t)/(r=void 0!==r?Math.max(1,r):1),g=new a,y=new i;for(c=0;c<=r;c++){for(l=0;l<=n;l++)h=o+l/n*s,g.x=m*Math.cos(h),g.y=m*Math.sin(h),p.push(g.x,g.y,g.z),d.push(0,0,1),y.x=(g.x/e+1)/2,y.y=(g.y/e+1)/2,f.push(y.x,y.y);m+=v}for(c=0;c<r;c++){var x=c*(n+1);for(l=0;l<n;l++){var _=h=l+x,b=h+n+1,M=h+n+2,w=h+1;u.push(_,b,w),u.push(b,M,w)}}this.setIndex(u),this.addAttribute("position",new _t(p,3)),this.addAttribute("normal",new _t(d,3)),this.addAttribute("uv",new _t(f,2))}function ci(t,e,i,n){ut.call(this),this.type="LatheGeometry",this.parameters={points:t,segments:e,phiStart:i,phiLength:n},this.fromBufferGeometry(new li(t,e,i,n)),this.mergeVertices()}function li(t,e,n,r){St.call(this),this.type="LatheBufferGeometry",this.parameters={points:t,segments:e,phiStart:n,phiLength:r},e=Math.floor(e)||12,n=n||0,r=r||2*Math.PI,r=Po.clamp(r,0,2*Math.PI);var o,s,h,c=[],l=[],u=[],p=1/e,d=new a,f=new i;for(s=0;s<=e;s++){var m=n+s*p*r,v=Math.sin(m),g=Math.cos(m);for(h=0;h<=t.length-1;h++)d.x=t[h].x*v,d.y=t[h].y,d.z=t[h].x*g,l.push(d.x,d.y,d.z),f.x=s/e,f.y=h/(t.length-1),u.push(f.x,f.y)}for(s=0;s<e;s++)for(h=0;h<t.length-1;h++){var y=o=h+s*t.length,x=o+t.length,_=o+t.length+1,b=o+1;c.push(y,x,b),c.push(x,_,b)}if(this.setIndex(c),this.addAttribute("position",new _t(l,3)),this.addAttribute("uv",new _t(u,2)),this.computeVertexNormals(),r===2*Math.PI){var M=this.attributes.normal.array,w=new a,S=new a,T=new a;for(o=e*t.length*3,s=0,h=0;s<t.length;s++,h+=3)w.x=M[h+0],w.y=M[h+1],w.z=M[h+2],S.x=M[o+h+0],S.y=M[o+h+1],S.z=M[o+h+2],T.addVectors(w,S).normalize(),M[h+0]=M[o+h+0]=T.x,M[h+1]=M[o+h+1]=T.y,M[h+2]=M[o+h+2]=T.z}}function ui(t,e){ut.call(this),this.type="ShapeGeometry","object"==typeof e&&(e=e.curveSegments),this.parameters={shapes:t,curveSegments:e},this.fromBufferGeometry(new pi(t,e)),this.mergeVertices()}function pi(t,e){function i(t){var i,s,c,l=r.length/3,u=t.extractPoints(e),p=u.shape,d=u.holes;if(!1===Zo.isClockWise(p))for(p=p.reverse(),i=0,s=d.length;i<s;i++)c=d[i],!0===Zo.isClockWise(c)&&(d[i]=c.reverse());var f=Zo.triangulateShape(p,d);for(i=0,s=d.length;i<s;i++)c=d[i],p=p.concat(c);for(i=0,s=p.length;i<s;i++){var m=p[i];r.push(m.x,m.y,0),a.push(0,0,1),o.push(m.x,m.y)}for(i=0,s=f.length;i<s;i++){var v=f[i],g=v[0]+l,y=v[1]+l,x=v[2]+l;n.push(g,y,x),h+=3}}St.call(this),this.type="ShapeBufferGeometry",this.parameters={shapes:t,curveSegments:e},e=e||12;var n=[],r=[],a=[],o=[],s=0,h=0;if(!1===Array.isArray(t))i(t);else for(var c=0;c<t.length;c++)i(t[c]),this.addGroup(s,h,c),s+=h,h=0;this.setIndex(n),this.addAttribute("position",new _t(r,3)),this.addAttribute("normal",new _t(a,3)),this.addAttribute("uv",new _t(o,2))}function di(t,e){if(e.shapes=[],Array.isArray(t))for(var i=0,n=t.length;i<n;i++){var r=t[i];e.shapes.push(r.uuid)}else e.shapes.push(t.uuid);return e}function fi(t,e){St.call(this),this.type="EdgesGeometry",this.parameters={thresholdAngle:e},e=void 0!==e?e:1;var i,n,r,a,o=[],s=Math.cos(Po.DEG2RAD*e),h=[0,0],c={},l=["a","b","c"];t.isBufferGeometry?(a=new ut).fromBufferGeometry(t):a=t.clone(),a.mergeVertices(),a.computeFaceNormals();for(var u=a.vertices,p=a.faces,d=0,f=p.length;d<f;d++)for(var m=p[d],v=0;v<3;v++)i=m[l[v]],n=m[l[(v+1)%3]],h[0]=Math.min(i,n),h[1]=Math.max(i,n),void 0===c[r=h[0]+","+h[1]]?c[r]={index1:h[0],index2:h[1],face1:d,face2:void 0}:c[r].face2=d;for(r in c){var g=c[r];if(void 0===g.face2||p[g.face1].normal.dot(p[g.face2].normal)<=s){var y=u[g.index1];o.push(y.x,y.y,y.z),y=u[g.index2],o.push(y.x,y.y,y.z)}}this.addAttribute("position",new _t(o,3))}function mi(t,e,i,n,r,a,o,s){ut.call(this),this.type="CylinderGeometry",this.parameters={radiusTop:t,radiusBottom:e,height:i,radialSegments:n,heightSegments:r,openEnded:a,thetaStart:o,thetaLength:s},this.fromBufferGeometry(new vi(t,e,i,n,r,a,o,s)),this.mergeVertices()}function vi(t,e,n,r,o,s,h,c){function l(n){var o,s,l,g=new i,_=new a,b=0,M=!0===n?t:e,w=!0===n?1:-1;for(s=v,o=1;o<=r;o++)d.push(0,y*w,0),f.push(0,w,0),m.push(.5,.5),v++;for(l=v,o=0;o<=r;o++){var S=o/r*c+h,T=Math.cos(S),A=Math.sin(S);_.x=M*A,_.y=y*w,_.z=M*T,d.push(_.x,_.y,_.z),f.push(0,w,0),g.x=.5*T+.5,g.y=.5*A*w+.5,m.push(g.x,g.y),v++}for(o=0;o<r;o++){var E=s+o,L=l+o;!0===n?p.push(L,L+1,E):p.push(L+1,L,E),b+=3}u.addGroup(x,b,!0===n?1:2),x+=b}St.call(this),this.type="CylinderBufferGeometry",this.parameters={radiusTop:t,radiusBottom:e,height:n,radialSegments:r,heightSegments:o,openEnded:s,thetaStart:h,thetaLength:c};var u=this;t=void 0!==t?t:1,e=void 0!==e?e:1,n=n||1,r=Math.floor(r)||8,o=Math.floor(o)||1,s=void 0!==s&&s,h=void 0!==h?h:0,c=void 0!==c?c:2*Math.PI;var p=[],d=[],f=[],m=[],v=0,g=[],y=n/2,x=0;!function(){var i,s,l=new a,_=new a,b=0,M=(e-t)/n;for(s=0;s<=o;s++){var w=[],S=s/o,T=S*(e-t)+t;for(i=0;i<=r;i++){var A=i/r,E=A*c+h,L=Math.sin(E),P=Math.cos(E);_.x=T*L,_.y=-S*n+y,_.z=T*P,d.push(_.x,_.y,_.z),l.set(L,M,P).normalize(),f.push(l.x,l.y,l.z),m.push(A,1-S),w.push(v++)}g.push(w)}for(i=0;i<r;i++)for(s=0;s<o;s++){var C=g[s][i],I=g[s+1][i],R=g[s+1][i+1],N=g[s][i+1];p.push(C,I,N),p.push(I,R,N),b+=6}u.addGroup(x,b,0),x+=b}(),!1===s&&(t>0&&l(!0),e>0&&l(!1)),this.setIndex(p),this.addAttribute("position",new _t(d,3)),this.addAttribute("normal",new _t(f,3)),this.addAttribute("uv",new _t(m,2))}function gi(t,e,i,n,r,a,o){mi.call(this,0,t,e,i,n,r,a,o),this.type="ConeGeometry",this.parameters={radius:t,height:e,radialSegments:i,heightSegments:n,openEnded:r,thetaStart:a,thetaLength:o}}function yi(t,e,i,n,r,a,o){vi.call(this,0,t,e,i,n,r,a,o),this.type="ConeBufferGeometry",this.parameters={radius:t,height:e,radialSegments:i,heightSegments:n,openEnded:r,thetaStart:a,thetaLength:o}}function xi(t,e,i,n){ut.call(this),this.type="CircleGeometry",this.parameters={radius:t,segments:e,thetaStart:i,thetaLength:n},this.fromBufferGeometry(new _i(t,e,i,n)),this.mergeVertices()}function _i(t,e,n,r){St.call(this),this.type="CircleBufferGeometry",this.parameters={radius:t,segments:e,thetaStart:n,thetaLength:r},t=t||1,e=void 0!==e?Math.max(3,e):8,n=void 0!==n?n:0,r=void 0!==r?r:2*Math.PI;var o,s,h=[],c=[],l=[],u=[],p=new a,d=new i;for(c.push(0,0,0),l.push(0,0,1),u.push(.5,.5),s=0,o=3;s<=e;s++,o+=3){var f=n+s/e*r;p.x=t*Math.cos(f),p.y=t*Math.sin(f),c.push(p.x,p.y,p.z),l.push(0,0,1),d.x=(c[o]/t+1)/2,d.y=(c[o+1]/t+1)/2,u.push(d.x,d.y)}for(o=1;o<=e;o++)h.push(o,o+1,0);this.setIndex(h),this.addAttribute("position",new _t(c,3)),this.addAttribute("normal",new _t(l,3)),this.addAttribute("uv",new _t(u,2))}function bi(t){J.call(this),this.type="ShadowMaterial",this.color=new H(0),this.opacity=1,this.lights=!0,this.transparent=!0,this.setValues(t)}function Mi(t){Ct.call(this,t),this.type="RawShaderMaterial"}function wi(t){J.call(this),this.defines={STANDARD:""},this.type="MeshStandardMaterial",this.color=new H(16777215),this.roughness=.5,this.metalness=.5,this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new H(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalScale=new i(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.roughnessMap=null,this.metalnessMap=null,this.alphaMap=null,this.envMap=null,this.envMapIntensity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.skinning=!1,this.morphTargets=!1,this.morphNormals=!1,this.setValues(t)}function Si(t){wi.call(this),this.defines={PHYSICAL:""},this.type="MeshPhysicalMaterial",this.reflectivity=.5,this.clearCoat=0,this.clearCoatRoughness=0,this.setValues(t)}function Ti(t){J.call(this),this.type="MeshPhongMaterial",this.color=new H(16777215),this.specular=new H(1118481),this.shininess=30,this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new H(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalScale=new i(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.combine=ma,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.skinning=!1,this.morphTargets=!1,this.morphNormals=!1,this.setValues(t)}function Ai(t){Ti.call(this),this.defines={TOON:""},this.type="MeshToonMaterial",this.gradientMap=null,this.setValues(t)}function Ei(t){J.call(this),this.type="MeshNormalMaterial",this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalScale=new i(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.wireframe=!1,this.wireframeLinewidth=1,this.fog=!1,this.lights=!1,this.skinning=!1,this.morphTargets=!1,this.morphNormals=!1,this.setValues(t)}function Li(t){J.call(this),this.type="MeshLambertMaterial",this.color=new H(16777215),this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new H(0),this.emissiveIntensity=1,this.emissiveMap=null,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.combine=ma,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.skinning=!1,this.morphTargets=!1,this.morphNormals=!1,this.setValues(t)}function Pi(t){ue.call(this),this.type="LineDashedMaterial",this.scale=1,this.dashSize=3,this.gapSize=1,this.setValues(t)}function Ci(t,e,i){var n=this,r=!1,a=0,o=0,s=void 0;this.onStart=void 0,this.onLoad=t,this.onProgress=e,this.onError=i,this.itemStart=function(t){o++,!1===r&&void 0!==n.onStart&&n.onStart(t,a,o),r=!0},this.itemEnd=function(t){a++,void 0!==n.onProgress&&n.onProgress(t,a,o),a===o&&(r=!1,void 0!==n.onLoad&&n.onLoad())},this.itemError=function(t){void 0!==n.onError&&n.onError(t)},this.resolveURL=function(t){return s?s(t):t},this.setURLModifier=function(t){return s=t,this}}function Ii(t){this.manager=void 0!==t?t:$o}function Ri(t){this.manager=void 0!==t?t:$o,this._parser=null}function Ni(t){this.manager=void 0!==t?t:$o,this._parser=null}function Oi(t){this.manager=void 0!==t?t:$o}function Di(t){this.manager=void 0!==t?t:$o}function Ui(t){this.manager=void 0!==t?t:$o}function Fi(){this.type="Curve",this.arcLengthDivisions=200}function zi(t,e,i,n,r,a,o,s){Fi.call(this),this.type="EllipseCurve",this.aX=t||0,this.aY=e||0,this.xRadius=i||1,this.yRadius=n||1,this.aStartAngle=r||0,this.aEndAngle=a||2*Math.PI,this.aClockwise=o||!1,this.aRotation=s||0}function Bi(t,e,i,n,r,a){zi.call(this,t,e,i,i,n,r,a),this.type="ArcCurve"}function Gi(){function t(t,a,o,s){e=t,i=o,n=-3*t+3*a-2*o-s,r=2*t-2*a+o+s}var e=0,i=0,n=0,r=0;return{initCatmullRom:function(e,i,n,r,a){t(i,n,a*(n-e),a*(r-i))},initNonuniformCatmullRom:function(e,i,n,r,a,o,s){var h=(i-e)/a-(n-e)/(a+o)+(n-i)/o,c=(n-i)/o-(r-i)/(o+s)+(r-n)/s;t(i,n,h*=o,c*=o)},calc:function(t){var a=t*t;return e+i*t+n*a+r*(a*t)}}}function Vi(t,e,i,n){Fi.call(this),this.type="CatmullRomCurve3",this.points=t||[],this.closed=e||!1,this.curveType=i||"centripetal",this.tension=n||.5}function ki(t,e,i,n,r){var a=.5*(n-e),o=.5*(r-i),s=t*t;return(2*i-2*n+a+o)*(t*s)+(-3*i+3*n-2*a-o)*s+a*t+i}function ji(t,e,i,n){return function(t,e){var i=1-t;return i*i*e}(t,e)+function(t,e){return 2*(1-t)*t*e}(t,i)+function(t,e){return t*t*e}(t,n)}function Wi(t,e,i,n,r){return function(t,e){var i=1-t;return i*i*i*e}(t,e)+function(t,e){var i=1-t;return 3*i*i*t*e}(t,i)+function(t,e){return 3*(1-t)*t*t*e}(t,n)+function(t,e){return t*t*t*e}(t,r)}function Hi(t,e,n,r){Fi.call(this),this.type="CubicBezierCurve",this.v0=t||new i,this.v1=e||new i,this.v2=n||new i,this.v3=r||new i}function Xi(t,e,i,n){Fi.call(this),this.type="CubicBezierCurve3",this.v0=t||new a,this.v1=e||new a,this.v2=i||new a,this.v3=n||new a}function qi(t,e){Fi.call(this),this.type="LineCurve",this.v1=t||new i,this.v2=e||new i}function Yi(t,e){Fi.call(this),this.type="LineCurve3",this.v1=t||new a,this.v2=e||new a}function Zi(t,e,n){Fi.call(this),this.type="QuadraticBezierCurve",this.v0=t||new i,this.v1=e||new i,this.v2=n||new i}function Ji(t,e,i){Fi.call(this),this.type="QuadraticBezierCurve3",this.v0=t||new a,this.v1=e||new a,this.v2=i||new a}function Qi(t){Fi.call(this),this.type="SplineCurve",this.points=t||[]}function Ki(){Fi.call(this),this.type="CurvePath",this.curves=[],this.autoClose=!1}function $i(t){Ki.call(this),this.type="Path",this.currentPoint=new i,t&&this.setFromPoints(t)}function tn(t){$i.call(this,t),this.uuid=Po.generateUUID(),this.type="Shape",this.holes=[]}function en(t,e){st.call(this),this.type="Light",this.color=new H(t),this.intensity=void 0!==e?e:1,this.receiveShadow=void 0}function nn(t,e,i){en.call(this,t,i),this.type="HemisphereLight",this.castShadow=void 0,this.position.copy(st.DefaultUp),this.updateMatrix(),this.groundColor=new H(e)}function rn(t){this.camera=t,this.bias=0,this.radius=1,this.mapSize=new i(512,512),this.map=null,this.matrix=new n}function an(){rn.call(this,new Jt(50,1,.5,500))}function on(t,e,i,n,r,a){en.call(this,t,e),this.type="SpotLight",this.position.copy(st.DefaultUp),this.updateMatrix(),this.target=new st,Object.defineProperty(this,"power",{get:function(){return this.intensity*Math.PI},set:function(t){this.intensity=t/Math.PI}}),this.distance=void 0!==i?i:0,this.angle=void 0!==n?n:Math.PI/3,this.penumbra=void 0!==r?r:0,this.decay=void 0!==a?a:1,this.shadow=new an}function sn(t,e,i,n){en.call(this,t,e),this.type="PointLight",Object.defineProperty(this,"power",{get:function(){return 4*this.intensity*Math.PI},set:function(t){this.intensity=t/(4*Math.PI)}}),this.distance=void 0!==i?i:0,this.decay=void 0!==n?n:1,this.shadow=new rn(new Jt(90,1,.5,500))}function hn(){rn.call(this,new ct(-5,5,5,-5,.5,500))}function cn(t,e){en.call(this,t,e),this.type="DirectionalLight",this.position.copy(st.DefaultUp),this.updateMatrix(),this.target=new st,this.shadow=new hn}function ln(t,e){en.call(this,t,e),this.type="AmbientLight",this.castShadow=void 0}function un(t,e,i,n){en.call(this,t,e),this.type="RectAreaLight",this.position.set(0,1,0),this.updateMatrix(),this.width=void 0!==i?i:10,this.height=void 0!==n?n:10}function pn(t,e,i,n){Mn.call(this,t,e,i,n)}function dn(t,e,i){Mn.call(this,t,e,i)}function fn(t,e,i,n){this.parameterPositions=t,this._cachedIndex=0,this.resultBuffer=void 0!==n?n:new e.constructor(i),this.sampleValues=e,this.valueSize=i}function mn(t,e,i,n){fn.call(this,t,e,i,n)}function vn(t,e,i,n){Mn.call(this,t,e,i,n)}function gn(t,e,i,n){Mn.call(this,t,e,i,n)}function yn(t,e,i,n){Mn.call(this,t,e,i,n)}function xn(t,e,i,n){fn.call(this,t,e,i,n),this._weightPrev=-0,this._offsetPrev=-0,this._weightNext=-0,this._offsetNext=-0}function _n(t,e,i,n){fn.call(this,t,e,i,n)}function bn(t,e,i,n){fn.call(this,t,e,i,n)}function Mn(t,e,i,n){if(void 0===t)throw new Error("THREE.KeyframeTrack: track name is undefined");if(void 0===e||0===e.length)throw new Error("THREE.KeyframeTrack: no keyframes in track named "+t);this.name=t,this.times=os.convertArray(e,this.TimeBufferType),this.values=os.convertArray(i,this.ValueBufferType),this.setInterpolation(n||this.DefaultInterpolation),this.validate(),this.optimize()}function wn(t,e,i,n){Mn.call(this,t,e,i,n)}function Sn(t,e,i){this.name=t,this.tracks=i,this.duration=void 0!==e?e:-1,this.uuid=Po.generateUUID(),this.duration<0&&this.resetDuration(),this.optimize()}function Tn(t){this.manager=void 0!==t?t:$o,this.textures={}}function An(t){this.manager=void 0!==t?t:$o}function En(){this.onLoadStart=function(){},this.onLoadProgress=function(){},this.onLoadComplete=function(){}}function Ln(t){"boolean"==typeof t&&(t=void 0),this.manager=void 0!==t?t:$o,this.withCredentials=!1}function Pn(t){this.manager=void 0!==t?t:$o,this.texturePath=""}function Cn(t){this.manager=void 0!==t?t:$o,this.options=void 0}function In(){this.type="ShapePath",this.subPaths=[],this.currentPath=null}function Rn(t){this.type="Font",this.data=t}function Nn(t){this.manager=void 0!==t?t:$o}function On(t){this.manager=void 0!==t?t:$o}function Dn(){this.type="StereoCamera",this.aspect=1,this.eyeSep=.064,this.cameraL=new Jt,this.cameraL.layers.enable(1),this.cameraL.matrixAutoUpdate=!1,this.cameraR=new Jt,this.cameraR.layers.enable(2),this.cameraR.matrixAutoUpdate=!1}function Un(t,e,i){st.call(this),this.type="CubeCamera";var n=new Jt(90,1,t,e);n.up.set(0,-1,0),n.lookAt(new a(1,0,0)),this.add(n);var r=new Jt(90,1,t,e);r.up.set(0,-1,0),r.lookAt(new a(-1,0,0)),this.add(r);var o=new Jt(90,1,t,e);o.up.set(0,0,1),o.lookAt(new a(0,1,0)),this.add(o);var s=new Jt(90,1,t,e);s.up.set(0,0,-1),s.lookAt(new a(0,-1,0)),this.add(s);var h=new Jt(90,1,t,e);h.up.set(0,-1,0),h.lookAt(new a(0,0,1)),this.add(h);var c=new Jt(90,1,t,e);c.up.set(0,-1,0),c.lookAt(new a(0,0,-1)),this.add(c);var u={format:Ka,magFilter:Ua,minFilter:Ua};this.renderTarget=new l(i,i,u),this.renderTarget.texture.name="CubeCamera",this.update=function(t,e){null===this.parent&&this.updateMatrixWorld();var i=this.renderTarget,a=i.texture.generateMipmaps;i.texture.generateMipmaps=!1,i.activeCubeFace=0,t.render(e,n,i),i.activeCubeFace=1,t.render(e,r,i),i.activeCubeFace=2,t.render(e,o,i),i.activeCubeFace=3,t.render(e,s,i),i.activeCubeFace=4,t.render(e,h,i),i.texture.generateMipmaps=a,i.activeCubeFace=5,t.render(e,c,i),t.setRenderTarget(null)},this.clear=function(t,e,i,n){for(var r=this.renderTarget,a=0;a<6;a++)r.activeCubeFace=a,t.setRenderTarget(r),t.clear(e,i,n);t.setRenderTarget(null)}}function Fn(){st.call(this),this.type="AudioListener",this.context=ds.getContext(),this.gain=this.context.createGain(),this.gain.connect(this.context.destination),this.filter=null}function zn(t){st.call(this),this.type="Audio",this.context=t.context,this.gain=this.context.createGain(),this.gain.connect(t.getInput()),this.autoplay=!1,this.buffer=null,this.loop=!1,this.startTime=0,this.offset=0,this.playbackRate=1,this.isPlaying=!1,this.hasPlaybackControl=!0,this.sourceType="empty",this.filters=[]}function Bn(t){zn.call(this,t),this.panner=this.context.createPanner(),this.panner.connect(this.gain)}function Gn(t,e){this.analyser=t.context.createAnalyser(),this.analyser.fftSize=void 0!==e?e:2048,this.data=new Uint8Array(this.analyser.frequencyBinCount),t.getOutput().connect(this.analyser)}function Vn(t,e,i){this.binding=t,this.valueSize=i;var n,r=Float64Array;switch(e){case"quaternion":n=this._slerp;break;case"string":case"bool":r=Array,n=this._select;break;default:n=this._lerp}this.buffer=new r(4*i),this._mixBufferRegion=n,this.cumulativeWeight=0,this.useCount=0,this.referenceCount=0}function kn(t,e,i){var n=i||jn.parseTrackName(e);this._targetGroup=t,this._bindings=t.subscribe_(e,n)}function jn(t,e,i){this.path=e,this.parsedPath=i||jn.parseTrackName(e),this.node=jn.findNode(t,this.parsedPath.nodeName)||t,this.rootNode=t}function Wn(){this.uuid=Po.generateUUID(),this._objects=Array.prototype.slice.call(arguments),this.nCachedObjects_=0;var t={};this._indicesByUUID=t;for(var e=0,i=arguments.length;e!==i;++e)t[arguments[e].uuid]=e;this._paths=[],this._parsedPaths=[],this._bindings=[],this._bindingsIndicesByPath={};var n=this;this.stats={objects:{get total(){return n._objects.length},get inUse(){return this.total-n.nCachedObjects_}},get bindingsPerObject(){return n._bindings.length}}}function Hn(t,e,i){this._mixer=t,this._clip=e,this._localRoot=i||null;for(var n=e.tracks,r=n.length,a=new Array(r),o={endingStart:vo,endingEnd:vo},s=0;s!==r;++s){var h=n[s].createInterpolant(null);a[s]=h,h.settings=o}this._interpolantSettings=o,this._interpolants=a,this._propertyBindings=new Array(r),this._cacheIndex=null,this._byClipCacheIndex=null,this._timeScaleInterpolant=null,this._weightInterpolant=null,this.loop=mo,this._loopCount=-1,this._startTime=null,this.time=0,this.timeScale=1,this._effectiveTimeScale=1,this.weight=1,this._effectiveWeight=1,this.repetitions=1/0,this.paused=!1,this.enabled=!0,this.clampWhenFinished=!1,this.zeroSlopeAtStart=!0,this.zeroSlopeAtEnd=!0}function Xn(t){this._root=t,this._initMemoryManager(),this._accuIndex=0,this.time=0,this.timeScale=1}function qn(t){"string"==typeof t&&(t=arguments[1]),this.value=t}function Yn(){St.call(this),this.type="InstancedBufferGeometry",this.maxInstancedCount=void 0}function Zn(t,e,i,n){this.uuid=Po.generateUUID(),this.data=t,this.itemSize=e,this.offset=i,this.normalized=!0===n}function Jn(t,e){this.uuid=Po.generateUUID(),this.array=t,this.stride=e,this.count=void 0!==t?t.length/e:0,this.dynamic=!1,this.updateRange={offset:0,count:-1},this.onUploadCallback=function(){},this.version=0}function Qn(t,e,i){Jn.call(this,t,e),this.meshPerAttribute=i||1}function Kn(t,e,i){pt.call(this,t,e),this.meshPerAttribute=i||1}function $n(t,e,i,n){this.ray=new It(t,e),this.near=i||0,this.far=n||1/0,this.params={Mesh:{},Line:{},LOD:{},Points:{threshold:1},Sprite:{}},Object.defineProperties(this.params,{PointCloud:{get:function(){return this.Points}}})}function tr(t,e){return t.distance-e.distance}function er(t,e,i,n){if(!1!==t.visible&&(t.raycast(e,i),!0===n))for(var r=t.children,a=0,o=r.length;a<o;a++)er(r[a],e,i,!0)}function ir(t){this.autoStart=void 0===t||t,this.startTime=0,this.oldTime=0,this.elapsedTime=0,this.running=!1}function nr(t,e,i){return this.radius=void 0!==t?t:1,this.phi=void 0!==e?e:0,this.theta=void 0!==i?i:0,this}function rr(t,e,i){return this.radius=void 0!==t?t:1,this.theta=void 0!==e?e:0,this.y=void 0!==i?i:0,this}function ar(t){st.call(this),this.material=t,this.render=function(){}}function or(t,e,i,n){this.object=t,this.size=void 0!==e?e:1;var r=void 0!==i?i:16711680,a=void 0!==n?n:1,o=0,s=this.object.geometry;s&&s.isGeometry?o=3*s.faces.length:s&&s.isBufferGeometry&&(o=s.attributes.normal.count);var h=new St,c=new _t(2*o*3,3);h.addAttribute("position",c),de.call(this,h,new ue({color:r,linewidth:a})),this.matrixAutoUpdate=!1,this.update()}function sr(t,e){st.call(this),this.light=t,this.light.updateMatrixWorld(),this.matrix=t.matrixWorld,this.matrixAutoUpdate=!1,this.color=e;for(var i=new St,n=[0,0,0,0,0,1,0,0,0,1,0,1,0,0,0,-1,0,1,0,0,0,0,1,1,0,0,0,0,-1,1],r=0,a=1;r<32;r++,a++){var o=r/32*Math.PI*2,s=a/32*Math.PI*2;n.push(Math.cos(o),Math.sin(o),1,Math.cos(s),Math.sin(s),1)}i.addAttribute("position",new _t(n,3));var h=new ue({fog:!1});this.cone=new de(i,h),this.add(this.cone),this.update()}function hr(t){var e=[];t&&t.isBone&&e.push(t);for(var i=0;i<t.children.length;i++)e.push.apply(e,hr(t.children[i]));return e}function cr(t){for(var e=hr(t),i=new St,n=[],r=[],a=new H(0,0,1),o=new H(0,1,0),s=0;s<e.length;s++){var h=e[s];h.parent&&h.parent.isBone&&(n.push(0,0,0),n.push(0,0,0),r.push(a.r,a.g,a.b),r.push(o.r,o.g,o.b))}i.addAttribute("position",new _t(n,3)),i.addAttribute("color",new _t(r,3));var c=new ue({vertexColors:zr,depthTest:!1,depthWrite:!1,transparent:!0});de.call(this,i,c),this.root=t,this.bones=e,this.matrix=t.matrixWorld,this.matrixAutoUpdate=!1}function lr(t,e,i){this.light=t,this.light.updateMatrixWorld(),this.color=i;var n=new oi(e,4,2),r=new Pt({wireframe:!0,fog:!1});Ot.call(this,n,r),this.matrix=this.light.matrixWorld,this.matrixAutoUpdate=!1,this.update()}function ur(t,e){st.call(this),this.light=t,this.light.updateMatrixWorld(),this.matrix=t.matrixWorld,this.matrixAutoUpdate=!1,this.color=e;var i=new ue({fog:!1}),n=new St;n.addAttribute("position",new pt(new Float32Array(15),3)),this.line=new pe(n,i),this.add(this.line),this.update()}function pr(t,e,i){st.call(this),this.light=t,this.light.updateMatrixWorld(),this.matrix=t.matrixWorld,this.matrixAutoUpdate=!1,this.color=i;var n=new Pe(e);n.rotateY(.5*Math.PI),this.material=new Pt({wireframe:!0,fog:!1}),void 0===this.color&&(this.material.vertexColors=zr);var r=n.getAttribute("position"),a=new Float32Array(3*r.count);n.addAttribute("color",new pt(a,3)),this.add(new Ot(n,this.material)),this.update()}function dr(t,e,i,n){t=t||10,e=e||10,i=new H(void 0!==i?i:4473924),n=new H(void 0!==n?n:8947848);for(var r=e/2,a=t/e,o=t/2,s=[],h=[],c=0,l=0,u=-o;c<=e;c++,u+=a){s.push(-o,0,u,o,0,u),s.push(u,0,-o,u,0,o);var p=c===r?i:n;p.toArray(h,l),l+=3,p.toArray(h,l),l+=3,p.toArray(h,l),l+=3,p.toArray(h,l),l+=3}var d=new St;d.addAttribute("position",new _t(s,3)),d.addAttribute("color",new _t(h,3));var f=new ue({vertexColors:zr});de.call(this,d,f)}function fr(t,e,i,n,r,a){t=t||10,e=e||16,i=i||8,n=n||64,r=new H(void 0!==r?r:4473924),a=new H(void 0!==a?a:8947848);var o,s,h,c,l,u,p,d=[],f=[];for(c=0;c<=e;c++)h=c/e*(2*Math.PI),o=Math.sin(h)*t,s=Math.cos(h)*t,d.push(0,0,0),d.push(o,0,s),p=1&c?r:a,f.push(p.r,p.g,p.b),f.push(p.r,p.g,p.b);for(c=0;c<=i;c++)for(p=1&c?r:a,u=t-t/i*c,l=0;l<n;l++)h=l/n*(2*Math.PI),o=Math.sin(h)*u,s=Math.cos(h)*u,d.push(o,0,s),f.push(p.r,p.g,p.b),h=(l+1)/n*(2*Math.PI),o=Math.sin(h)*u,s=Math.cos(h)*u,d.push(o,0,s),f.push(p.r,p.g,p.b);var m=new St;m.addAttribute("position",new _t(d,3)),m.addAttribute("color",new _t(f,3));var v=new ue({vertexColors:zr});de.call(this,m,v)}function mr(t,e,i,n){this.object=t,this.size=void 0!==e?e:1;var r=void 0!==i?i:16776960,a=void 0!==n?n:1,o=0,s=this.object.geometry;s&&s.isGeometry&&(o=s.faces.length);var h=new St,c=new _t(2*o*3,3);h.addAttribute("position",c),de.call(this,h,new ue({color:r,linewidth:a})),this.matrixAutoUpdate=!1,this.update()}function vr(t,e,i){st.call(this),this.light=t,this.light.updateMatrixWorld(),this.matrix=t.matrixWorld,this.matrixAutoUpdate=!1,this.color=i,void 0===e&&(e=1);var n=new St;n.addAttribute("position",new _t([-e,e,0,e,e,0,e,-e,0,-e,-e,0,-e,e,0],3));var r=new ue({fog:!1});this.lightPlane=new pe(n,r),this.add(this.lightPlane),(n=new St).addAttribute("position",new _t([0,0,0,0,0,1],3)),this.targetLine=new pe(n,r),this.add(this.targetLine),this.update()}function gr(t){function e(t,e,n){i(t,n),i(e,n)}function i(t,e){a.push(0,0,0),o.push(e.r,e.g,e.b),void 0===s[t]&&(s[t]=[]),s[t].push(a.length/3-1)}var n=new St,r=new ue({color:16777215,vertexColors:Fr}),a=[],o=[],s={},h=new H(16755200),c=new H(16711680),l=new H(43775),u=new H(16777215),p=new H(3355443);e("n1","n2",h),e("n2","n4",h),e("n4","n3",h),e("n3","n1",h),e("f1","f2",h),e("f2","f4",h),e("f4","f3",h),e("f3","f1",h),e("n1","f1",h),e("n2","f2",h),e("n3","f3",h),e("n4","f4",h),e("p","n1",c),e("p","n2",c),e("p","n3",c),e("p","n4",c),e("u1","u2",l),e("u2","u3",l),e("u3","u1",l),e("c","t",u),e("p","c",p),e("cn1","cn2",p),e("cn3","cn4",p),e("cf1","cf2",p),e("cf3","cf4",p),n.addAttribute("position",new _t(a,3)),n.addAttribute("color",new _t(o,3)),de.call(this,n,r),this.camera=t,this.camera.updateProjectionMatrix&&this.camera.updateProjectionMatrix(),this.matrix=t.matrixWorld,this.matrixAutoUpdate=!1,this.pointMap=s,this.update()}function yr(t,e){this.object=t,void 0===e&&(e=16776960);var i=new Uint16Array([0,1,1,2,2,3,3,0,4,5,5,6,6,7,7,4,0,4,1,5,2,6,3,7]),n=new Float32Array(24),r=new St;r.setIndex(new pt(i,1)),r.addAttribute("position",new pt(n,3)),de.call(this,r,new ue({color:e})),this.matrixAutoUpdate=!1,this.update()}function xr(t,e){this.type="Box3Helper",this.box=t;var i=void 0!==e?e:16776960,n=new Uint16Array([0,1,1,2,2,3,3,0,4,5,5,6,6,7,7,4,0,4,1,5,2,6,3,7]),r=new St;r.setIndex(new pt(n,1)),r.addAttribute("position",new _t([1,1,1,-1,1,1,-1,-1,1,1,-1,1,1,1,-1,-1,1,-1,-1,-1,-1,1,-1,-1],3)),de.call(this,r,new ue({color:i})),this.geometry.computeBoundingSphere()}function _r(t,e,i){this.type="PlaneHelper",this.plane=t,this.size=void 0===e?1:e;var n=void 0!==i?i:16776960,r=new St;r.addAttribute("position",new _t([1,-1,1,-1,1,1,-1,-1,1,1,1,1,-1,1,1,-1,-1,1,1,-1,1,1,1,1,0,0,1,0,0,0],3)),r.computeBoundingSphere(),pe.call(this,r,new ue({color:n}));var a=new St;a.addAttribute("position",new _t([1,1,1,-1,1,1,-1,-1,1,1,1,1,-1,-1,1,1,-1,1],3)),a.computeBoundingSphere(),this.add(new Ot(a,new Pt({color:n,opacity:.2,transparent:!0,depthWrite:!1})))}function br(t,e,i,n,r,a){st.call(this),void 0===n&&(n=16776960),void 0===i&&(i=1),void 0===r&&(r=.2*i),void 0===a&&(a=.2*r),void 0===fs&&((fs=new St).addAttribute("position",new _t([0,0,0,0,1,0],3)),(ms=new vi(0,.5,1,5,1)).translate(0,-.5,0)),this.position.copy(e),this.line=new pe(fs,new ue({color:n})),this.line.matrixAutoUpdate=!1,this.add(this.line),this.cone=new Ot(ms,new Pt({color:n})),this.cone.matrixAutoUpdate=!1,this.add(this.cone),this.setDirection(t),this.setLength(i,r,a)}function Mr(t){var e=[0,0,0,t=t||1,0,0,0,0,0,0,t,0,0,0,0,0,0,t],i=new St;i.addAttribute("position",new _t(e,3)),i.addAttribute("color",new _t([1,0,0,1,.6,0,0,1,0,.6,1,0,0,0,1,0,.6,1],3));var n=new ue({vertexColors:zr});de.call(this,i,n)}function wr(t){Vi.call(this,t),this.type="catmullrom",this.closed=!0}function Sr(t){Vi.call(this,t),this.type="catmullrom"}function Tr(t){Vi.call(this,t),this.type="catmullrom"}void 0===Number.EPSILON&&(Number.EPSILON=Math.pow(2,-52)),void 0===Number.isInteger&&(Number.isInteger=function(t){return"number"==typeof t&&isFinite(t)&&Math.floor(t)===t}),void 0===Math.sign&&(Math.sign=function(t){return t<0?-1:t>0?1:+t}),"name"in Function.prototype==!1&&Object.defineProperty(Function.prototype,"name",{get:function(){return this.toString().match(/^\s*function\s*([^\(\s]*)/)[1]}}),void 0===Object.assign&&(Object.assign=function(t){if(void 0===t||null===t)throw new TypeError("Cannot convert undefined or null to object");for(var e=Object(t),i=1;i<arguments.length;i++){var n=arguments[i];if(void 0!==n&&null!==n)for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(e[r]=n[r])}return e}),Object.assign(e.prototype,{addEventListener:function(t,e){void 0===this._listeners&&(this._listeners={});var i=this._listeners;void 0===i[t]&&(i[t]=[]),-1===i[t].indexOf(e)&&i[t].push(e)},hasEventListener:function(t,e){if(void 0===this._listeners)return!1;var i=this._listeners;return void 0!==i[t]&&-1!==i[t].indexOf(e)},removeEventListener:function(t,e){if(void 0!==this._listeners){var i=this._listeners[t];if(void 0!==i){var n=i.indexOf(e);-1!==n&&i.splice(n,1)}}},dispatchEvent:function(t){if(void 0!==this._listeners){var e=this._listeners[t.type];if(void 0!==e){t.target=this;for(var i=e.slice(0),n=0,r=i.length;n<r;n++)i[n].call(this,t)}}}});var Ar="89",Er=0,Lr=1,Pr=2,Cr=0,Ir=1,Rr=2,Nr=0,Or=1,Dr=2,Ur=0,Fr=1,zr=2,Br=0,Gr=1,Vr=2,kr=3,jr=4,Wr=5,Hr=100,Xr=101,qr=102,Yr=103,Zr=104,Jr=200,Qr=201,Kr=202,$r=203,ta=204,ea=205,ia=206,na=207,ra=208,aa=209,oa=210,sa=0,ha=1,ca=2,la=3,ua=4,pa=5,da=6,fa=7,ma=0,va=1,ga=2,ya=0,xa=1,_a=2,ba=3,Ma=4,wa=301,Sa=302,Ta=303,Aa=304,Ea=305,La=306,Pa=307,Ca=1e3,Ia=1001,Ra=1002,Na=1003,Oa=1004,Da=1005,Ua=1006,Fa=1007,za=1008,Ba=1009,Ga=1010,Va=1011,ka=1012,ja=1013,Wa=1014,Ha=1015,Xa=1016,qa=1017,Ya=1018,Za=1019,Ja=1020,Qa=1021,Ka=1022,$a=1023,to=1024,eo=1025,io=$a,no=1026,ro=1027,ao=2001,oo=2002,so=2003,ho=2004,co=2100,lo=2101,uo=2102,po=2103,fo=2151,mo=2201,vo=2400,go=0,yo=1,xo=2,_o=3e3,bo=3001,Mo=3007,wo=3002,So=3004,To=3005,Ao=3006,Eo=3200,Lo=3201,Po={DEG2RAD:Math.PI/180,RAD2DEG:180/Math.PI,generateUUID:function(){for(var t=[],e=0;e<256;e++)t[e]=(e<16?"0":"")+e.toString(16).toUpperCase();return function(){var e=4294967295*Math.random()|0,i=4294967295*Math.random()|0,n=4294967295*Math.random()|0,r=4294967295*Math.random()|0;return t[255&e]+t[e>>8&255]+t[e>>16&255]+t[e>>24&255]+"-"+t[255&i]+t[i>>8&255]+"-"+t[i>>16&15|64]+t[i>>24&255]+"-"+t[63&n|128]+t[n>>8&255]+"-"+t[n>>16&255]+t[n>>24&255]+t[255&r]+t[r>>8&255]+t[r>>16&255]+t[r>>24&255]}}(),clamp:function(t,e,i){return Math.max(e,Math.min(i,t))},euclideanModulo:function(t,e){return(t%e+e)%e},mapLinear:function(t,e,i,n,r){return n+(t-e)*(r-n)/(i-e)},lerp:function(t,e,i){return(1-i)*t+i*e},smoothstep:function(t,e,i){return t<=e?0:t>=i?1:(t=(t-e)/(i-e))*t*(3-2*t)},smootherstep:function(t,e,i){return t<=e?0:t>=i?1:(t=(t-e)/(i-e))*t*t*(t*(6*t-15)+10)},randInt:function(t,e){return t+Math.floor(Math.random()*(e-t+1))},randFloat:function(t,e){return t+Math.random()*(e-t)},randFloatSpread:function(t){return t*(.5-Math.random())},degToRad:function(t){return t*Po.DEG2RAD},radToDeg:function(t){return t*Po.RAD2DEG},isPowerOfTwo:function(t){return 0==(t&t-1)&&0!==t},ceilPowerOfTwo:function(t){return Math.pow(2,Math.ceil(Math.log(t)/Math.LN2))},floorPowerOfTwo:function(t){return Math.pow(2,Math.floor(Math.log(t)/Math.LN2))}};Object.defineProperties(i.prototype,{width:{get:function(){return this.x},set:function(t){this.x=t}},height:{get:function(){return this.y},set:function(t){this.y=t}}}),Object.assign(i.prototype,{isVector2:!0,set:function(t,e){return this.x=t,this.y=e,this},setScalar:function(t){return this.x=t,this.y=t,this},setX:function(t){return this.x=t,this},setY:function(t){return this.y=t,this},setComponent:function(t,e){switch(t){case 0:this.x=e;break;case 1:this.y=e;break;default:throw new Error("index is out of range: "+t)}return this},getComponent:function(t){switch(t){case 0:return this.x;case 1:return this.y;default:throw new Error("index is out of range: "+t)}},clone:function(){return new this.constructor(this.x,this.y)},copy:function(t){return this.x=t.x,this.y=t.y,this},add:function(t,e){return void 0!==e?this.addVectors(t,e):(this.x+=t.x,this.y+=t.y,this)},addScalar:function(t){return this.x+=t,this.y+=t,this},addVectors:function(t,e){return this.x=t.x+e.x,this.y=t.y+e.y,this},addScaledVector:function(t,e){return this.x+=t.x*e,this.y+=t.y*e,this},sub:function(t,e){return void 0!==e?this.subVectors(t,e):(this.x-=t.x,this.y-=t.y,this)},subScalar:function(t){return this.x-=t,this.y-=t,this},subVectors:function(t,e){return this.x=t.x-e.x,this.y=t.y-e.y,this},multiply:function(t){return this.x*=t.x,this.y*=t.y,this},multiplyScalar:function(t){return this.x*=t,this.y*=t,this},divide:function(t){return this.x/=t.x,this.y/=t.y,this},divideScalar:function(t){return this.multiplyScalar(1/t)},applyMatrix3:function(t){var e=this.x,i=this.y,n=t.elements;return this.x=n[0]*e+n[3]*i+n[6],this.y=n[1]*e+n[4]*i+n[7],this},min:function(t){return this.x=Math.min(this.x,t.x),this.y=Math.min(this.y,t.y),this},max:function(t){return this.x=Math.max(this.x,t.x),this.y=Math.max(this.y,t.y),this},clamp:function(t,e){return this.x=Math.max(t.x,Math.min(e.x,this.x)),this.y=Math.max(t.y,Math.min(e.y,this.y)),this},clampScalar:function(){var t=new i,e=new i;return function(i,n){return t.set(i,i),e.set(n,n),this.clamp(t,e)}}(),clampLength:function(t,e){var i=this.length();return this.divideScalar(i||1).multiplyScalar(Math.max(t,Math.min(e,i)))},floor:function(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this},ceil:function(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this},round:function(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this},roundToZero:function(){return this.x=this.x<0?Math.ceil(this.x):Math.floor(this.x),this.y=this.y<0?Math.ceil(this.y):Math.floor(this.y),this},negate:function(){return this.x=-this.x,this.y=-this.y,this},dot:function(t){return this.x*t.x+this.y*t.y},lengthSq:function(){return this.x*this.x+this.y*this.y},length:function(){return Math.sqrt(this.x*this.x+this.y*this.y)},manhattanLength:function(){return Math.abs(this.x)+Math.abs(this.y)},normalize:function(){return this.divideScalar(this.length()||1)},angle:function(){var t=Math.atan2(this.y,this.x);return t<0&&(t+=2*Math.PI),t},distanceTo:function(t){return Math.sqrt(this.distanceToSquared(t))},distanceToSquared:function(t){var e=this.x-t.x,i=this.y-t.y;return e*e+i*i},manhattanDistanceTo:function(t){return Math.abs(this.x-t.x)+Math.abs(this.y-t.y)},setLength:function(t){return this.normalize().multiplyScalar(t)},lerp:function(t,e){return this.x+=(t.x-this.x)*e,this.y+=(t.y-this.y)*e,this},lerpVectors:function(t,e,i){return this.subVectors(e,t).multiplyScalar(i).add(t)},equals:function(t){return t.x===this.x&&t.y===this.y},fromArray:function(t,e){return void 0===e&&(e=0),this.x=t[e],this.y=t[e+1],this},toArray:function(t,e){return void 0===t&&(t=[]),void 0===e&&(e=0),t[e]=this.x,t[e+1]=this.y,t},fromBufferAttribute:function(t,e,i){return this.x=t.getX(e),this.y=t.getY(e),this},rotateAround:function(t,e){var i=Math.cos(e),n=Math.sin(e),r=this.x-t.x,a=this.y-t.y;return this.x=r*i-a*n+t.x,this.y=r*n+a*i+t.y,this}}),Object.assign(n.prototype,{isMatrix4:!0,set:function(t,e,i,n,r,a,o,s,h,c,l,u,p,d,f,m){var v=this.elements;return v[0]=t,v[4]=e,v[8]=i,v[12]=n,v[1]=r,v[5]=a,v[9]=o,v[13]=s,v[2]=h,v[6]=c,v[10]=l,v[14]=u,v[3]=p,v[7]=d,v[11]=f,v[15]=m,this},identity:function(){return this.set(1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1),this},clone:function(){return(new n).fromArray(this.elements)},copy:function(t){var e=this.elements,i=t.elements;return e[0]=i[0],e[1]=i[1],e[2]=i[2],e[3]=i[3],e[4]=i[4],e[5]=i[5],e[6]=i[6],e[7]=i[7],e[8]=i[8],e[9]=i[9],e[10]=i[10],e[11]=i[11],e[12]=i[12],e[13]=i[13],e[14]=i[14],e[15]=i[15],this},copyPosition:function(t){var e=this.elements,i=t.elements;return e[12]=i[12],e[13]=i[13],e[14]=i[14],this},extractBasis:function(t,e,i){return t.setFromMatrixColumn(this,0),e.setFromMatrixColumn(this,1),i.setFromMatrixColumn(this,2),this},makeBasis:function(t,e,i){return this.set(t.x,e.x,i.x,0,t.y,e.y,i.y,0,t.z,e.z,i.z,0,0,0,0,1),this},extractRotation:function(){var t=new a;return function(e){var i=this.elements,n=e.elements,r=1/t.setFromMatrixColumn(e,0).length(),a=1/t.setFromMatrixColumn(e,1).length(),o=1/t.setFromMatrixColumn(e,2).length();return i[0]=n[0]*r,i[1]=n[1]*r,i[2]=n[2]*r,i[4]=n[4]*a,i[5]=n[5]*a,i[6]=n[6]*a,i[8]=n[8]*o,i[9]=n[9]*o,i[10]=n[10]*o,this}}(),makeRotationFromEuler:function(t){!t||t.isEuler;var e=this.elements,i=t.x,n=t.y,r=t.z,a=Math.cos(i),o=Math.sin(i),s=Math.cos(n),h=Math.sin(n),c=Math.cos(r),l=Math.sin(r);if("XYZ"===t.order){var u=a*c,p=a*l,d=o*c,f=o*l;e[0]=s*c,e[4]=-s*l,e[8]=h,e[1]=p+d*h,e[5]=u-f*h,e[9]=-o*s,e[2]=f-u*h,e[6]=d+p*h,e[10]=a*s}else if("YXZ"===t.order){var m=s*c,v=s*l,g=h*c,y=h*l;e[0]=m+y*o,e[4]=g*o-v,e[8]=a*h,e[1]=a*l,e[5]=a*c,e[9]=-o,e[2]=v*o-g,e[6]=y+m*o,e[10]=a*s}else if("ZXY"===t.order){m=s*c,v=s*l,g=h*c,y=h*l;e[0]=m-y*o,e[4]=-a*l,e[8]=g+v*o,e[1]=v+g*o,e[5]=a*c,e[9]=y-m*o,e[2]=-a*h,e[6]=o,e[10]=a*s}else if("ZYX"===t.order){u=a*c,p=a*l,d=o*c,f=o*l;e[0]=s*c,e[4]=d*h-p,e[8]=u*h+f,e[1]=s*l,e[5]=f*h+u,e[9]=p*h-d,e[2]=-h,e[6]=o*s,e[10]=a*s}else if("YZX"===t.order){var x=a*s,_=a*h,b=o*s,M=o*h;e[0]=s*c,e[4]=M-x*l,e[8]=b*l+_,e[1]=l,e[5]=a*c,e[9]=-o*c,e[2]=-h*c,e[6]=_*l+b,e[10]=x-M*l}else if("XZY"===t.order){x=a*s,_=a*h,b=o*s,M=o*h;e[0]=s*c,e[4]=-l,e[8]=h*c,e[1]=x*l+M,e[5]=a*c,e[9]=_*l-b,e[2]=b*l-_,e[6]=o*c,e[10]=M*l+x}return e[3]=0,e[7]=0,e[11]=0,e[12]=0,e[13]=0,e[14]=0,e[15]=1,this},makeRotationFromQuaternion:function(t){var e=this.elements,i=t._x,n=t._y,r=t._z,a=t._w,o=i+i,s=n+n,h=r+r,c=i*o,l=i*s,u=i*h,p=n*s,d=n*h,f=r*h,m=a*o,v=a*s,g=a*h;return e[0]=1-(p+f),e[4]=l-g,e[8]=u+v,e[1]=l+g,e[5]=1-(c+f),e[9]=d-m,e[2]=u-v,e[6]=d+m,e[10]=1-(c+p),e[3]=0,e[7]=0,e[11]=0,e[12]=0,e[13]=0,e[14]=0,e[15]=1,this},lookAt:function(){var t=new a,e=new a,i=new a;return function(n,r,a){var o=this.elements;return i.subVectors(n,r),0===i.lengthSq()&&(i.z=1),i.normalize(),t.crossVectors(a,i),0===t.lengthSq()&&(1===Math.abs(a.z)?i.x+=1e-4:i.z+=1e-4,i.normalize(),t.crossVectors(a,i)),t.normalize(),e.crossVectors(i,t),o[0]=t.x,o[4]=e.x,o[8]=i.x,o[1]=t.y,o[5]=e.y,o[9]=i.y,o[2]=t.z,o[6]=e.z,o[10]=i.z,this}}(),multiply:function(t,e){return void 0!==e?this.multiplyMatrices(t,e):this.multiplyMatrices(this,t)},premultiply:function(t){return this.multiplyMatrices(t,this)},multiplyMatrices:function(t,e){var i=t.elements,n=e.elements,r=this.elements,a=i[0],o=i[4],s=i[8],h=i[12],c=i[1],l=i[5],u=i[9],p=i[13],d=i[2],f=i[6],m=i[10],v=i[14],g=i[3],y=i[7],x=i[11],_=i[15],b=n[0],M=n[4],w=n[8],S=n[12],T=n[1],A=n[5],E=n[9],L=n[13],P=n[2],C=n[6],I=n[10],R=n[14],N=n[3],O=n[7],D=n[11],U=n[15];return r[0]=a*b+o*T+s*P+h*N,r[4]=a*M+o*A+s*C+h*O,r[8]=a*w+o*E+s*I+h*D,r[12]=a*S+o*L+s*R+h*U,r[1]=c*b+l*T+u*P+p*N,r[5]=c*M+l*A+u*C+p*O,r[9]=c*w+l*E+u*I+p*D,r[13]=c*S+l*L+u*R+p*U,r[2]=d*b+f*T+m*P+v*N,r[6]=d*M+f*A+m*C+v*O,r[10]=d*w+f*E+m*I+v*D,r[14]=d*S+f*L+m*R+v*U,r[3]=g*b+y*T+x*P+_*N,r[7]=g*M+y*A+x*C+_*O,r[11]=g*w+y*E+x*I+_*D,r[15]=g*S+y*L+x*R+_*U,this},multiplyScalar:function(t){var e=this.elements;return e[0]*=t,e[4]*=t,e[8]*=t,e[12]*=t,e[1]*=t,e[5]*=t,e[9]*=t,e[13]*=t,e[2]*=t,e[6]*=t,e[10]*=t,e[14]*=t,e[3]*=t,e[7]*=t,e[11]*=t,e[15]*=t,this},applyToBufferAttribute:function(){var t=new a;return function(e){for(var i=0,n=e.count;i<n;i++)t.x=e.getX(i),t.y=e.getY(i),t.z=e.getZ(i),t.applyMatrix4(this),e.setXYZ(i,t.x,t.y,t.z);return e}}(),determinant:function(){var t=this.elements,e=t[0],i=t[4],n=t[8],r=t[12],a=t[1],o=t[5],s=t[9],h=t[13],c=t[2],l=t[6],u=t[10],p=t[14];return t[3]*(+r*s*l-n*h*l-r*o*u+i*h*u+n*o*p-i*s*p)+t[7]*(+e*s*p-e*h*u+r*a*u-n*a*p+n*h*c-r*s*c)+t[11]*(+e*h*l-e*o*p-r*a*l+i*a*p+r*o*c-i*h*c)+t[15]*(-n*o*c-e*s*l+e*o*u+n*a*l-i*a*u+i*s*c)},transpose:function(){var t,e=this.elements;return t=e[1],e[1]=e[4],e[4]=t,t=e[2],e[2]=e[8],e[8]=t,t=e[6],e[6]=e[9],e[9]=t,t=e[3],e[3]=e[12],e[12]=t,t=e[7],e[7]=e[13],e[13]=t,t=e[11],e[11]=e[14],e[14]=t,this},setPosition:function(t){var e=this.elements;return e[12]=t.x,e[13]=t.y,e[14]=t.z,this},getInverse:function(t,e){var i=this.elements,n=t.elements,r=n[0],a=n[1],o=n[2],s=n[3],h=n[4],c=n[5],l=n[6],u=n[7],p=n[8],d=n[9],f=n[10],m=n[11],v=n[12],g=n[13],y=n[14],x=n[15],_=d*y*u-g*f*u+g*l*m-c*y*m-d*l*x+c*f*x,b=v*f*u-p*y*u-v*l*m+h*y*m+p*l*x-h*f*x,M=p*g*u-v*d*u+v*c*m-h*g*m-p*c*x+h*d*x,w=v*d*l-p*g*l-v*c*f+h*g*f+p*c*y-h*d*y,S=r*_+a*b+o*M+s*w;if(0===S){var T="THREE.Matrix4: .getInverse() can't invert matrix, determinant is 0";if(!0===e)throw new Error(T);return this.identity()}var A=1/S;return i[0]=_*A,i[1]=(g*f*s-d*y*s-g*o*m+a*y*m+d*o*x-a*f*x)*A,i[2]=(c*y*s-g*l*s+g*o*u-a*y*u-c*o*x+a*l*x)*A,i[3]=(d*l*s-c*f*s-d*o*u+a*f*u+c*o*m-a*l*m)*A,i[4]=b*A,i[5]=(p*y*s-v*f*s+v*o*m-r*y*m-p*o*x+r*f*x)*A,i[6]=(v*l*s-h*y*s-v*o*u+r*y*u+h*o*x-r*l*x)*A,i[7]=(h*f*s-p*l*s+p*o*u-r*f*u-h*o*m+r*l*m)*A,i[8]=M*A,i[9]=(v*d*s-p*g*s-v*a*m+r*g*m+p*a*x-r*d*x)*A,i[10]=(h*g*s-v*c*s+v*a*u-r*g*u-h*a*x+r*c*x)*A,i[11]=(p*c*s-h*d*s-p*a*u+r*d*u+h*a*m-r*c*m)*A,i[12]=w*A,i[13]=(p*g*o-v*d*o+v*a*f-r*g*f-p*a*y+r*d*y)*A,i[14]=(v*c*o-h*g*o-v*a*l+r*g*l+h*a*y-r*c*y)*A,i[15]=(h*d*o-p*c*o+p*a*l-r*d*l-h*a*f+r*c*f)*A,this},scale:function(t){var e=this.elements,i=t.x,n=t.y,r=t.z;return e[0]*=i,e[4]*=n,e[8]*=r,e[1]*=i,e[5]*=n,e[9]*=r,e[2]*=i,e[6]*=n,e[10]*=r,e[3]*=i,e[7]*=n,e[11]*=r,this},getMaxScaleOnAxis:function(){var t=this.elements,e=t[0]*t[0]+t[1]*t[1]+t[2]*t[2],i=t[4]*t[4]+t[5]*t[5]+t[6]*t[6],n=t[8]*t[8]+t[9]*t[9]+t[10]*t[10];return Math.sqrt(Math.max(e,i,n))},makeTranslation:function(t,e,i){return this.set(1,0,0,t,0,1,0,e,0,0,1,i,0,0,0,1),this},makeRotationX:function(t){var e=Math.cos(t),i=Math.sin(t);return this.set(1,0,0,0,0,e,-i,0,0,i,e,0,0,0,0,1),this},makeRotationY:function(t){var e=Math.cos(t),i=Math.sin(t);return this.set(e,0,i,0,0,1,0,0,-i,0,e,0,0,0,0,1),this},makeRotationZ:function(t){var e=Math.cos(t),i=Math.sin(t);return this.set(e,-i,0,0,i,e,0,0,0,0,1,0,0,0,0,1),this},makeRotationAxis:function(t,e){var i=Math.cos(e),n=Math.sin(e),r=1-i,a=t.x,o=t.y,s=t.z,h=r*a,c=r*o;return this.set(h*a+i,h*o-n*s,h*s+n*o,0,h*o+n*s,c*o+i,c*s-n*a,0,h*s-n*o,c*s+n*a,r*s*s+i,0,0,0,0,1),this},makeScale:function(t,e,i){return this.set(t,0,0,0,0,e,0,0,0,0,i,0,0,0,0,1),this},makeShear:function(t,e,i){return this.set(1,e,i,0,t,1,i,0,t,e,1,0,0,0,0,1),this},compose:function(t,e,i){return this.makeRotationFromQuaternion(e),this.scale(i),this.setPosition(t),this},decompose:function(){var t=new a,e=new n;return function(i,n,r){var a=this.elements,o=t.set(a[0],a[1],a[2]).length(),s=t.set(a[4],a[5],a[6]).length(),h=t.set(a[8],a[9],a[10]).length();this.determinant()<0&&(o=-o),i.x=a[12],i.y=a[13],i.z=a[14],e.copy(this);var c=1/o,l=1/s,u=1/h;return e.elements[0]*=c,e.elements[1]*=c,e.elements[2]*=c,e.elements[4]*=l,e.elements[5]*=l,e.elements[6]*=l,e.elements[8]*=u,e.elements[9]*=u,e.elements[10]*=u,n.setFromRotationMatrix(e),r.x=o,r.y=s,r.z=h,this}}(),makePerspective:function(t,e,i,n,r,a){var o=this.elements,s=2*r/(e-t),h=2*r/(i-n),c=(e+t)/(e-t),l=(i+n)/(i-n),u=-(a+r)/(a-r),p=-2*a*r/(a-r);return o[0]=s,o[4]=0,o[8]=c,o[12]=0,o[1]=0,o[5]=h,o[9]=l,o[13]=0,o[2]=0,o[6]=0,o[10]=u,o[14]=p,o[3]=0,o[7]=0,o[11]=-1,o[15]=0,this},makeOrthographic:function(t,e,i,n,r,a){var o=this.elements,s=1/(e-t),h=1/(i-n),c=1/(a-r),l=(e+t)*s,u=(i+n)*h,p=(a+r)*c;return o[0]=2*s,o[4]=0,o[8]=0,o[12]=-l,o[1]=0,o[5]=2*h,o[9]=0,o[13]=-u,o[2]=0,o[6]=0,o[10]=-2*c,o[14]=-p,o[3]=0,o[7]=0,o[11]=0,o[15]=1,this},equals:function(t){for(var e=this.elements,i=t.elements,n=0;n<16;n++)if(e[n]!==i[n])return!1;return!0},fromArray:function(t,e){void 0===e&&(e=0);for(var i=0;i<16;i++)this.elements[i]=t[i+e];return this},toArray:function(t,e){void 0===t&&(t=[]),void 0===e&&(e=0);var i=this.elements;return t[e]=i[0],t[e+1]=i[1],t[e+2]=i[2],t[e+3]=i[3],t[e+4]=i[4],t[e+5]=i[5],t[e+6]=i[6],t[e+7]=i[7],t[e+8]=i[8],t[e+9]=i[9],t[e+10]=i[10],t[e+11]=i[11],t[e+12]=i[12],t[e+13]=i[13],t[e+14]=i[14],t[e+15]=i[15],t}}),Object.assign(r,{slerp:function(t,e,i,n){return i.copy(t).slerp(e,n)},slerpFlat:function(t,e,i,n,r,a,o){var s=i[n+0],h=i[n+1],c=i[n+2],l=i[n+3],u=r[a+0],p=r[a+1],d=r[a+2],f=r[a+3];if(l!==f||s!==u||h!==p||c!==d){var m=1-o,v=s*u+h*p+c*d+l*f,g=v>=0?1:-1,y=1-v*v;if(y>Number.EPSILON){var x=Math.sqrt(y),_=Math.atan2(x,v*g);m=Math.sin(m*_)/x,o=Math.sin(o*_)/x}var b=o*g;if(s=s*m+u*b,h=h*m+p*b,c=c*m+d*b,l=l*m+f*b,m===1-o){var M=1/Math.sqrt(s*s+h*h+c*c+l*l);s*=M,h*=M,c*=M,l*=M}}t[e]=s,t[e+1]=h,t[e+2]=c,t[e+3]=l}}),Object.defineProperties(r.prototype,{x:{get:function(){return this._x},set:function(t){this._x=t,this.onChangeCallback()}},y:{get:function(){return this._y},set:function(t){this._y=t,this.onChangeCallback()}},z:{get:function(){return this._z},set:function(t){this._z=t,this.onChangeCallback()}},w:{get:function(){return this._w},set:function(t){this._w=t,this.onChangeCallback()}}}),Object.assign(r.prototype,{set:function(t,e,i,n){return this._x=t,this._y=e,this._z=i,this._w=n,this.onChangeCallback(),this},clone:function(){return new this.constructor(this._x,this._y,this._z,this._w)},copy:function(t){return this._x=t.x,this._y=t.y,this._z=t.z,this._w=t.w,this.onChangeCallback(),this},setFromEuler:function(t,e){if(!t||!t.isEuler)throw new Error("THREE.Quaternion: .setFromEuler() now expects an Euler rotation rather than a Vector3 and order.");var i=t._x,n=t._y,r=t._z,a=t.order,o=Math.cos,s=Math.sin,h=o(i/2),c=o(n/2),l=o(r/2),u=s(i/2),p=s(n/2),d=s(r/2);return"XYZ"===a?(this._x=u*c*l+h*p*d,this._y=h*p*l-u*c*d,this._z=h*c*d+u*p*l,this._w=h*c*l-u*p*d):"YXZ"===a?(this._x=u*c*l+h*p*d,this._y=h*p*l-u*c*d,this._z=h*c*d-u*p*l,this._w=h*c*l+u*p*d):"ZXY"===a?(this._x=u*c*l-h*p*d,this._y=h*p*l+u*c*d,this._z=h*c*d+u*p*l,this._w=h*c*l-u*p*d):"ZYX"===a?(this._x=u*c*l-h*p*d,this._y=h*p*l+u*c*d,this._z=h*c*d-u*p*l,this._w=h*c*l+u*p*d):"YZX"===a?(this._x=u*c*l+h*p*d,this._y=h*p*l+u*c*d,this._z=h*c*d-u*p*l,this._w=h*c*l-u*p*d):"XZY"===a&&(this._x=u*c*l-h*p*d,this._y=h*p*l-u*c*d,this._z=h*c*d+u*p*l,this._w=h*c*l+u*p*d),!1!==e&&this.onChangeCallback(),this},setFromAxisAngle:function(t,e){var i=e/2,n=Math.sin(i);return this._x=t.x*n,this._y=t.y*n,this._z=t.z*n,this._w=Math.cos(i),this.onChangeCallback(),this},setFromRotationMatrix:function(t){var e,i=t.elements,n=i[0],r=i[4],a=i[8],o=i[1],s=i[5],h=i[9],c=i[2],l=i[6],u=i[10],p=n+s+u;return p>0?(e=.5/Math.sqrt(p+1),this._w=.25/e,this._x=(l-h)*e,this._y=(a-c)*e,this._z=(o-r)*e):n>s&&n>u?(e=2*Math.sqrt(1+n-s-u),this._w=(l-h)/e,this._x=.25*e,this._y=(r+o)/e,this._z=(a+c)/e):s>u?(e=2*Math.sqrt(1+s-n-u),this._w=(a-c)/e,this._x=(r+o)/e,this._y=.25*e,this._z=(h+l)/e):(e=2*Math.sqrt(1+u-n-s),this._w=(o-r)/e,this._x=(a+c)/e,this._y=(h+l)/e,this._z=.25*e),this.onChangeCallback(),this},setFromUnitVectors:function(){var t,e=new a;return function(i,n){return void 0===e&&(e=new a),(t=i.dot(n)+1)<1e-6?(t=0,Math.abs(i.x)>Math.abs(i.z)?e.set(-i.y,i.x,0):e.set(0,-i.z,i.y)):e.crossVectors(i,n),this._x=e.x,this._y=e.y,this._z=e.z,this._w=t,this.normalize()}}(),inverse:function(){return this.conjugate().normalize()},conjugate:function(){return this._x*=-1,this._y*=-1,this._z*=-1,this.onChangeCallback(),this},dot:function(t){return this._x*t._x+this._y*t._y+this._z*t._z+this._w*t._w},lengthSq:function(){return this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w},length:function(){return Math.sqrt(this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w)},normalize:function(){var t=this.length();return 0===t?(this._x=0,this._y=0,this._z=0,this._w=1):(t=1/t,this._x=this._x*t,this._y=this._y*t,this._z=this._z*t,this._w=this._w*t),this.onChangeCallback(),this},multiply:function(t,e){return void 0!==e?this.multiplyQuaternions(t,e):this.multiplyQuaternions(this,t)},premultiply:function(t){return this.multiplyQuaternions(t,this)},multiplyQuaternions:function(t,e){var i=t._x,n=t._y,r=t._z,a=t._w,o=e._x,s=e._y,h=e._z,c=e._w;return this._x=i*c+a*o+n*h-r*s,this._y=n*c+a*s+r*o-i*h,this._z=r*c+a*h+i*s-n*o,this._w=a*c-i*o-n*s-r*h,this.onChangeCallback(),this},slerp:function(t,e){if(0===e)return this;if(1===e)return this.copy(t);var i=this._x,n=this._y,r=this._z,a=this._w,o=a*t._w+i*t._x+n*t._y+r*t._z;if(o<0?(this._w=-t._w,this._x=-t._x,this._y=-t._y,this._z=-t._z,o=-o):this.copy(t),o>=1)return this._w=a,this._x=i,this._y=n,this._z=r,this;var s=Math.sqrt(1-o*o);if(Math.abs(s)<.001)return this._w=.5*(a+this._w),this._x=.5*(i+this._x),this._y=.5*(n+this._y),this._z=.5*(r+this._z),this;var h=Math.atan2(s,o),c=Math.sin((1-e)*h)/s,l=Math.sin(e*h)/s;return this._w=a*c+this._w*l,this._x=i*c+this._x*l,this._y=n*c+this._y*l,this._z=r*c+this._z*l,this.onChangeCallback(),this},equals:function(t){return t._x===this._x&&t._y===this._y&&t._z===this._z&&t._w===this._w},fromArray:function(t,e){return void 0===e&&(e=0),this._x=t[e],this._y=t[e+1],this._z=t[e+2],this._w=t[e+3],this.onChangeCallback(),this},toArray:function(t,e){return void 0===t&&(t=[]),void 0===e&&(e=0),t[e]=this._x,t[e+1]=this._y,t[e+2]=this._z,t[e+3]=this._w,t},onChange:function(t){return this.onChangeCallback=t,this},onChangeCallback:function(){}}),Object.assign(a.prototype,{isVector3:!0,set:function(t,e,i){return this.x=t,this.y=e,this.z=i,this},setScalar:function(t){return this.x=t,this.y=t,this.z=t,this},setX:function(t){return this.x=t,this},setY:function(t){return this.y=t,this},setZ:function(t){return this.z=t,this},setComponent:function(t,e){switch(t){case 0:this.x=e;break;case 1:this.y=e;break;case 2:this.z=e;break;default:throw new Error("index is out of range: "+t)}return this},getComponent:function(t){switch(t){case 0:return this.x;case 1:return this.y;case 2:return this.z;default:throw new Error("index is out of range: "+t)}},clone:function(){return new this.constructor(this.x,this.y,this.z)},copy:function(t){return this.x=t.x,this.y=t.y,this.z=t.z,this},add:function(t,e){return void 0!==e?this.addVectors(t,e):(this.x+=t.x,this.y+=t.y,this.z+=t.z,this)},addScalar:function(t){return this.x+=t,this.y+=t,this.z+=t,this},addVectors:function(t,e){return this.x=t.x+e.x,this.y=t.y+e.y,this.z=t.z+e.z,this},addScaledVector:function(t,e){return this.x+=t.x*e,this.y+=t.y*e,this.z+=t.z*e,this},sub:function(t,e){return void 0!==e?this.subVectors(t,e):(this.x-=t.x,this.y-=t.y,this.z-=t.z,this)},subScalar:function(t){return this.x-=t,this.y-=t,this.z-=t,this},subVectors:function(t,e){return this.x=t.x-e.x,this.y=t.y-e.y,this.z=t.z-e.z,this},multiply:function(t,e){return void 0!==e?this.multiplyVectors(t,e):(this.x*=t.x,this.y*=t.y,this.z*=t.z,this)},multiplyScalar:function(t){return this.x*=t,this.y*=t,this.z*=t,this},multiplyVectors:function(t,e){return this.x=t.x*e.x,this.y=t.y*e.y,this.z=t.z*e.z,this},applyEuler:function(){var t=new r;return function(e){return!e||e.isEuler,this.applyQuaternion(t.setFromEuler(e))}}(),applyAxisAngle:function(){var t=new r;return function(e,i){return this.applyQuaternion(t.setFromAxisAngle(e,i))}}(),applyMatrix3:function(t){var e=this.x,i=this.y,n=this.z,r=t.elements;return this.x=r[0]*e+r[3]*i+r[6]*n,this.y=r[1]*e+r[4]*i+r[7]*n,this.z=r[2]*e+r[5]*i+r[8]*n,this},applyMatrix4:function(t){var e=this.x,i=this.y,n=this.z,r=t.elements,a=1/(r[3]*e+r[7]*i+r[11]*n+r[15]);return this.x=(r[0]*e+r[4]*i+r[8]*n+r[12])*a,this.y=(r[1]*e+r[5]*i+r[9]*n+r[13])*a,this.z=(r[2]*e+r[6]*i+r[10]*n+r[14])*a,this},applyQuaternion:function(t){var e=this.x,i=this.y,n=this.z,r=t.x,a=t.y,o=t.z,s=t.w,h=s*e+a*n-o*i,c=s*i+o*e-r*n,l=s*n+r*i-a*e,u=-r*e-a*i-o*n;return this.x=h*s+u*-r+c*-o-l*-a,this.y=c*s+u*-a+l*-r-h*-o,this.z=l*s+u*-o+h*-a-c*-r,this},project:function(){var t=new n;return function(e){return t.multiplyMatrices(e.projectionMatrix,t.getInverse(e.matrixWorld)),this.applyMatrix4(t)}}(),unproject:function(){var t=new n;return function(e){return t.multiplyMatrices(e.matrixWorld,t.getInverse(e.projectionMatrix)),this.applyMatrix4(t)}}(),transformDirection:function(t){var e=this.x,i=this.y,n=this.z,r=t.elements;return this.x=r[0]*e+r[4]*i+r[8]*n,this.y=r[1]*e+r[5]*i+r[9]*n,this.z=r[2]*e+r[6]*i+r[10]*n,this.normalize()},divide:function(t){return this.x/=t.x,this.y/=t.y,this.z/=t.z,this},divideScalar:function(t){return this.multiplyScalar(1/t)},min:function(t){return this.x=Math.min(this.x,t.x),this.y=Math.min(this.y,t.y),this.z=Math.min(this.z,t.z),this},max:function(t){return this.x=Math.max(this.x,t.x),this.y=Math.max(this.y,t.y),this.z=Math.max(this.z,t.z),this},clamp:function(t,e){return this.x=Math.max(t.x,Math.min(e.x,this.x)),this.y=Math.max(t.y,Math.min(e.y,this.y)),this.z=Math.max(t.z,Math.min(e.z,this.z)),this},clampScalar:function(){var t=new a,e=new a;return function(i,n){return t.set(i,i,i),e.set(n,n,n),this.clamp(t,e)}}(),clampLength:function(t,e){var i=this.length();return this.divideScalar(i||1).multiplyScalar(Math.max(t,Math.min(e,i)))},floor:function(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this.z=Math.floor(this.z),this},ceil:function(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this.z=Math.ceil(this.z),this},round:function(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this.z=Math.round(this.z),this},roundToZero:function(){return this.x=this.x<0?Math.ceil(this.x):Math.floor(this.x),this.y=this.y<0?Math.ceil(this.y):Math.floor(this.y),this.z=this.z<0?Math.ceil(this.z):Math.floor(this.z),this},negate:function(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this},dot:function(t){return this.x*t.x+this.y*t.y+this.z*t.z},lengthSq:function(){return this.x*this.x+this.y*this.y+this.z*this.z},length:function(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z)},manhattanLength:function(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)},normalize:function(){return this.divideScalar(this.length()||1)},setLength:function(t){return this.normalize().multiplyScalar(t)},lerp:function(t,e){return this.x+=(t.x-this.x)*e,this.y+=(t.y-this.y)*e,this.z+=(t.z-this.z)*e,this},lerpVectors:function(t,e,i){return this.subVectors(e,t).multiplyScalar(i).add(t)},cross:function(t,e){return void 0!==e?this.crossVectors(t,e):this.crossVectors(this,t)},crossVectors:function(t,e){var i=t.x,n=t.y,r=t.z,a=e.x,o=e.y,s=e.z;return this.x=n*s-r*o,this.y=r*a-i*s,this.z=i*o-n*a,this},projectOnVector:function(t){var e=t.dot(this)/t.lengthSq();return this.copy(t).multiplyScalar(e)},projectOnPlane:function(){var t=new a;return function(e){return t.copy(this).projectOnVector(e),this.sub(t)}}(),reflect:function(){var t=new a;return function(e){return this.sub(t.copy(e).multiplyScalar(2*this.dot(e)))}}(),angleTo:function(t){var e=this.dot(t)/Math.sqrt(this.lengthSq()*t.lengthSq());return Math.acos(Po.clamp(e,-1,1))},distanceTo:function(t){return Math.sqrt(this.distanceToSquared(t))},distanceToSquared:function(t){var e=this.x-t.x,i=this.y-t.y,n=this.z-t.z;return e*e+i*i+n*n},manhattanDistanceTo:function(t){return Math.abs(this.x-t.x)+Math.abs(this.y-t.y)+Math.abs(this.z-t.z)},setFromSpherical:function(t){var e=Math.sin(t.phi)*t.radius;return this.x=e*Math.sin(t.theta),this.y=Math.cos(t.phi)*t.radius,this.z=e*Math.cos(t.theta),this},setFromCylindrical:function(t){return this.x=t.radius*Math.sin(t.theta),this.y=t.y,this.z=t.radius*Math.cos(t.theta),this},setFromMatrixPosition:function(t){var e=t.elements;return this.x=e[12],this.y=e[13],this.z=e[14],this},setFromMatrixScale:function(t){var e=this.setFromMatrixColumn(t,0).length(),i=this.setFromMatrixColumn(t,1).length(),n=this.setFromMatrixColumn(t,2).length();return this.x=e,this.y=i,this.z=n,this},setFromMatrixColumn:function(t,e){return this.fromArray(t.elements,4*e)},equals:function(t){return t.x===this.x&&t.y===this.y&&t.z===this.z},fromArray:function(t,e){return void 0===e&&(e=0),this.x=t[e],this.y=t[e+1],this.z=t[e+2],this},toArray:function(t,e){return void 0===t&&(t=[]),void 0===e&&(e=0),t[e]=this.x,t[e+1]=this.y,t[e+2]=this.z,t},fromBufferAttribute:function(t,e,i){return this.x=t.getX(e),this.y=t.getY(e),this.z=t.getZ(e),this}}),Object.assign(o.prototype,{isMatrix3:!0,set:function(t,e,i,n,r,a,o,s,h){var c=this.elements;return c[0]=t,c[1]=n,c[2]=o,c[3]=e,c[4]=r,c[5]=s,c[6]=i,c[7]=a,c[8]=h,this},identity:function(){return this.set(1,0,0,0,1,0,0,0,1),this},clone:function(){return(new this.constructor).fromArray(this.elements)},copy:function(t){var e=this.elements,i=t.elements;return e[0]=i[0],e[1]=i[1],e[2]=i[2],e[3]=i[3],e[4]=i[4],e[5]=i[5],e[6]=i[6],e[7]=i[7],e[8]=i[8],this},setFromMatrix4:function(t){var e=t.elements;return this.set(e[0],e[4],e[8],e[1],e[5],e[9],e[2],e[6],e[10]),this},applyToBufferAttribute:function(){var t=new a;return function(e){for(var i=0,n=e.count;i<n;i++)t.x=e.getX(i),t.y=e.getY(i),t.z=e.getZ(i),t.applyMatrix3(this),e.setXYZ(i,t.x,t.y,t.z);return e}}(),multiply:function(t){return this.multiplyMatrices(this,t)},premultiply:function(t){return this.multiplyMatrices(t,this)},multiplyMatrices:function(t,e){var i=t.elements,n=e.elements,r=this.elements,a=i[0],o=i[3],s=i[6],h=i[1],c=i[4],l=i[7],u=i[2],p=i[5],d=i[8],f=n[0],m=n[3],v=n[6],g=n[1],y=n[4],x=n[7],_=n[2],b=n[5],M=n[8];return r[0]=a*f+o*g+s*_,r[3]=a*m+o*y+s*b,r[6]=a*v+o*x+s*M,r[1]=h*f+c*g+l*_,r[4]=h*m+c*y+l*b,r[7]=h*v+c*x+l*M,r[2]=u*f+p*g+d*_,r[5]=u*m+p*y+d*b,r[8]=u*v+p*x+d*M,this},multiplyScalar:function(t){var e=this.elements;return e[0]*=t,e[3]*=t,e[6]*=t,e[1]*=t,e[4]*=t,e[7]*=t,e[2]*=t,e[5]*=t,e[8]*=t,this},determinant:function(){var t=this.elements,e=t[0],i=t[1],n=t[2],r=t[3],a=t[4],o=t[5],s=t[6],h=t[7],c=t[8];return e*a*c-e*o*h-i*r*c+i*o*s+n*r*h-n*a*s},getInverse:function(t,e){t&&t.isMatrix4;var i=t.elements,n=this.elements,r=i[0],a=i[1],o=i[2],s=i[3],h=i[4],c=i[5],l=i[6],u=i[7],p=i[8],d=p*h-c*u,f=c*l-p*s,m=u*s-h*l,v=r*d+a*f+o*m;if(0===v){var g="THREE.Matrix3: .getInverse() can't invert matrix, determinant is 0";if(!0===e)throw new Error(g);return this.identity()}var y=1/v;return n[0]=d*y,n[1]=(o*u-p*a)*y,n[2]=(c*a-o*h)*y,n[3]=f*y,n[4]=(p*r-o*l)*y,n[5]=(o*s-c*r)*y,n[6]=m*y,n[7]=(a*l-u*r)*y,n[8]=(h*r-a*s)*y,this},transpose:function(){var t,e=this.elements;return t=e[1],e[1]=e[3],e[3]=t,t=e[2],e[2]=e[6],e[6]=t,t=e[5],e[5]=e[7],e[7]=t,this},getNormalMatrix:function(t){return this.setFromMatrix4(t).getInverse(this).transpose()},transposeIntoArray:function(t){var e=this.elements;return t[0]=e[0],t[1]=e[3],t[2]=e[6],t[3]=e[1],t[4]=e[4],t[5]=e[7],t[6]=e[2],t[7]=e[5],t[8]=e[8],this},setUvTransform:function(t,e,i,n,r,a,o){var s=Math.cos(r),h=Math.sin(r);this.set(i*s,i*h,-i*(s*a+h*o)+a+t,-n*h,n*s,-n*(-h*a+s*o)+o+e,0,0,1)},scale:function(t,e){var i=this.elements;return i[0]*=t,i[3]*=t,i[6]*=t,i[1]*=e,i[4]*=e,i[7]*=e,this},rotate:function(t){var e=Math.cos(t),i=Math.sin(t),n=this.elements,r=n[0],a=n[3],o=n[6],s=n[1],h=n[4],c=n[7];return n[0]=e*r+i*s,n[3]=e*a+i*h,n[6]=e*o+i*c,n[1]=-i*r+e*s,n[4]=-i*a+e*h,n[7]=-i*o+e*c,this},translate:function(t,e){var i=this.elements;return i[0]+=t*i[2],i[3]+=t*i[5],i[6]+=t*i[8],i[1]+=e*i[2],i[4]+=e*i[5],i[7]+=e*i[8],this},equals:function(t){for(var e=this.elements,i=t.elements,n=0;n<9;n++)if(e[n]!==i[n])return!1;return!0},fromArray:function(t,e){void 0===e&&(e=0);for(var i=0;i<9;i++)this.elements[i]=t[i+e];return this},toArray:function(t,e){void 0===t&&(t=[]),void 0===e&&(e=0);var i=this.elements;return t[e]=i[0],t[e+1]=i[1],t[e+2]=i[2],t[e+3]=i[3],t[e+4]=i[4],t[e+5]=i[5],t[e+6]=i[6],t[e+7]=i[7],t[e+8]=i[8],t}});var Co=0;s.DEFAULT_IMAGE=void 0,s.DEFAULT_MAPPING=300,s.prototype=Object.assign(Object.create(e.prototype),{constructor:s,isTexture:!0,clone:function(){return(new this.constructor).copy(this)},copy:function(t){return this.name=t.name,this.image=t.image,this.mipmaps=t.mipmaps.slice(0),this.mapping=t.mapping,this.wrapS=t.wrapS,this.wrapT=t.wrapT,this.magFilter=t.magFilter,this.minFilter=t.minFilter,this.anisotropy=t.anisotropy,this.format=t.format,this.type=t.type,this.offset.copy(t.offset),this.repeat.copy(t.repeat),this.center.copy(t.center),this.rotation=t.rotation,this.matrixAutoUpdate=t.matrixAutoUpdate,this.matrix.copy(t.matrix),this.generateMipmaps=t.generateMipmaps,this.premultiplyAlpha=t.premultiplyAlpha,this.flipY=t.flipY,this.unpackAlignment=t.unpackAlignment,this.encoding=t.encoding,this},toJSON:function(t){var e=void 0===t||"string"==typeof t;if(!e&&void 0!==t.textures[this.uuid])return t.textures[this.uuid];var i={metadata:{version:4.5,type:"Texture",generator:"Texture.toJSON"},uuid:this.uuid,name:this.name,mapping:this.mapping,repeat:[this.repeat.x,this.repeat.y],offset:[this.offset.x,this.offset.y],center:[this.center.x,this.center.y],rotation:this.rotation,wrap:[this.wrapS,this.wrapT],minFilter:this.minFilter,magFilter:this.magFilter,anisotropy:this.anisotropy,flipY:this.flipY};if(void 0!==this.image){var n=this.image;void 0===n.uuid&&(n.uuid=Po.generateUUID()),e||void 0!==t.images[n.uuid]||(t.images[n.uuid]={uuid:n.uuid,url:function(t){var e;if(t instanceof HTMLCanvasElement)e=t;else{(e=document.createElementNS("http://www.w3.org/1999/xhtml","canvas")).width=t.width,e.height=t.height;var i=e.getContext("2d");t instanceof ImageData?i.putImageData(t,0,0):i.drawImage(t,0,0,t.width,t.height)}return e.width>2048||e.height>2048?e.toDataURL("image/jpeg",.6):e.toDataURL("image/png")}(n)}),i.image=n.uuid}return e||(t.textures[this.uuid]=i),i},dispose:function(){this.dispatchEvent({type:"dispose"})},transformUv:function(t){if(300===this.mapping){if(t.applyMatrix3(this.matrix),t.x<0||t.x>1)switch(this.wrapS){case Ca:t.x=t.x-Math.floor(t.x);break;case Ia:t.x=t.x<0?0:1;break;case Ra:1===Math.abs(Math.floor(t.x)%2)?t.x=Math.ceil(t.x)-t.x:t.x=t.x-Math.floor(t.x)}if(t.y<0||t.y>1)switch(this.wrapT){case Ca:t.y=t.y-Math.floor(t.y);break;case Ia:t.y=t.y<0?0:1;break;case Ra:1===Math.abs(Math.floor(t.y)%2)?t.y=Math.ceil(t.y)-t.y:t.y=t.y-Math.floor(t.y)}this.flipY&&(t.y=1-t.y)}}}),Object.defineProperty(s.prototype,"needsUpdate",{set:function(t){!0===t&&this.version++}}),Object.assign(h.prototype,{isVector4:!0,set:function(t,e,i,n){return this.x=t,this.y=e,this.z=i,this.w=n,this},setScalar:function(t){return this.x=t,this.y=t,this.z=t,this.w=t,this},setX:function(t){return this.x=t,this},setY:function(t){return this.y=t,this},setZ:function(t){return this.z=t,this},setW:function(t){return this.w=t,this},setComponent:function(t,e){switch(t){case 0:this.x=e;break;case 1:this.y=e;break;case 2:this.z=e;break;case 3:this.w=e;break;default:throw new Error("index is out of range: "+t)}return this},getComponent:function(t){switch(t){case 0:return this.x;case 1:return this.y;case 2:return this.z;case 3:return this.w;default:throw new Error("index is out of range: "+t)}},clone:function(){return new this.constructor(this.x,this.y,this.z,this.w)},copy:function(t){return this.x=t.x,this.y=t.y,this.z=t.z,this.w=void 0!==t.w?t.w:1,this},add:function(t,e){return void 0!==e?this.addVectors(t,e):(this.x+=t.x,this.y+=t.y,this.z+=t.z,this.w+=t.w,this)},addScalar:function(t){return this.x+=t,this.y+=t,this.z+=t,this.w+=t,this},addVectors:function(t,e){return this.x=t.x+e.x,this.y=t.y+e.y,this.z=t.z+e.z,this.w=t.w+e.w,this},addScaledVector:function(t,e){return this.x+=t.x*e,this.y+=t.y*e,this.z+=t.z*e,this.w+=t.w*e,this},sub:function(t,e){return void 0!==e?this.subVectors(t,e):(this.x-=t.x,this.y-=t.y,this.z-=t.z,this.w-=t.w,this)},subScalar:function(t){return this.x-=t,this.y-=t,this.z-=t,this.w-=t,this},subVectors:function(t,e){return this.x=t.x-e.x,this.y=t.y-e.y,this.z=t.z-e.z,this.w=t.w-e.w,this},multiplyScalar:function(t){return this.x*=t,this.y*=t,this.z*=t,this.w*=t,this},applyMatrix4:function(t){var e=this.x,i=this.y,n=this.z,r=this.w,a=t.elements;return this.x=a[0]*e+a[4]*i+a[8]*n+a[12]*r,this.y=a[1]*e+a[5]*i+a[9]*n+a[13]*r,this.z=a[2]*e+a[6]*i+a[10]*n+a[14]*r,this.w=a[3]*e+a[7]*i+a[11]*n+a[15]*r,this},divideScalar:function(t){return this.multiplyScalar(1/t)},setAxisAngleFromQuaternion:function(t){this.w=2*Math.acos(t.w);var e=Math.sqrt(1-t.w*t.w);return e<1e-4?(this.x=1,this.y=0,this.z=0):(this.x=t.x/e,this.y=t.y/e,this.z=t.z/e),this},setAxisAngleFromRotationMatrix:function(t){var e,i,n,r,a=t.elements,o=a[0],s=a[4],h=a[8],c=a[1],l=a[5],u=a[9],p=a[2],d=a[6],f=a[10];if(Math.abs(s-c)<.01&&Math.abs(h-p)<.01&&Math.abs(u-d)<.01){if(Math.abs(s+c)<.1&&Math.abs(h+p)<.1&&Math.abs(u+d)<.1&&Math.abs(o+l+f-3)<.1)return this.set(1,0,0,0),this;e=Math.PI;var m=(o+1)/2,v=(l+1)/2,g=(f+1)/2,y=(s+c)/4,x=(h+p)/4,_=(u+d)/4;return m>v&&m>g?m<.01?(i=0,n=.707106781,r=.707106781):(n=y/(i=Math.sqrt(m)),r=x/i):v>g?v<.01?(i=.707106781,n=0,r=.707106781):(i=y/(n=Math.sqrt(v)),r=_/n):g<.01?(i=.707106781,n=.707106781,r=0):(i=x/(r=Math.sqrt(g)),n=_/r),this.set(i,n,r,e),this}var b=Math.sqrt((d-u)*(d-u)+(h-p)*(h-p)+(c-s)*(c-s));return Math.abs(b)<.001&&(b=1),this.x=(d-u)/b,this.y=(h-p)/b,this.z=(c-s)/b,this.w=Math.acos((o+l+f-1)/2),this},min:function(t){return this.x=Math.min(this.x,t.x),this.y=Math.min(this.y,t.y),this.z=Math.min(this.z,t.z),this.w=Math.min(this.w,t.w),this},max:function(t){return this.x=Math.max(this.x,t.x),this.y=Math.max(this.y,t.y),this.z=Math.max(this.z,t.z),this.w=Math.max(this.w,t.w),this},clamp:function(t,e){return this.x=Math.max(t.x,Math.min(e.x,this.x)),this.y=Math.max(t.y,Math.min(e.y,this.y)),this.z=Math.max(t.z,Math.min(e.z,this.z)),this.w=Math.max(t.w,Math.min(e.w,this.w)),this},clampScalar:function(){var t,e;return function(i,n){return void 0===t&&(t=new h,e=new h),t.set(i,i,i,i),e.set(n,n,n,n),this.clamp(t,e)}}(),clampLength:function(t,e){var i=this.length();return this.divideScalar(i||1).multiplyScalar(Math.max(t,Math.min(e,i)))},floor:function(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this.z=Math.floor(this.z),this.w=Math.floor(this.w),this},ceil:function(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this.z=Math.ceil(this.z),this.w=Math.ceil(this.w),this},round:function(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this.z=Math.round(this.z),this.w=Math.round(this.w),this},roundToZero:function(){return this.x=this.x<0?Math.ceil(this.x):Math.floor(this.x),this.y=this.y<0?Math.ceil(this.y):Math.floor(this.y),this.z=this.z<0?Math.ceil(this.z):Math.floor(this.z),this.w=this.w<0?Math.ceil(this.w):Math.floor(this.w),this},negate:function(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this.w=-this.w,this},dot:function(t){return this.x*t.x+this.y*t.y+this.z*t.z+this.w*t.w},lengthSq:function(){return this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w},length:function(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w)},manhattanLength:function(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)+Math.abs(this.w)},normalize:function(){return this.divideScalar(this.length()||1)},setLength:function(t){return this.normalize().multiplyScalar(t)},lerp:function(t,e){return this.x+=(t.x-this.x)*e,this.y+=(t.y-this.y)*e,this.z+=(t.z-this.z)*e,this.w+=(t.w-this.w)*e,this},lerpVectors:function(t,e,i){return this.subVectors(e,t).multiplyScalar(i).add(t)},equals:function(t){return t.x===this.x&&t.y===this.y&&t.z===this.z&&t.w===this.w},fromArray:function(t,e){return void 0===e&&(e=0),this.x=t[e],this.y=t[e+1],this.z=t[e+2],this.w=t[e+3],this},toArray:function(t,e){return void 0===t&&(t=[]),void 0===e&&(e=0),t[e]=this.x,t[e+1]=this.y,t[e+2]=this.z,t[e+3]=this.w,t},fromBufferAttribute:function(t,e,i){return this.x=t.getX(e),this.y=t.getY(e),this.z=t.getZ(e),this.w=t.getW(e),this}}),c.prototype=Object.assign(Object.create(e.prototype),{constructor:c,isWebGLRenderTarget:!0,setSize:function(t,e){this.width===t&&this.height===e||(this.width=t,this.height=e,this.dispose()),this.viewport.set(0,0,t,e),this.scissor.set(0,0,t,e)},clone:function(){return(new this.constructor).copy(this)},copy:function(t){return this.width=t.width,this.height=t.height,this.viewport.copy(t.viewport),this.texture=t.texture.clone(),this.depthBuffer=t.depthBuffer,this.stencilBuffer=t.stencilBuffer,this.depthTexture=t.depthTexture,this},dispose:function(){this.dispatchEvent({type:"dispose"})}}),(l.prototype=Object.create(c.prototype)).constructor=l,l.prototype.isWebGLRenderTargetCube=!0,(u.prototype=Object.create(s.prototype)).constructor=u,u.prototype.isDataTexture=!0,(p.prototype=Object.create(s.prototype)).constructor=p,p.prototype.isCubeTexture=!0,Object.defineProperty(p.prototype,"images",{get:function(){return this.image},set:function(t){this.image=t}});var Io=new s,Ro=new p,No=[],Oo=[],Do=new Float32Array(16),Uo=new Float32Array(9);V.prototype.setValue=function(t,e){for(var i=this.seq,n=0,r=i.length;n!==r;++n){var a=i[n];a.setValue(t,e[a.id])}};var Fo=/([\w\d_]+)(\])?(\[|\.)?/g;W.prototype.setValue=function(t,e,i){var n=this.map[e];void 0!==n&&n.setValue(t,i,this.renderer)},W.prototype.setOptional=function(t,e,i){var n=e[i];void 0!==n&&this.setValue(t,i,n)},W.upload=function(t,e,i,n){for(var r=0,a=e.length;r!==a;++r){var o=e[r],s=i[o.id];!1!==s.needsUpdate&&o.setValue(t,s.value,n)}},W.seqWithValue=function(t,e){for(var i=[],n=0,r=t.length;n!==r;++n){var a=t[n];a.id in e&&i.push(a)}return i};var zo={aliceblue:15792383,antiquewhite:16444375,aqua:65535,aquamarine:8388564,azure:15794175,beige:16119260,bisque:16770244,black:0,blanchedalmond:16772045,blue:255,blueviolet:9055202,brown:10824234,burlywood:14596231,cadetblue:6266528,chartreuse:8388352,chocolate:13789470,coral:16744272,cornflowerblue:6591981,cornsilk:16775388,crimson:14423100,cyan:65535,darkblue:139,darkcyan:35723,darkgoldenrod:12092939,darkgray:11119017,darkgreen:25600,darkgrey:11119017,darkkhaki:12433259,darkmagenta:9109643,darkolivegreen:5597999,darkorange:16747520,darkorchid:10040012,darkred:9109504,darksalmon:15308410,darkseagreen:9419919,darkslateblue:4734347,darkslategray:3100495,darkslategrey:3100495,darkturquoise:52945,darkviolet:9699539,deeppink:16716947,deepskyblue:49151,dimgray:6908265,dimgrey:6908265,dodgerblue:2003199,firebrick:11674146,floralwhite:16775920,forestgreen:2263842,fuchsia:16711935,gainsboro:14474460,ghostwhite:16316671,gold:16766720,goldenrod:14329120,gray:8421504,green:32768,greenyellow:11403055,grey:8421504,honeydew:15794160,hotpink:16738740,indianred:13458524,indigo:4915330,ivory:16777200,khaki:15787660,lavender:15132410,lavenderblush:16773365,lawngreen:8190976,lemonchiffon:16775885,lightblue:11393254,lightcoral:15761536,lightcyan:14745599,lightgoldenrodyellow:16448210,lightgray:13882323,lightgreen:9498256,lightgrey:13882323,lightpink:16758465,lightsalmon:16752762,lightseagreen:2142890,lightskyblue:8900346,lightslategray:7833753,lightslategrey:7833753,lightsteelblue:11584734,lightyellow:16777184,lime:65280,limegreen:3329330,linen:16445670,magenta:16711935,maroon:8388608,mediumaquamarine:6737322,mediumblue:205,mediumorchid:12211667,mediumpurple:9662683,mediumseagreen:3978097,mediumslateblue:8087790,mediumspringgreen:64154,mediumturquoise:4772300,mediumvioletred:13047173,midnightblue:1644912,mintcream:16121850,mistyrose:16770273,moccasin:16770229,navajowhite:16768685,navy:128,oldlace:16643558,olive:8421376,olivedrab:7048739,orange:16753920,orangered:16729344,orchid:14315734,palegoldenrod:15657130,palegreen:10025880,paleturquoise:11529966,palevioletred:14381203,papayawhip:16773077,peachpuff:16767673,peru:13468991,pink:16761035,plum:14524637,powderblue:11591910,purple:8388736,rebeccapurple:6697881,red:16711680,rosybrown:12357519,royalblue:4286945,saddlebrown:9127187,salmon:16416882,sandybrown:16032864,seagreen:3050327,seashell:16774638,sienna:10506797,silver:12632256,skyblue:8900331,slateblue:6970061,slategray:7372944,slategrey:7372944,snow:16775930,springgreen:65407,steelblue:4620980,tan:13808780,teal:32896,thistle:14204888,tomato:16737095,turquoise:4251856,violet:15631086,wheat:16113331,white:16777215,whitesmoke:16119285,yellow:16776960,yellowgreen:10145074};Object.assign(H.prototype,{isColor:!0,r:1,g:1,b:1,set:function(t){return t&&t.isColor?this.copy(t):"number"==typeof t?this.setHex(t):"string"==typeof t&&this.setStyle(t),this},setScalar:function(t){return this.r=t,this.g=t,this.b=t,this},setHex:function(t){return t=Math.floor(t),this.r=(t>>16&255)/255,this.g=(t>>8&255)/255,this.b=(255&t)/255,this},setRGB:function(t,e,i){return this.r=t,this.g=e,this.b=i,this},setHSL:function(){function t(t,e,i){return i<0&&(i+=1),i>1&&(i-=1),i<1/6?t+6*(e-t)*i:i<.5?e:i<2/3?t+6*(e-t)*(2/3-i):t}return function(e,i,n){if(e=Po.euclideanModulo(e,1),i=Po.clamp(i,0,1),n=Po.clamp(n,0,1),0===i)this.r=this.g=this.b=n;else{var r=n<=.5?n*(1+i):n+i-n*i,a=2*n-r;this.r=t(a,r,e+1/3),this.g=t(a,r,e),this.b=t(a,r,e-1/3)}return this}}(),setStyle:function(t){function e(t){void 0!==t&&parseFloat(t)}var i;if(i=/^((?:rgb|hsl)a?)\(\s*([^\)]*)\)/.exec(t)){var n,r=i[1],a=i[2];switch(r){case"rgb":case"rgba":if(n=/^(\d+)\s*,\s*(\d+)\s*,\s*(\d+)\s*(,\s*([0-9]*\.?[0-9]+)\s*)?$/.exec(a))return this.r=Math.min(255,parseInt(n[1],10))/255,this.g=Math.min(255,parseInt(n[2],10))/255,this.b=Math.min(255,parseInt(n[3],10))/255,e(n[5]),this;if(n=/^(\d+)\%\s*,\s*(\d+)\%\s*,\s*(\d+)\%\s*(,\s*([0-9]*\.?[0-9]+)\s*)?$/.exec(a))return this.r=Math.min(100,parseInt(n[1],10))/100,this.g=Math.min(100,parseInt(n[2],10))/100,this.b=Math.min(100,parseInt(n[3],10))/100,e(n[5]),this;break;case"hsl":case"hsla":if(n=/^([0-9]*\.?[0-9]+)\s*,\s*(\d+)\%\s*,\s*(\d+)\%\s*(,\s*([0-9]*\.?[0-9]+)\s*)?$/.exec(a)){var o=parseFloat(n[1])/360,s=parseInt(n[2],10)/100,h=parseInt(n[3],10)/100;return e(n[5]),this.setHSL(o,s,h)}}}else if(i=/^\#([A-Fa-f0-9]+)$/.exec(t)){var c=(l=i[1]).length;if(3===c)return this.r=parseInt(l.charAt(0)+l.charAt(0),16)/255,this.g=parseInt(l.charAt(1)+l.charAt(1),16)/255,this.b=parseInt(l.charAt(2)+l.charAt(2),16)/255,this;if(6===c)return this.r=parseInt(l.charAt(0)+l.charAt(1),16)/255,this.g=parseInt(l.charAt(2)+l.charAt(3),16)/255,this.b=parseInt(l.charAt(4)+l.charAt(5),16)/255,this}if(t&&t.length>0){var l;void 0!==(l=zo[t])&&this.setHex(l)}return this},clone:function(){return new this.constructor(this.r,this.g,this.b)},copy:function(t){return this.r=t.r,this.g=t.g,this.b=t.b,this},copyGammaToLinear:function(t,e){return void 0===e&&(e=2),this.r=Math.pow(t.r,e),this.g=Math.pow(t.g,e),this.b=Math.pow(t.b,e),this},copyLinearToGamma:function(t,e){void 0===e&&(e=2);var i=e>0?1/e:1;return this.r=Math.pow(t.r,i),this.g=Math.pow(t.g,i),this.b=Math.pow(t.b,i),this},convertGammaToLinear:function(){var t=this.r,e=this.g,i=this.b;return this.r=t*t,this.g=e*e,this.b=i*i,this},convertLinearToGamma:function(){return this.r=Math.sqrt(this.r),this.g=Math.sqrt(this.g),this.b=Math.sqrt(this.b),this},getHex:function(){return 255*this.r<<16^255*this.g<<8^255*this.b<<0},getHexString:function(){return("000000"+this.getHex().toString(16)).slice(-6)},getHSL:function(t){var e,i,n=t||{h:0,s:0,l:0},r=this.r,a=this.g,o=this.b,s=Math.max(r,a,o),h=Math.min(r,a,o),c=(h+s)/2;if(h===s)e=0,i=0;else{var l=s-h;switch(i=c<=.5?l/(s+h):l/(2-s-h),s){case r:e=(a-o)/l+(a<o?6:0);break;case a:e=(o-r)/l+2;break;case o:e=(r-a)/l+4}e/=6}return n.h=e,n.s=i,n.l=c,n},getStyle:function(){return"rgb("+(255*this.r|0)+","+(255*this.g|0)+","+(255*this.b|0)+")"},offsetHSL:function(t,e,i){var n=this.getHSL();return n.h+=t,n.s+=e,n.l+=i,this.setHSL(n.h,n.s,n.l),this},add:function(t){return this.r+=t.r,this.g+=t.g,this.b+=t.b,this},addColors:function(t,e){return this.r=t.r+e.r,this.g=t.g+e.g,this.b=t.b+e.b,this},addScalar:function(t){return this.r+=t,this.g+=t,this.b+=t,this},sub:function(t){return this.r=Math.max(0,this.r-t.r),this.g=Math.max(0,this.g-t.g),this.b=Math.max(0,this.b-t.b),this},multiply:function(t){return this.r*=t.r,this.g*=t.g,this.b*=t.b,this},multiplyScalar:function(t){return this.r*=t,this.g*=t,this.b*=t,this},lerp:function(t,e){return this.r+=(t.r-this.r)*e,this.g+=(t.g-this.g)*e,this.b+=(t.b-this.b)*e,this},equals:function(t){return t.r===this.r&&t.g===this.g&&t.b===this.b},fromArray:function(t,e){return void 0===e&&(e=0),this.r=t[e],this.g=t[e+1],this.b=t[e+2],this},toArray:function(t,e){return void 0===t&&(t=[]),void 0===e&&(e=0),t[e]=this.r,t[e+1]=this.g,t[e+2]=this.b,t},toJSON:function(){return this.getHex()}});var Bo={common:{diffuse:{value:new H(15658734)},opacity:{value:1},map:{value:null},uvTransform:{value:new o},alphaMap:{value:null}},specularmap:{specularMap:{value:null}},envmap:{envMap:{value:null},flipEnvMap:{value:-1},reflectivity:{value:1},refractionRatio:{value:.98}},aomap:{aoMap:{value:null},aoMapIntensity:{value:1}},lightmap:{lightMap:{value:null},lightMapIntensity:{value:1}},emissivemap:{emissiveMap:{value:null}},bumpmap:{bumpMap:{value:null},bumpScale:{value:1}},normalmap:{normalMap:{value:null},normalScale:{value:new i(1,1)}},displacementmap:{displacementMap:{value:null},displacementScale:{value:1},displacementBias:{value:0}},roughnessmap:{roughnessMap:{value:null}},metalnessmap:{metalnessMap:{value:null}},gradientmap:{gradientMap:{value:null}},fog:{fogDensity:{value:25e-5},fogNear:{value:1},fogFar:{value:2e3},fogColor:{value:new H(16777215)}},lights:{ambientLightColor:{value:[]},directionalLights:{value:[],properties:{direction:{},color:{},shadow:{},shadowBias:{},shadowRadius:{},shadowMapSize:{}}},directionalShadowMap:{value:[]},directionalShadowMatrix:{value:[]},spotLights:{value:[],properties:{color:{},position:{},direction:{},distance:{},coneCos:{},penumbraCos:{},decay:{},shadow:{},shadowBias:{},shadowRadius:{},shadowMapSize:{}}},spotShadowMap:{value:[]},spotShadowMatrix:{value:[]},pointLights:{value:[],properties:{color:{},position:{},decay:{},distance:{},shadow:{},shadowBias:{},shadowRadius:{},shadowMapSize:{},shadowCameraNear:{},shadowCameraFar:{}}},pointShadowMap:{value:[]},pointShadowMatrix:{value:[]},hemisphereLights:{value:[],properties:{direction:{},skyColor:{},groundColor:{}}},rectAreaLights:{value:[],properties:{color:{},position:{},width:{},height:{}}}},points:{diffuse:{value:new H(15658734)},opacity:{value:1},size:{value:1},scale:{value:1},map:{value:null},uvTransform:{value:new o}}},Go={merge:function(t){for(var e={},i=0;i<t.length;i++){var n=this.clone(t[i]);for(var r in n)e[r]=n[r]}return e},clone:function(t){var e={};for(var i in t){e[i]={};for(var n in t[i]){var r=t[i][n];r&&(r.isColor||r.isMatrix3||r.isMatrix4||r.isVector2||r.isVector3||r.isVector4||r.isTexture)?e[i][n]=r.clone():Array.isArray(r)?e[i][n]=r.slice():e[i][n]=r}}return e}},Vo={alphamap_fragment:"#ifdef USE_ALPHAMAP\n\tdiffuseColor.a *= texture2D( alphaMap, vUv ).g;\n#endif\n",alphamap_pars_fragment:"#ifdef USE_ALPHAMAP\n\tuniform sampler2D alphaMap;\n#endif\n",alphatest_fragment:"#ifdef ALPHATEST\n\tif ( diffuseColor.a < ALPHATEST ) discard;\n#endif\n",aomap_fragment:"#ifdef USE_AOMAP\n\tfloat ambientOcclusion = ( texture2D( aoMap, vUv2 ).r - 1.0 ) * aoMapIntensity + 1.0;\n\treflectedLight.indirectDiffuse *= ambientOcclusion;\n\t#if defined( USE_ENVMAP ) && defined( PHYSICAL )\n\t\tfloat dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );\n\t\treflectedLight.indirectSpecular *= computeSpecularOcclusion( dotNV, ambientOcclusion, material.specularRoughness );\n\t#endif\n#endif\n",aomap_pars_fragment:"#ifdef USE_AOMAP\n\tuniform sampler2D aoMap;\n\tuniform float aoMapIntensity;\n#endif",begin_vertex:"\nvec3 transformed = vec3( position );\n",beginnormal_vertex:"\nvec3 objectNormal = vec3( normal );\n",bsdfs:"float punctualLightIntensityToIrradianceFactor( const in float lightDistance, const in float cutoffDistance, const in float decayExponent ) {\n\tif( decayExponent > 0.0 ) {\n#if defined ( PHYSICALLY_CORRECT_LIGHTS )\n\t\tfloat distanceFalloff = 1.0 / max( pow( lightDistance, decayExponent ), 0.01 );\n\t\tfloat maxDistanceCutoffFactor = pow2( saturate( 1.0 - pow4( lightDistance / cutoffDistance ) ) );\n\t\treturn distanceFalloff * maxDistanceCutoffFactor;\n#else\n\t\treturn pow( saturate( -lightDistance / cutoffDistance + 1.0 ), decayExponent );\n#endif\n\t}\n\treturn 1.0;\n}\nvec3 BRDF_Diffuse_Lambert( const in vec3 diffuseColor ) {\n\treturn RECIPROCAL_PI * diffuseColor;\n}\nvec3 F_Schlick( const in vec3 specularColor, const in float dotLH ) {\n\tfloat fresnel = exp2( ( -5.55473 * dotLH - 6.98316 ) * dotLH );\n\treturn ( 1.0 - specularColor ) * fresnel + specularColor;\n}\nfloat G_GGX_Smith( const in float alpha, const in float dotNL, const in float dotNV ) {\n\tfloat a2 = pow2( alpha );\n\tfloat gl = dotNL + sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );\n\tfloat gv = dotNV + sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );\n\treturn 1.0 / ( gl * gv );\n}\nfloat G_GGX_SmithCorrelated( const in float alpha, const in float dotNL, const in float dotNV ) {\n\tfloat a2 = pow2( alpha );\n\tfloat gv = dotNL * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );\n\tfloat gl = dotNV * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );\n\treturn 0.5 / max( gv + gl, EPSILON );\n}\nfloat D_GGX( const in float alpha, const in float dotNH ) {\n\tfloat a2 = pow2( alpha );\n\tfloat denom = pow2( dotNH ) * ( a2 - 1.0 ) + 1.0;\n\treturn RECIPROCAL_PI * a2 / pow2( denom );\n}\nvec3 BRDF_Specular_GGX( const in IncidentLight incidentLight, const in GeometricContext geometry, const in vec3 specularColor, const in float roughness ) {\n\tfloat alpha = pow2( roughness );\n\tvec3 halfDir = normalize( incidentLight.direction + geometry.viewDir );\n\tfloat dotNL = saturate( dot( geometry.normal, incidentLight.direction ) );\n\tfloat dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );\n\tfloat dotNH = saturate( dot( geometry.normal, halfDir ) );\n\tfloat dotLH = saturate( dot( incidentLight.direction, halfDir ) );\n\tvec3 F = F_Schlick( specularColor, dotLH );\n\tfloat G = G_GGX_SmithCorrelated( alpha, dotNL, dotNV );\n\tfloat D = D_GGX( alpha, dotNH );\n\treturn F * ( G * D );\n}\nvec2 LTC_Uv( const in vec3 N, const in vec3 V, const in float roughness ) {\n\tconst float LUT_SIZE  = 64.0;\n\tconst float LUT_SCALE = ( LUT_SIZE - 1.0 ) / LUT_SIZE;\n\tconst float LUT_BIAS  = 0.5 / LUT_SIZE;\n\tfloat theta = acos( dot( N, V ) );\n\tvec2 uv = vec2(\n\t\tsqrt( saturate( roughness ) ),\n\t\tsaturate( theta / ( 0.5 * PI ) ) );\n\tuv = uv * LUT_SCALE + LUT_BIAS;\n\treturn uv;\n}\nfloat LTC_ClippedSphereFormFactor( const in vec3 f ) {\n\tfloat l = length( f );\n\treturn max( ( l * l + f.z ) / ( l + 1.0 ), 0.0 );\n}\nvec3 LTC_EdgeVectorFormFactor( const in vec3 v1, const in vec3 v2 ) {\n\tfloat x = dot( v1, v2 );\n\tfloat y = abs( x );\n\tfloat a = 0.86267 + (0.49788 + 0.01436 * y ) * y;\n\tfloat b = 3.45068 + (4.18814 + y) * y;\n\tfloat v = a / b;\n\tfloat theta_sintheta = (x > 0.0) ? v : 0.5 * inversesqrt( 1.0 - x * x ) - v;\n\treturn cross( v1, v2 ) * theta_sintheta;\n}\nvec3 LTC_Evaluate( const in vec3 N, const in vec3 V, const in vec3 P, const in mat3 mInv, const in vec3 rectCoords[ 4 ] ) {\n\tvec3 v1 = rectCoords[ 1 ] - rectCoords[ 0 ];\n\tvec3 v2 = rectCoords[ 3 ] - rectCoords[ 0 ];\n\tvec3 lightNormal = cross( v1, v2 );\n\tif( dot( lightNormal, P - rectCoords[ 0 ] ) < 0.0 ) return vec3( 0.0 );\n\tvec3 T1, T2;\n\tT1 = normalize( V - N * dot( V, N ) );\n\tT2 = - cross( N, T1 );\n\tmat3 mat = mInv * transposeMat3( mat3( T1, T2, N ) );\n\tvec3 coords[ 4 ];\n\tcoords[ 0 ] = mat * ( rectCoords[ 0 ] - P );\n\tcoords[ 1 ] = mat * ( rectCoords[ 1 ] - P );\n\tcoords[ 2 ] = mat * ( rectCoords[ 2 ] - P );\n\tcoords[ 3 ] = mat * ( rectCoords[ 3 ] - P );\n\tcoords[ 0 ] = normalize( coords[ 0 ] );\n\tcoords[ 1 ] = normalize( coords[ 1 ] );\n\tcoords[ 2 ] = normalize( coords[ 2 ] );\n\tcoords[ 3 ] = normalize( coords[ 3 ] );\n\tvec3 vectorFormFactor = vec3( 0.0 );\n\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 0 ], coords[ 1 ] );\n\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 1 ], coords[ 2 ] );\n\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 2 ], coords[ 3 ] );\n\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 3 ], coords[ 0 ] );\n\tvec3 result = vec3( LTC_ClippedSphereFormFactor( vectorFormFactor ) );\n\treturn result;\n}\nvec3 BRDF_Specular_GGX_Environment( const in GeometricContext geometry, const in vec3 specularColor, const in float roughness ) {\n\tfloat dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );\n\tconst vec4 c0 = vec4( - 1, - 0.0275, - 0.572, 0.022 );\n\tconst vec4 c1 = vec4( 1, 0.0425, 1.04, - 0.04 );\n\tvec4 r = roughness * c0 + c1;\n\tfloat a004 = min( r.x * r.x, exp2( - 9.28 * dotNV ) ) * r.x + r.y;\n\tvec2 AB = vec2( -1.04, 1.04 ) * a004 + r.zw;\n\treturn specularColor * AB.x + AB.y;\n}\nfloat G_BlinnPhong_Implicit( ) {\n\treturn 0.25;\n}\nfloat D_BlinnPhong( const in float shininess, const in float dotNH ) {\n\treturn RECIPROCAL_PI * ( shininess * 0.5 + 1.0 ) * pow( dotNH, shininess );\n}\nvec3 BRDF_Specular_BlinnPhong( const in IncidentLight incidentLight, const in GeometricContext geometry, const in vec3 specularColor, const in float shininess ) {\n\tvec3 halfDir = normalize( incidentLight.direction + geometry.viewDir );\n\tfloat dotNH = saturate( dot( geometry.normal, halfDir ) );\n\tfloat dotLH = saturate( dot( incidentLight.direction, halfDir ) );\n\tvec3 F = F_Schlick( specularColor, dotLH );\n\tfloat G = G_BlinnPhong_Implicit( );\n\tfloat D = D_BlinnPhong( shininess, dotNH );\n\treturn F * ( G * D );\n}\nfloat GGXRoughnessToBlinnExponent( const in float ggxRoughness ) {\n\treturn ( 2.0 / pow2( ggxRoughness + 0.0001 ) - 2.0 );\n}\nfloat BlinnExponentToGGXRoughness( const in float blinnExponent ) {\n\treturn sqrt( 2.0 / ( blinnExponent + 2.0 ) );\n}\n",bumpmap_pars_fragment:"#ifdef USE_BUMPMAP\n\tuniform sampler2D bumpMap;\n\tuniform float bumpScale;\n\tvec2 dHdxy_fwd() {\n\t\tvec2 dSTdx = dFdx( vUv );\n\t\tvec2 dSTdy = dFdy( vUv );\n\t\tfloat Hll = bumpScale * texture2D( bumpMap, vUv ).x;\n\t\tfloat dBx = bumpScale * texture2D( bumpMap, vUv + dSTdx ).x - Hll;\n\t\tfloat dBy = bumpScale * texture2D( bumpMap, vUv + dSTdy ).x - Hll;\n\t\treturn vec2( dBx, dBy );\n\t}\n\tvec3 perturbNormalArb( vec3 surf_pos, vec3 surf_norm, vec2 dHdxy ) {\n\t\tvec3 vSigmaX = vec3( dFdx( surf_pos.x ), dFdx( surf_pos.y ), dFdx( surf_pos.z ) );\n\t\tvec3 vSigmaY = vec3( dFdy( surf_pos.x ), dFdy( surf_pos.y ), dFdy( surf_pos.z ) );\n\t\tvec3 vN = surf_norm;\n\t\tvec3 R1 = cross( vSigmaY, vN );\n\t\tvec3 R2 = cross( vN, vSigmaX );\n\t\tfloat fDet = dot( vSigmaX, R1 );\n\t\tvec3 vGrad = sign( fDet ) * ( dHdxy.x * R1 + dHdxy.y * R2 );\n\t\treturn normalize( abs( fDet ) * surf_norm - vGrad );\n\t}\n#endif\n",clipping_planes_fragment:"#if NUM_CLIPPING_PLANES > 0\n\tfor ( int i = 0; i < UNION_CLIPPING_PLANES; ++ i ) {\n\t\tvec4 plane = clippingPlanes[ i ];\n\t\tif ( dot( vViewPosition, plane.xyz ) > plane.w ) discard;\n\t}\n\t\t\n\t#if UNION_CLIPPING_PLANES < NUM_CLIPPING_PLANES\n\t\tbool clipped = true;\n\t\tfor ( int i = UNION_CLIPPING_PLANES; i < NUM_CLIPPING_PLANES; ++ i ) {\n\t\t\tvec4 plane = clippingPlanes[ i ];\n\t\t\tclipped = ( dot( vViewPosition, plane.xyz ) > plane.w ) && clipped;\n\t\t}\n\t\tif ( clipped ) discard;\n\t\n\t#endif\n#endif\n",clipping_planes_pars_fragment:"#if NUM_CLIPPING_PLANES > 0\n\t#if ! defined( PHYSICAL ) && ! defined( PHONG )\n\t\tvarying vec3 vViewPosition;\n\t#endif\n\tuniform vec4 clippingPlanes[ NUM_CLIPPING_PLANES ];\n#endif\n",clipping_planes_pars_vertex:"#if NUM_CLIPPING_PLANES > 0 && ! defined( PHYSICAL ) && ! defined( PHONG )\n\tvarying vec3 vViewPosition;\n#endif\n",clipping_planes_vertex:"#if NUM_CLIPPING_PLANES > 0 && ! defined( PHYSICAL ) && ! defined( PHONG )\n\tvViewPosition = - mvPosition.xyz;\n#endif\n",color_fragment:"#ifdef USE_COLOR\n\tdiffuseColor.rgb *= vColor;\n#endif",color_pars_fragment:"#ifdef USE_COLOR\n\tvarying vec3 vColor;\n#endif\n",color_pars_vertex:"#ifdef USE_COLOR\n\tvarying vec3 vColor;\n#endif",color_vertex:"#ifdef USE_COLOR\n\tvColor.xyz = color.xyz;\n#endif",common:"#define PI 3.14159265359\n#define PI2 6.28318530718\n#define PI_HALF 1.5707963267949\n#define RECIPROCAL_PI 0.31830988618\n#define RECIPROCAL_PI2 0.15915494\n#define LOG2 1.442695\n#define EPSILON 1e-6\n#define saturate(a) clamp( a, 0.0, 1.0 )\n#define whiteCompliment(a) ( 1.0 - saturate( a ) )\nfloat pow2( const in float x ) { return x*x; }\nfloat pow3( const in float x ) { return x*x*x; }\nfloat pow4( const in float x ) { float x2 = x*x; return x2*x2; }\nfloat average( const in vec3 color ) { return dot( color, vec3( 0.3333 ) ); }\nhighp float rand( const in vec2 uv ) {\n\tconst highp float a = 12.9898, b = 78.233, c = 43758.5453;\n\thighp float dt = dot( uv.xy, vec2( a,b ) ), sn = mod( dt, PI );\n\treturn fract(sin(sn) * c);\n}\nstruct IncidentLight {\n\tvec3 color;\n\tvec3 direction;\n\tbool visible;\n};\nstruct ReflectedLight {\n\tvec3 directDiffuse;\n\tvec3 directSpecular;\n\tvec3 indirectDiffuse;\n\tvec3 indirectSpecular;\n};\nstruct GeometricContext {\n\tvec3 position;\n\tvec3 normal;\n\tvec3 viewDir;\n};\nvec3 transformDirection( in vec3 dir, in mat4 matrix ) {\n\treturn normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );\n}\nvec3 inverseTransformDirection( in vec3 dir, in mat4 matrix ) {\n\treturn normalize( ( vec4( dir, 0.0 ) * matrix ).xyz );\n}\nvec3 projectOnPlane(in vec3 point, in vec3 pointOnPlane, in vec3 planeNormal ) {\n\tfloat distance = dot( planeNormal, point - pointOnPlane );\n\treturn - distance * planeNormal + point;\n}\nfloat sideOfPlane( in vec3 point, in vec3 pointOnPlane, in vec3 planeNormal ) {\n\treturn sign( dot( point - pointOnPlane, planeNormal ) );\n}\nvec3 linePlaneIntersect( in vec3 pointOnLine, in vec3 lineDirection, in vec3 pointOnPlane, in vec3 planeNormal ) {\n\treturn lineDirection * ( dot( planeNormal, pointOnPlane - pointOnLine ) / dot( planeNormal, lineDirection ) ) + pointOnLine;\n}\nmat3 transposeMat3( const in mat3 m ) {\n\tmat3 tmp;\n\ttmp[ 0 ] = vec3( m[ 0 ].x, m[ 1 ].x, m[ 2 ].x );\n\ttmp[ 1 ] = vec3( m[ 0 ].y, m[ 1 ].y, m[ 2 ].y );\n\ttmp[ 2 ] = vec3( m[ 0 ].z, m[ 1 ].z, m[ 2 ].z );\n\treturn tmp;\n}\nfloat linearToRelativeLuminance( const in vec3 color ) {\n\tvec3 weights = vec3( 0.2126, 0.7152, 0.0722 );\n\treturn dot( weights, color.rgb );\n}\n",cube_uv_reflection_fragment:"#ifdef ENVMAP_TYPE_CUBE_UV\n#define cubeUV_textureSize (1024.0)\nint getFaceFromDirection(vec3 direction) {\n\tvec3 absDirection = abs(direction);\n\tint face = -1;\n\tif( absDirection.x > absDirection.z ) {\n\t\tif(absDirection.x > absDirection.y )\n\t\t\tface = direction.x > 0.0 ? 0 : 3;\n\t\telse\n\t\t\tface = direction.y > 0.0 ? 1 : 4;\n\t}\n\telse {\n\t\tif(absDirection.z > absDirection.y )\n\t\t\tface = direction.z > 0.0 ? 2 : 5;\n\t\telse\n\t\t\tface = direction.y > 0.0 ? 1 : 4;\n\t}\n\treturn face;\n}\n#define cubeUV_maxLods1  (log2(cubeUV_textureSize*0.25) - 1.0)\n#define cubeUV_rangeClamp (exp2((6.0 - 1.0) * 2.0))\nvec2 MipLevelInfo( vec3 vec, float roughnessLevel, float roughness ) {\n\tfloat scale = exp2(cubeUV_maxLods1 - roughnessLevel);\n\tfloat dxRoughness = dFdx(roughness);\n\tfloat dyRoughness = dFdy(roughness);\n\tvec3 dx = dFdx( vec * scale * dxRoughness );\n\tvec3 dy = dFdy( vec * scale * dyRoughness );\n\tfloat d = max( dot( dx, dx ), dot( dy, dy ) );\n\td = clamp(d, 1.0, cubeUV_rangeClamp);\n\tfloat mipLevel = 0.5 * log2(d);\n\treturn vec2(floor(mipLevel), fract(mipLevel));\n}\n#define cubeUV_maxLods2 (log2(cubeUV_textureSize*0.25) - 2.0)\n#define cubeUV_rcpTextureSize (1.0 / cubeUV_textureSize)\nvec2 getCubeUV(vec3 direction, float roughnessLevel, float mipLevel) {\n\tmipLevel = roughnessLevel > cubeUV_maxLods2 - 3.0 ? 0.0 : mipLevel;\n\tfloat a = 16.0 * cubeUV_rcpTextureSize;\n\tvec2 exp2_packed = exp2( vec2( roughnessLevel, mipLevel ) );\n\tvec2 rcp_exp2_packed = vec2( 1.0 ) / exp2_packed;\n\tfloat powScale = exp2_packed.x * exp2_packed.y;\n\tfloat scale = rcp_exp2_packed.x * rcp_exp2_packed.y * 0.25;\n\tfloat mipOffset = 0.75*(1.0 - rcp_exp2_packed.y) * rcp_exp2_packed.x;\n\tbool bRes = mipLevel == 0.0;\n\tscale =  bRes && (scale < a) ? a : scale;\n\tvec3 r;\n\tvec2 offset;\n\tint face = getFaceFromDirection(direction);\n\tfloat rcpPowScale = 1.0 / powScale;\n\tif( face == 0) {\n\t\tr = vec3(direction.x, -direction.z, direction.y);\n\t\toffset = vec2(0.0+mipOffset,0.75 * rcpPowScale);\n\t\toffset.y = bRes && (offset.y < 2.0*a) ? a : offset.y;\n\t}\n\telse if( face == 1) {\n\t\tr = vec3(direction.y, direction.x, direction.z);\n\t\toffset = vec2(scale+mipOffset, 0.75 * rcpPowScale);\n\t\toffset.y = bRes && (offset.y < 2.0*a) ? a : offset.y;\n\t}\n\telse if( face == 2) {\n\t\tr = vec3(direction.z, direction.x, direction.y);\n\t\toffset = vec2(2.0*scale+mipOffset, 0.75 * rcpPowScale);\n\t\toffset.y = bRes && (offset.y < 2.0*a) ? a : offset.y;\n\t}\n\telse if( face == 3) {\n\t\tr = vec3(direction.x, direction.z, direction.y);\n\t\toffset = vec2(0.0+mipOffset,0.5 * rcpPowScale);\n\t\toffset.y = bRes && (offset.y < 2.0*a) ? 0.0 : offset.y;\n\t}\n\telse if( face == 4) {\n\t\tr = vec3(direction.y, direction.x, -direction.z);\n\t\toffset = vec2(scale+mipOffset, 0.5 * rcpPowScale);\n\t\toffset.y = bRes && (offset.y < 2.0*a) ? 0.0 : offset.y;\n\t}\n\telse {\n\t\tr = vec3(direction.z, -direction.x, direction.y);\n\t\toffset = vec2(2.0*scale+mipOffset, 0.5 * rcpPowScale);\n\t\toffset.y = bRes && (offset.y < 2.0*a) ? 0.0 : offset.y;\n\t}\n\tr = normalize(r);\n\tfloat texelOffset = 0.5 * cubeUV_rcpTextureSize;\n\tvec2 s = ( r.yz / abs( r.x ) + vec2( 1.0 ) ) * 0.5;\n\tvec2 base = offset + vec2( texelOffset );\n\treturn base + s * ( scale - 2.0 * texelOffset );\n}\n#define cubeUV_maxLods3 (log2(cubeUV_textureSize*0.25) - 3.0)\nvec4 textureCubeUV(vec3 reflectedDirection, float roughness ) {\n\tfloat roughnessVal = roughness* cubeUV_maxLods3;\n\tfloat r1 = floor(roughnessVal);\n\tfloat r2 = r1 + 1.0;\n\tfloat t = fract(roughnessVal);\n\tvec2 mipInfo = MipLevelInfo(reflectedDirection, r1, roughness);\n\tfloat s = mipInfo.y;\n\tfloat level0 = mipInfo.x;\n\tfloat level1 = level0 + 1.0;\n\tlevel1 = level1 > 5.0 ? 5.0 : level1;\n\tlevel0 += min( floor( s + 0.5 ), 5.0 );\n\tvec2 uv_10 = getCubeUV(reflectedDirection, r1, level0);\n\tvec4 color10 = envMapTexelToLinear(texture2D(envMap, uv_10));\n\tvec2 uv_20 = getCubeUV(reflectedDirection, r2, level0);\n\tvec4 color20 = envMapTexelToLinear(texture2D(envMap, uv_20));\n\tvec4 result = mix(color10, color20, t);\n\treturn vec4(result.rgb, 1.0);\n}\n#endif\n",defaultnormal_vertex:"vec3 transformedNormal = normalMatrix * objectNormal;\n#ifdef FLIP_SIDED\n\ttransformedNormal = - transformedNormal;\n#endif\n",displacementmap_pars_vertex:"#ifdef USE_DISPLACEMENTMAP\n\tuniform sampler2D displacementMap;\n\tuniform float displacementScale;\n\tuniform float displacementBias;\n#endif\n",displacementmap_vertex:"#ifdef USE_DISPLACEMENTMAP\n\ttransformed += normalize( objectNormal ) * ( texture2D( displacementMap, uv ).x * displacementScale + displacementBias );\n#endif\n",emissivemap_fragment:"#ifdef USE_EMISSIVEMAP\n\tvec4 emissiveColor = texture2D( emissiveMap, vUv );\n\temissiveColor.rgb = emissiveMapTexelToLinear( emissiveColor ).rgb;\n\ttotalEmissiveRadiance *= emissiveColor.rgb;\n#endif\n",emissivemap_pars_fragment:"#ifdef USE_EMISSIVEMAP\n\tuniform sampler2D emissiveMap;\n#endif\n",encodings_fragment:"  gl_FragColor = linearToOutputTexel( gl_FragColor );\n",encodings_pars_fragment:"\nvec4 LinearToLinear( in vec4 value ) {\n\treturn value;\n}\nvec4 GammaToLinear( in vec4 value, in float gammaFactor ) {\n\treturn vec4( pow( value.xyz, vec3( gammaFactor ) ), value.w );\n}\nvec4 LinearToGamma( in vec4 value, in float gammaFactor ) {\n\treturn vec4( pow( value.xyz, vec3( 1.0 / gammaFactor ) ), value.w );\n}\nvec4 sRGBToLinear( in vec4 value ) {\n\treturn vec4( mix( pow( value.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), value.rgb * 0.0773993808, vec3( lessThanEqual( value.rgb, vec3( 0.04045 ) ) ) ), value.w );\n}\nvec4 LinearTosRGB( in vec4 value ) {\n\treturn vec4( mix( pow( value.rgb, vec3( 0.41666 ) ) * 1.055 - vec3( 0.055 ), value.rgb * 12.92, vec3( lessThanEqual( value.rgb, vec3( 0.0031308 ) ) ) ), value.w );\n}\nvec4 RGBEToLinear( in vec4 value ) {\n\treturn vec4( value.rgb * exp2( value.a * 255.0 - 128.0 ), 1.0 );\n}\nvec4 LinearToRGBE( in vec4 value ) {\n\tfloat maxComponent = max( max( value.r, value.g ), value.b );\n\tfloat fExp = clamp( ceil( log2( maxComponent ) ), -128.0, 127.0 );\n\treturn vec4( value.rgb / exp2( fExp ), ( fExp + 128.0 ) / 255.0 );\n}\nvec4 RGBMToLinear( in vec4 value, in float maxRange ) {\n\treturn vec4( value.xyz * value.w * maxRange, 1.0 );\n}\nvec4 LinearToRGBM( in vec4 value, in float maxRange ) {\n\tfloat maxRGB = max( value.x, max( value.g, value.b ) );\n\tfloat M      = clamp( maxRGB / maxRange, 0.0, 1.0 );\n\tM            = ceil( M * 255.0 ) / 255.0;\n\treturn vec4( value.rgb / ( M * maxRange ), M );\n}\nvec4 RGBDToLinear( in vec4 value, in float maxRange ) {\n\treturn vec4( value.rgb * ( ( maxRange / 255.0 ) / value.a ), 1.0 );\n}\nvec4 LinearToRGBD( in vec4 value, in float maxRange ) {\n\tfloat maxRGB = max( value.x, max( value.g, value.b ) );\n\tfloat D      = max( maxRange / maxRGB, 1.0 );\n\tD            = min( floor( D ) / 255.0, 1.0 );\n\treturn vec4( value.rgb * ( D * ( 255.0 / maxRange ) ), D );\n}\nconst mat3 cLogLuvM = mat3( 0.2209, 0.3390, 0.4184, 0.1138, 0.6780, 0.7319, 0.0102, 0.1130, 0.2969 );\nvec4 LinearToLogLuv( in vec4 value )  {\n\tvec3 Xp_Y_XYZp = value.rgb * cLogLuvM;\n\tXp_Y_XYZp = max(Xp_Y_XYZp, vec3(1e-6, 1e-6, 1e-6));\n\tvec4 vResult;\n\tvResult.xy = Xp_Y_XYZp.xy / Xp_Y_XYZp.z;\n\tfloat Le = 2.0 * log2(Xp_Y_XYZp.y) + 127.0;\n\tvResult.w = fract(Le);\n\tvResult.z = (Le - (floor(vResult.w*255.0))/255.0)/255.0;\n\treturn vResult;\n}\nconst mat3 cLogLuvInverseM = mat3( 6.0014, -2.7008, -1.7996, -1.3320, 3.1029, -5.7721, 0.3008, -1.0882, 5.6268 );\nvec4 LogLuvToLinear( in vec4 value ) {\n\tfloat Le = value.z * 255.0 + value.w;\n\tvec3 Xp_Y_XYZp;\n\tXp_Y_XYZp.y = exp2((Le - 127.0) / 2.0);\n\tXp_Y_XYZp.z = Xp_Y_XYZp.y / value.y;\n\tXp_Y_XYZp.x = value.x * Xp_Y_XYZp.z;\n\tvec3 vRGB = Xp_Y_XYZp.rgb * cLogLuvInverseM;\n\treturn vec4( max(vRGB, 0.0), 1.0 );\n}\n",envmap_fragment:"#ifdef USE_ENVMAP\n\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG )\n\t\tvec3 cameraToVertex = normalize( vWorldPosition - cameraPosition );\n\t\tvec3 worldNormal = inverseTransformDirection( normal, viewMatrix );\n\t\t#ifdef ENVMAP_MODE_REFLECTION\n\t\t\tvec3 reflectVec = reflect( cameraToVertex, worldNormal );\n\t\t#else\n\t\t\tvec3 reflectVec = refract( cameraToVertex, worldNormal, refractionRatio );\n\t\t#endif\n\t#else\n\t\tvec3 reflectVec = vReflect;\n\t#endif\n\t#ifdef ENVMAP_TYPE_CUBE\n\t\tvec4 envColor = textureCube( envMap, vec3( flipEnvMap * reflectVec.x, reflectVec.yz ) );\n\t#elif defined( ENVMAP_TYPE_EQUIREC )\n\t\tvec2 sampleUV;\n\t\treflectVec = normalize( reflectVec );\n\t\tsampleUV.y = asin( clamp( reflectVec.y, - 1.0, 1.0 ) ) * RECIPROCAL_PI + 0.5;\n\t\tsampleUV.x = atan( reflectVec.z, reflectVec.x ) * RECIPROCAL_PI2 + 0.5;\n\t\tvec4 envColor = texture2D( envMap, sampleUV );\n\t#elif defined( ENVMAP_TYPE_SPHERE )\n\t\treflectVec = normalize( reflectVec );\n\t\tvec3 reflectView = normalize( ( viewMatrix * vec4( reflectVec, 0.0 ) ).xyz + vec3( 0.0, 0.0, 1.0 ) );\n\t\tvec4 envColor = texture2D( envMap, reflectView.xy * 0.5 + 0.5 );\n\t#else\n\t\tvec4 envColor = vec4( 0.0 );\n\t#endif\n\tenvColor = envMapTexelToLinear( envColor );\n\t#ifdef ENVMAP_BLENDING_MULTIPLY\n\t\toutgoingLight = mix( outgoingLight, outgoingLight * envColor.xyz, specularStrength * reflectivity );\n\t#elif defined( ENVMAP_BLENDING_MIX )\n\t\toutgoingLight = mix( outgoingLight, envColor.xyz, specularStrength * reflectivity );\n\t#elif defined( ENVMAP_BLENDING_ADD )\n\t\toutgoingLight += envColor.xyz * specularStrength * reflectivity;\n\t#endif\n#endif\n",envmap_pars_fragment:"#if defined( USE_ENVMAP ) || defined( PHYSICAL )\n\tuniform float reflectivity;\n\tuniform float envMapIntensity;\n#endif\n#ifdef USE_ENVMAP\n\t#if ! defined( PHYSICAL ) && ( defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG ) )\n\t\tvarying vec3 vWorldPosition;\n\t#endif\n\t#ifdef ENVMAP_TYPE_CUBE\n\t\tuniform samplerCube envMap;\n\t#else\n\t\tuniform sampler2D envMap;\n\t#endif\n\tuniform float flipEnvMap;\n\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG ) || defined( PHYSICAL )\n\t\tuniform float refractionRatio;\n\t#else\n\t\tvarying vec3 vReflect;\n\t#endif\n#endif\n",envmap_pars_vertex:"#ifdef USE_ENVMAP\n\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG )\n\t\tvarying vec3 vWorldPosition;\n\t#else\n\t\tvarying vec3 vReflect;\n\t\tuniform float refractionRatio;\n\t#endif\n#endif\n",envmap_vertex:"#ifdef USE_ENVMAP\n\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG )\n\t\tvWorldPosition = worldPosition.xyz;\n\t#else\n\t\tvec3 cameraToVertex = normalize( worldPosition.xyz - cameraPosition );\n\t\tvec3 worldNormal = inverseTransformDirection( transformedNormal, viewMatrix );\n\t\t#ifdef ENVMAP_MODE_REFLECTION\n\t\t\tvReflect = reflect( cameraToVertex, worldNormal );\n\t\t#else\n\t\t\tvReflect = refract( cameraToVertex, worldNormal, refractionRatio );\n\t\t#endif\n\t#endif\n#endif\n",fog_vertex:"\n#ifdef USE_FOG\nfogDepth = -mvPosition.z;\n#endif",fog_pars_vertex:"#ifdef USE_FOG\n  varying float fogDepth;\n#endif\n",fog_fragment:"#ifdef USE_FOG\n\t#ifdef FOG_EXP2\n\t\tfloat fogFactor = whiteCompliment( exp2( - fogDensity * fogDensity * fogDepth * fogDepth * LOG2 ) );\n\t#else\n\t\tfloat fogFactor = smoothstep( fogNear, fogFar, fogDepth );\n\t#endif\n\tgl_FragColor.rgb = mix( gl_FragColor.rgb, fogColor, fogFactor );\n#endif\n",fog_pars_fragment:"#ifdef USE_FOG\n\tuniform vec3 fogColor;\n\tvarying float fogDepth;\n\t#ifdef FOG_EXP2\n\t\tuniform float fogDensity;\n\t#else\n\t\tuniform float fogNear;\n\t\tuniform float fogFar;\n\t#endif\n#endif\n",gradientmap_pars_fragment:"#ifdef TOON\n\tuniform sampler2D gradientMap;\n\tvec3 getGradientIrradiance( vec3 normal, vec3 lightDirection ) {\n\t\tfloat dotNL = dot( normal, lightDirection );\n\t\tvec2 coord = vec2( dotNL * 0.5 + 0.5, 0.0 );\n\t\t#ifdef USE_GRADIENTMAP\n\t\t\treturn texture2D( gradientMap, coord ).rgb;\n\t\t#else\n\t\t\treturn ( coord.x < 0.7 ) ? vec3( 0.7 ) : vec3( 1.0 );\n\t\t#endif\n\t}\n#endif\n",lightmap_fragment:"#ifdef USE_LIGHTMAP\n\treflectedLight.indirectDiffuse += PI * texture2D( lightMap, vUv2 ).xyz * lightMapIntensity;\n#endif\n",lightmap_pars_fragment:"#ifdef USE_LIGHTMAP\n\tuniform sampler2D lightMap;\n\tuniform float lightMapIntensity;\n#endif",lights_lambert_vertex:"vec3 diffuse = vec3( 1.0 );\nGeometricContext geometry;\ngeometry.position = mvPosition.xyz;\ngeometry.normal = normalize( transformedNormal );\ngeometry.viewDir = normalize( -mvPosition.xyz );\nGeometricContext backGeometry;\nbackGeometry.position = geometry.position;\nbackGeometry.normal = -geometry.normal;\nbackGeometry.viewDir = geometry.viewDir;\nvLightFront = vec3( 0.0 );\n#ifdef DOUBLE_SIDED\n\tvLightBack = vec3( 0.0 );\n#endif\nIncidentLight directLight;\nfloat dotNL;\nvec3 directLightColor_Diffuse;\n#if NUM_POINT_LIGHTS > 0\n\tfor ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\n\t\tgetPointDirectLightIrradiance( pointLights[ i ], geometry, directLight );\n\t\tdotNL = dot( geometry.normal, directLight.direction );\n\t\tdirectLightColor_Diffuse = PI * directLight.color;\n\t\tvLightFront += saturate( dotNL ) * directLightColor_Diffuse;\n\t\t#ifdef DOUBLE_SIDED\n\t\t\tvLightBack += saturate( -dotNL ) * directLightColor_Diffuse;\n\t\t#endif\n\t}\n#endif\n#if NUM_SPOT_LIGHTS > 0\n\tfor ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\n\t\tgetSpotDirectLightIrradiance( spotLights[ i ], geometry, directLight );\n\t\tdotNL = dot( geometry.normal, directLight.direction );\n\t\tdirectLightColor_Diffuse = PI * directLight.color;\n\t\tvLightFront += saturate( dotNL ) * directLightColor_Diffuse;\n\t\t#ifdef DOUBLE_SIDED\n\t\t\tvLightBack += saturate( -dotNL ) * directLightColor_Diffuse;\n\t\t#endif\n\t}\n#endif\n#if NUM_DIR_LIGHTS > 0\n\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\n\t\tgetDirectionalDirectLightIrradiance( directionalLights[ i ], geometry, directLight );\n\t\tdotNL = dot( geometry.normal, directLight.direction );\n\t\tdirectLightColor_Diffuse = PI * directLight.color;\n\t\tvLightFront += saturate( dotNL ) * directLightColor_Diffuse;\n\t\t#ifdef DOUBLE_SIDED\n\t\t\tvLightBack += saturate( -dotNL ) * directLightColor_Diffuse;\n\t\t#endif\n\t}\n#endif\n#if NUM_HEMI_LIGHTS > 0\n\tfor ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {\n\t\tvLightFront += getHemisphereLightIrradiance( hemisphereLights[ i ], geometry );\n\t\t#ifdef DOUBLE_SIDED\n\t\t\tvLightBack += getHemisphereLightIrradiance( hemisphereLights[ i ], backGeometry );\n\t\t#endif\n\t}\n#endif\n",lights_pars:"uniform vec3 ambientLightColor;\nvec3 getAmbientLightIrradiance( const in vec3 ambientLightColor ) {\n\tvec3 irradiance = ambientLightColor;\n\t#ifndef PHYSICALLY_CORRECT_LIGHTS\n\t\tirradiance *= PI;\n\t#endif\n\treturn irradiance;\n}\n#if NUM_DIR_LIGHTS > 0\n\tstruct DirectionalLight {\n\t\tvec3 direction;\n\t\tvec3 color;\n\t\tint shadow;\n\t\tfloat shadowBias;\n\t\tfloat shadowRadius;\n\t\tvec2 shadowMapSize;\n\t};\n\tuniform DirectionalLight directionalLights[ NUM_DIR_LIGHTS ];\n\tvoid getDirectionalDirectLightIrradiance( const in DirectionalLight directionalLight, const in GeometricContext geometry, out IncidentLight directLight ) {\n\t\tdirectLight.color = directionalLight.color;\n\t\tdirectLight.direction = directionalLight.direction;\n\t\tdirectLight.visible = true;\n\t}\n#endif\n#if NUM_POINT_LIGHTS > 0\n\tstruct PointLight {\n\t\tvec3 position;\n\t\tvec3 color;\n\t\tfloat distance;\n\t\tfloat decay;\n\t\tint shadow;\n\t\tfloat shadowBias;\n\t\tfloat shadowRadius;\n\t\tvec2 shadowMapSize;\n\t\tfloat shadowCameraNear;\n\t\tfloat shadowCameraFar;\n\t};\n\tuniform PointLight pointLights[ NUM_POINT_LIGHTS ];\n\tvoid getPointDirectLightIrradiance( const in PointLight pointLight, const in GeometricContext geometry, out IncidentLight directLight ) {\n\t\tvec3 lVector = pointLight.position - geometry.position;\n\t\tdirectLight.direction = normalize( lVector );\n\t\tfloat lightDistance = length( lVector );\n\t\tdirectLight.color = pointLight.color;\n\t\tdirectLight.color *= punctualLightIntensityToIrradianceFactor( lightDistance, pointLight.distance, pointLight.decay );\n\t\tdirectLight.visible = ( directLight.color != vec3( 0.0 ) );\n\t}\n#endif\n#if NUM_SPOT_LIGHTS > 0\n\tstruct SpotLight {\n\t\tvec3 position;\n\t\tvec3 direction;\n\t\tvec3 color;\n\t\tfloat distance;\n\t\tfloat decay;\n\t\tfloat coneCos;\n\t\tfloat penumbraCos;\n\t\tint shadow;\n\t\tfloat shadowBias;\n\t\tfloat shadowRadius;\n\t\tvec2 shadowMapSize;\n\t};\n\tuniform SpotLight spotLights[ NUM_SPOT_LIGHTS ];\n\tvoid getSpotDirectLightIrradiance( const in SpotLight spotLight, const in GeometricContext geometry, out IncidentLight directLight  ) {\n\t\tvec3 lVector = spotLight.position - geometry.position;\n\t\tdirectLight.direction = normalize( lVector );\n\t\tfloat lightDistance = length( lVector );\n\t\tfloat angleCos = dot( directLight.direction, spotLight.direction );\n\t\tif ( angleCos > spotLight.coneCos ) {\n\t\t\tfloat spotEffect = smoothstep( spotLight.coneCos, spotLight.penumbraCos, angleCos );\n\t\t\tdirectLight.color = spotLight.color;\n\t\t\tdirectLight.color *= spotEffect * punctualLightIntensityToIrradianceFactor( lightDistance, spotLight.distance, spotLight.decay );\n\t\t\tdirectLight.visible = true;\n\t\t} else {\n\t\t\tdirectLight.color = vec3( 0.0 );\n\t\t\tdirectLight.visible = false;\n\t\t}\n\t}\n#endif\n#if NUM_RECT_AREA_LIGHTS > 0\n\tstruct RectAreaLight {\n\t\tvec3 color;\n\t\tvec3 position;\n\t\tvec3 halfWidth;\n\t\tvec3 halfHeight;\n\t};\n\tuniform sampler2D ltcMat;\tuniform sampler2D ltcMag;\n\tuniform RectAreaLight rectAreaLights[ NUM_RECT_AREA_LIGHTS ];\n#endif\n#if NUM_HEMI_LIGHTS > 0\n\tstruct HemisphereLight {\n\t\tvec3 direction;\n\t\tvec3 skyColor;\n\t\tvec3 groundColor;\n\t};\n\tuniform HemisphereLight hemisphereLights[ NUM_HEMI_LIGHTS ];\n\tvec3 getHemisphereLightIrradiance( const in HemisphereLight hemiLight, const in GeometricContext geometry ) {\n\t\tfloat dotNL = dot( geometry.normal, hemiLight.direction );\n\t\tfloat hemiDiffuseWeight = 0.5 * dotNL + 0.5;\n\t\tvec3 irradiance = mix( hemiLight.groundColor, hemiLight.skyColor, hemiDiffuseWeight );\n\t\t#ifndef PHYSICALLY_CORRECT_LIGHTS\n\t\t\tirradiance *= PI;\n\t\t#endif\n\t\treturn irradiance;\n\t}\n#endif\n#if defined( USE_ENVMAP ) && defined( PHYSICAL )\n\tvec3 getLightProbeIndirectIrradiance( const in GeometricContext geometry, const in int maxMIPLevel ) {\n\t\tvec3 worldNormal = inverseTransformDirection( geometry.normal, viewMatrix );\n\t\t#ifdef ENVMAP_TYPE_CUBE\n\t\t\tvec3 queryVec = vec3( flipEnvMap * worldNormal.x, worldNormal.yz );\n\t\t\t#ifdef TEXTURE_LOD_EXT\n\t\t\t\tvec4 envMapColor = textureCubeLodEXT( envMap, queryVec, float( maxMIPLevel ) );\n\t\t\t#else\n\t\t\t\tvec4 envMapColor = textureCube( envMap, queryVec, float( maxMIPLevel ) );\n\t\t\t#endif\n\t\t\tenvMapColor.rgb = envMapTexelToLinear( envMapColor ).rgb;\n\t\t#elif defined( ENVMAP_TYPE_CUBE_UV )\n\t\t\tvec3 queryVec = vec3( flipEnvMap * worldNormal.x, worldNormal.yz );\n\t\t\tvec4 envMapColor = textureCubeUV( queryVec, 1.0 );\n\t\t#else\n\t\t\tvec4 envMapColor = vec4( 0.0 );\n\t\t#endif\n\t\treturn PI * envMapColor.rgb * envMapIntensity;\n\t}\n\tfloat getSpecularMIPLevel( const in float blinnShininessExponent, const in int maxMIPLevel ) {\n\t\tfloat maxMIPLevelScalar = float( maxMIPLevel );\n\t\tfloat desiredMIPLevel = maxMIPLevelScalar + 0.79248 - 0.5 * log2( pow2( blinnShininessExponent ) + 1.0 );\n\t\treturn clamp( desiredMIPLevel, 0.0, maxMIPLevelScalar );\n\t}\n\tvec3 getLightProbeIndirectRadiance( const in GeometricContext geometry, const in float blinnShininessExponent, const in int maxMIPLevel ) {\n\t\t#ifdef ENVMAP_MODE_REFLECTION\n\t\t\tvec3 reflectVec = reflect( -geometry.viewDir, geometry.normal );\n\t\t#else\n\t\t\tvec3 reflectVec = refract( -geometry.viewDir, geometry.normal, refractionRatio );\n\t\t#endif\n\t\treflectVec = inverseTransformDirection( reflectVec, viewMatrix );\n\t\tfloat specularMIPLevel = getSpecularMIPLevel( blinnShininessExponent, maxMIPLevel );\n\t\t#ifdef ENVMAP_TYPE_CUBE\n\t\t\tvec3 queryReflectVec = vec3( flipEnvMap * reflectVec.x, reflectVec.yz );\n\t\t\t#ifdef TEXTURE_LOD_EXT\n\t\t\t\tvec4 envMapColor = textureCubeLodEXT( envMap, queryReflectVec, specularMIPLevel );\n\t\t\t#else\n\t\t\t\tvec4 envMapColor = textureCube( envMap, queryReflectVec, specularMIPLevel );\n\t\t\t#endif\n\t\t\tenvMapColor.rgb = envMapTexelToLinear( envMapColor ).rgb;\n\t\t#elif defined( ENVMAP_TYPE_CUBE_UV )\n\t\t\tvec3 queryReflectVec = vec3( flipEnvMap * reflectVec.x, reflectVec.yz );\n\t\t\tvec4 envMapColor = textureCubeUV(queryReflectVec, BlinnExponentToGGXRoughness(blinnShininessExponent));\n\t\t#elif defined( ENVMAP_TYPE_EQUIREC )\n\t\t\tvec2 sampleUV;\n\t\t\tsampleUV.y = asin( clamp( reflectVec.y, - 1.0, 1.0 ) ) * RECIPROCAL_PI + 0.5;\n\t\t\tsampleUV.x = atan( reflectVec.z, reflectVec.x ) * RECIPROCAL_PI2 + 0.5;\n\t\t\t#ifdef TEXTURE_LOD_EXT\n\t\t\t\tvec4 envMapColor = texture2DLodEXT( envMap, sampleUV, specularMIPLevel );\n\t\t\t#else\n\t\t\t\tvec4 envMapColor = texture2D( envMap, sampleUV, specularMIPLevel );\n\t\t\t#endif\n\t\t\tenvMapColor.rgb = envMapTexelToLinear( envMapColor ).rgb;\n\t\t#elif defined( ENVMAP_TYPE_SPHERE )\n\t\t\tvec3 reflectView = normalize( ( viewMatrix * vec4( reflectVec, 0.0 ) ).xyz + vec3( 0.0,0.0,1.0 ) );\n\t\t\t#ifdef TEXTURE_LOD_EXT\n\t\t\t\tvec4 envMapColor = texture2DLodEXT( envMap, reflectView.xy * 0.5 + 0.5, specularMIPLevel );\n\t\t\t#else\n\t\t\t\tvec4 envMapColor = texture2D( envMap, reflectView.xy * 0.5 + 0.5, specularMIPLevel );\n\t\t\t#endif\n\t\t\tenvMapColor.rgb = envMapTexelToLinear( envMapColor ).rgb;\n\t\t#endif\n\t\treturn envMapColor.rgb * envMapIntensity;\n\t}\n#endif\n",lights_phong_fragment:"BlinnPhongMaterial material;\nmaterial.diffuseColor = diffuseColor.rgb;\nmaterial.specularColor = specular;\nmaterial.specularShininess = shininess;\nmaterial.specularStrength = specularStrength;\n",lights_phong_pars_fragment:"varying vec3 vViewPosition;\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n#endif\nstruct BlinnPhongMaterial {\n\tvec3\tdiffuseColor;\n\tvec3\tspecularColor;\n\tfloat\tspecularShininess;\n\tfloat\tspecularStrength;\n};\nvoid RE_Direct_BlinnPhong( const in IncidentLight directLight, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {\n\t#ifdef TOON\n\t\tvec3 irradiance = getGradientIrradiance( geometry.normal, directLight.direction ) * directLight.color;\n\t#else\n\t\tfloat dotNL = saturate( dot( geometry.normal, directLight.direction ) );\n\t\tvec3 irradiance = dotNL * directLight.color;\n\t#endif\n\t#ifndef PHYSICALLY_CORRECT_LIGHTS\n\t\tirradiance *= PI;\n\t#endif\n\treflectedLight.directDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\n\treflectedLight.directSpecular += irradiance * BRDF_Specular_BlinnPhong( directLight, geometry, material.specularColor, material.specularShininess ) * material.specularStrength;\n}\nvoid RE_IndirectDiffuse_BlinnPhong( const in vec3 irradiance, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {\n\treflectedLight.indirectDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\n}\n#define RE_Direct\t\t\t\tRE_Direct_BlinnPhong\n#define RE_IndirectDiffuse\t\tRE_IndirectDiffuse_BlinnPhong\n#define Material_LightProbeLOD( material )\t(0)\n",lights_physical_fragment:"PhysicalMaterial material;\nmaterial.diffuseColor = diffuseColor.rgb * ( 1.0 - metalnessFactor );\nmaterial.specularRoughness = clamp( roughnessFactor, 0.04, 1.0 );\n#ifdef STANDARD\n\tmaterial.specularColor = mix( vec3( DEFAULT_SPECULAR_COEFFICIENT ), diffuseColor.rgb, metalnessFactor );\n#else\n\tmaterial.specularColor = mix( vec3( MAXIMUM_SPECULAR_COEFFICIENT * pow2( reflectivity ) ), diffuseColor.rgb, metalnessFactor );\n\tmaterial.clearCoat = saturate( clearCoat );\tmaterial.clearCoatRoughness = clamp( clearCoatRoughness, 0.04, 1.0 );\n#endif\n",lights_physical_pars_fragment:"struct PhysicalMaterial {\n\tvec3\tdiffuseColor;\n\tfloat\tspecularRoughness;\n\tvec3\tspecularColor;\n\t#ifndef STANDARD\n\t\tfloat clearCoat;\n\t\tfloat clearCoatRoughness;\n\t#endif\n};\n#define MAXIMUM_SPECULAR_COEFFICIENT 0.16\n#define DEFAULT_SPECULAR_COEFFICIENT 0.04\nfloat clearCoatDHRApprox( const in float roughness, const in float dotNL ) {\n\treturn DEFAULT_SPECULAR_COEFFICIENT + ( 1.0 - DEFAULT_SPECULAR_COEFFICIENT ) * ( pow( 1.0 - dotNL, 5.0 ) * pow( 1.0 - roughness, 2.0 ) );\n}\n#if NUM_RECT_AREA_LIGHTS > 0\n\tvoid RE_Direct_RectArea_Physical( const in RectAreaLight rectAreaLight, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\n\t\tvec3 normal = geometry.normal;\n\t\tvec3 viewDir = geometry.viewDir;\n\t\tvec3 position = geometry.position;\n\t\tvec3 lightPos = rectAreaLight.position;\n\t\tvec3 halfWidth = rectAreaLight.halfWidth;\n\t\tvec3 halfHeight = rectAreaLight.halfHeight;\n\t\tvec3 lightColor = rectAreaLight.color;\n\t\tfloat roughness = material.specularRoughness;\n\t\tvec3 rectCoords[ 4 ];\n\t\trectCoords[ 0 ] = lightPos - halfWidth - halfHeight;\t\trectCoords[ 1 ] = lightPos + halfWidth - halfHeight;\n\t\trectCoords[ 2 ] = lightPos + halfWidth + halfHeight;\n\t\trectCoords[ 3 ] = lightPos - halfWidth + halfHeight;\n\t\tvec2 uv = LTC_Uv( normal, viewDir, roughness );\n\t\tfloat norm = texture2D( ltcMag, uv ).a;\n\t\tvec4 t = texture2D( ltcMat, uv );\n\t\tmat3 mInv = mat3(\n\t\t\tvec3(   1,   0, t.y ),\n\t\t\tvec3(   0, t.z,   0 ),\n\t\t\tvec3( t.w,   0, t.x )\n\t\t);\n\t\treflectedLight.directSpecular += lightColor * material.specularColor * norm * LTC_Evaluate( normal, viewDir, position, mInv, rectCoords );\n\t\treflectedLight.directDiffuse += lightColor * material.diffuseColor * LTC_Evaluate( normal, viewDir, position, mat3( 1 ), rectCoords );\n\t}\n#endif\nvoid RE_Direct_Physical( const in IncidentLight directLight, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\n\tfloat dotNL = saturate( dot( geometry.normal, directLight.direction ) );\n\tvec3 irradiance = dotNL * directLight.color;\n\t#ifndef PHYSICALLY_CORRECT_LIGHTS\n\t\tirradiance *= PI;\n\t#endif\n\t#ifndef STANDARD\n\t\tfloat clearCoatDHR = material.clearCoat * clearCoatDHRApprox( material.clearCoatRoughness, dotNL );\n\t#else\n\t\tfloat clearCoatDHR = 0.0;\n\t#endif\n\treflectedLight.directSpecular += ( 1.0 - clearCoatDHR ) * irradiance * BRDF_Specular_GGX( directLight, geometry, material.specularColor, material.specularRoughness );\n\treflectedLight.directDiffuse += ( 1.0 - clearCoatDHR ) * irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\n\t#ifndef STANDARD\n\t\treflectedLight.directSpecular += irradiance * material.clearCoat * BRDF_Specular_GGX( directLight, geometry, vec3( DEFAULT_SPECULAR_COEFFICIENT ), material.clearCoatRoughness );\n\t#endif\n}\nvoid RE_IndirectDiffuse_Physical( const in vec3 irradiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\n\treflectedLight.indirectDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\n}\nvoid RE_IndirectSpecular_Physical( const in vec3 radiance, const in vec3 clearCoatRadiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\n\t#ifndef STANDARD\n\t\tfloat dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );\n\t\tfloat dotNL = dotNV;\n\t\tfloat clearCoatDHR = material.clearCoat * clearCoatDHRApprox( material.clearCoatRoughness, dotNL );\n\t#else\n\t\tfloat clearCoatDHR = 0.0;\n\t#endif\n\treflectedLight.indirectSpecular += ( 1.0 - clearCoatDHR ) * radiance * BRDF_Specular_GGX_Environment( geometry, material.specularColor, material.specularRoughness );\n\t#ifndef STANDARD\n\t\treflectedLight.indirectSpecular += clearCoatRadiance * material.clearCoat * BRDF_Specular_GGX_Environment( geometry, vec3( DEFAULT_SPECULAR_COEFFICIENT ), material.clearCoatRoughness );\n\t#endif\n}\n#define RE_Direct\t\t\t\tRE_Direct_Physical\n#define RE_Direct_RectArea\t\tRE_Direct_RectArea_Physical\n#define RE_IndirectDiffuse\t\tRE_IndirectDiffuse_Physical\n#define RE_IndirectSpecular\t\tRE_IndirectSpecular_Physical\n#define Material_BlinnShininessExponent( material )   GGXRoughnessToBlinnExponent( material.specularRoughness )\n#define Material_ClearCoat_BlinnShininessExponent( material )   GGXRoughnessToBlinnExponent( material.clearCoatRoughness )\nfloat computeSpecularOcclusion( const in float dotNV, const in float ambientOcclusion, const in float roughness ) {\n\treturn saturate( pow( dotNV + ambientOcclusion, exp2( - 16.0 * roughness - 1.0 ) ) - 1.0 + ambientOcclusion );\n}\n",lights_template:"\nGeometricContext geometry;\ngeometry.position = - vViewPosition;\ngeometry.normal = normal;\ngeometry.viewDir = normalize( vViewPosition );\nIncidentLight directLight;\n#if ( NUM_POINT_LIGHTS > 0 ) && defined( RE_Direct )\n\tPointLight pointLight;\n\tfor ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\n\t\tpointLight = pointLights[ i ];\n\t\tgetPointDirectLightIrradiance( pointLight, geometry, directLight );\n\t\t#ifdef USE_SHADOWMAP\n\t\tdirectLight.color *= all( bvec2( pointLight.shadow, directLight.visible ) ) ? getPointShadow( pointShadowMap[ i ], pointLight.shadowMapSize, pointLight.shadowBias, pointLight.shadowRadius, vPointShadowCoord[ i ], pointLight.shadowCameraNear, pointLight.shadowCameraFar ) : 1.0;\n\t\t#endif\n\t\tRE_Direct( directLight, geometry, material, reflectedLight );\n\t}\n#endif\n#if ( NUM_SPOT_LIGHTS > 0 ) && defined( RE_Direct )\n\tSpotLight spotLight;\n\tfor ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\n\t\tspotLight = spotLights[ i ];\n\t\tgetSpotDirectLightIrradiance( spotLight, geometry, directLight );\n\t\t#ifdef USE_SHADOWMAP\n\t\tdirectLight.color *= all( bvec2( spotLight.shadow, directLight.visible ) ) ? getShadow( spotShadowMap[ i ], spotLight.shadowMapSize, spotLight.shadowBias, spotLight.shadowRadius, vSpotShadowCoord[ i ] ) : 1.0;\n\t\t#endif\n\t\tRE_Direct( directLight, geometry, material, reflectedLight );\n\t}\n#endif\n#if ( NUM_DIR_LIGHTS > 0 ) && defined( RE_Direct )\n\tDirectionalLight directionalLight;\n\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\n\t\tdirectionalLight = directionalLights[ i ];\n\t\tgetDirectionalDirectLightIrradiance( directionalLight, geometry, directLight );\n\t\t#ifdef USE_SHADOWMAP\n\t\tdirectLight.color *= all( bvec2( directionalLight.shadow, directLight.visible ) ) ? getShadow( directionalShadowMap[ i ], directionalLight.shadowMapSize, directionalLight.shadowBias, directionalLight.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;\n\t\t#endif\n\t\tRE_Direct( directLight, geometry, material, reflectedLight );\n\t}\n#endif\n#if ( NUM_RECT_AREA_LIGHTS > 0 ) && defined( RE_Direct_RectArea )\n\tRectAreaLight rectAreaLight;\n\tfor ( int i = 0; i < NUM_RECT_AREA_LIGHTS; i ++ ) {\n\t\trectAreaLight = rectAreaLights[ i ];\n\t\tRE_Direct_RectArea( rectAreaLight, geometry, material, reflectedLight );\n\t}\n#endif\n#if defined( RE_IndirectDiffuse )\n\tvec3 irradiance = getAmbientLightIrradiance( ambientLightColor );\n\t#ifdef USE_LIGHTMAP\n\t\tvec3 lightMapIrradiance = texture2D( lightMap, vUv2 ).xyz * lightMapIntensity;\n\t\t#ifndef PHYSICALLY_CORRECT_LIGHTS\n\t\t\tlightMapIrradiance *= PI;\n\t\t#endif\n\t\tirradiance += lightMapIrradiance;\n\t#endif\n\t#if ( NUM_HEMI_LIGHTS > 0 )\n\t\tfor ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {\n\t\t\tirradiance += getHemisphereLightIrradiance( hemisphereLights[ i ], geometry );\n\t\t}\n\t#endif\n\t#if defined( USE_ENVMAP ) && defined( PHYSICAL ) && defined( ENVMAP_TYPE_CUBE_UV )\n\t\tirradiance += getLightProbeIndirectIrradiance( geometry, 8 );\n\t#endif\n\tRE_IndirectDiffuse( irradiance, geometry, material, reflectedLight );\n#endif\n#if defined( USE_ENVMAP ) && defined( RE_IndirectSpecular )\n\tvec3 radiance = getLightProbeIndirectRadiance( geometry, Material_BlinnShininessExponent( material ), 8 );\n\t#ifndef STANDARD\n\t\tvec3 clearCoatRadiance = getLightProbeIndirectRadiance( geometry, Material_ClearCoat_BlinnShininessExponent( material ), 8 );\n\t#else\n\t\tvec3 clearCoatRadiance = vec3( 0.0 );\n\t#endif\n\tRE_IndirectSpecular( radiance, clearCoatRadiance, geometry, material, reflectedLight );\n#endif\n",logdepthbuf_fragment:"#if defined( USE_LOGDEPTHBUF ) && defined( USE_LOGDEPTHBUF_EXT )\n\tgl_FragDepthEXT = log2( vFragDepth ) * logDepthBufFC * 0.5;\n#endif",logdepthbuf_pars_fragment:"#ifdef USE_LOGDEPTHBUF\n\tuniform float logDepthBufFC;\n\t#ifdef USE_LOGDEPTHBUF_EXT\n\t\tvarying float vFragDepth;\n\t#endif\n#endif\n",logdepthbuf_pars_vertex:"#ifdef USE_LOGDEPTHBUF\n\t#ifdef USE_LOGDEPTHBUF_EXT\n\t\tvarying float vFragDepth;\n\t#endif\n\tuniform float logDepthBufFC;\n#endif",logdepthbuf_vertex:"#ifdef USE_LOGDEPTHBUF\n\t#ifdef USE_LOGDEPTHBUF_EXT\n\t\tvFragDepth = 1.0 + gl_Position.w;\n\t#else\n\t\tgl_Position.z = log2( max( EPSILON, gl_Position.w + 1.0 ) ) * logDepthBufFC - 1.0;\n\t\tgl_Position.z *= gl_Position.w;\n\t#endif\n#endif\n",map_fragment:"#ifdef USE_MAP\n\tvec4 texelColor = texture2D( map, vUv );\n\ttexelColor = mapTexelToLinear( texelColor );\n\tdiffuseColor *= texelColor;\n#endif\n",map_pars_fragment:"#ifdef USE_MAP\n\tuniform sampler2D map;\n#endif\n",map_particle_fragment:"#ifdef USE_MAP\n\tvec2 uv = ( uvTransform * vec3( gl_PointCoord.x, 1.0 - gl_PointCoord.y, 1 ) ).xy;\n\tvec4 mapTexel = texture2D( map, uv );\n\tdiffuseColor *= mapTexelToLinear( mapTexel );\n#endif\n",map_particle_pars_fragment:"#ifdef USE_MAP\n\tuniform mat3 uvTransform;\n\tuniform sampler2D map;\n#endif\n",metalnessmap_fragment:"float metalnessFactor = metalness;\n#ifdef USE_METALNESSMAP\n\tvec4 texelMetalness = texture2D( metalnessMap, vUv );\n\tmetalnessFactor *= texelMetalness.b;\n#endif\n",metalnessmap_pars_fragment:"#ifdef USE_METALNESSMAP\n\tuniform sampler2D metalnessMap;\n#endif",morphnormal_vertex:"#ifdef USE_MORPHNORMALS\n\tobjectNormal += ( morphNormal0 - normal ) * morphTargetInfluences[ 0 ];\n\tobjectNormal += ( morphNormal1 - normal ) * morphTargetInfluences[ 1 ];\n\tobjectNormal += ( morphNormal2 - normal ) * morphTargetInfluences[ 2 ];\n\tobjectNormal += ( morphNormal3 - normal ) * morphTargetInfluences[ 3 ];\n#endif\n",morphtarget_pars_vertex:"#ifdef USE_MORPHTARGETS\n\t#ifndef USE_MORPHNORMALS\n\tuniform float morphTargetInfluences[ 8 ];\n\t#else\n\tuniform float morphTargetInfluences[ 4 ];\n\t#endif\n#endif",morphtarget_vertex:"#ifdef USE_MORPHTARGETS\n\ttransformed += ( morphTarget0 - position ) * morphTargetInfluences[ 0 ];\n\ttransformed += ( morphTarget1 - position ) * morphTargetInfluences[ 1 ];\n\ttransformed += ( morphTarget2 - position ) * morphTargetInfluences[ 2 ];\n\ttransformed += ( morphTarget3 - position ) * morphTargetInfluences[ 3 ];\n\t#ifndef USE_MORPHNORMALS\n\ttransformed += ( morphTarget4 - position ) * morphTargetInfluences[ 4 ];\n\ttransformed += ( morphTarget5 - position ) * morphTargetInfluences[ 5 ];\n\ttransformed += ( morphTarget6 - position ) * morphTargetInfluences[ 6 ];\n\ttransformed += ( morphTarget7 - position ) * morphTargetInfluences[ 7 ];\n\t#endif\n#endif\n",normal_fragment:"#ifdef FLAT_SHADED\n\tvec3 fdx = vec3( dFdx( vViewPosition.x ), dFdx( vViewPosition.y ), dFdx( vViewPosition.z ) );\n\tvec3 fdy = vec3( dFdy( vViewPosition.x ), dFdy( vViewPosition.y ), dFdy( vViewPosition.z ) );\n\tvec3 normal = normalize( cross( fdx, fdy ) );\n#else\n\tvec3 normal = normalize( vNormal );\n\t#ifdef DOUBLE_SIDED\n\t\tnormal = normal * ( float( gl_FrontFacing ) * 2.0 - 1.0 );\n\t#endif\n#endif\n#ifdef USE_NORMALMAP\n\tnormal = perturbNormal2Arb( -vViewPosition, normal );\n#elif defined( USE_BUMPMAP )\n\tnormal = perturbNormalArb( -vViewPosition, normal, dHdxy_fwd() );\n#endif\n",normalmap_pars_fragment:"#ifdef USE_NORMALMAP\n\tuniform sampler2D normalMap;\n\tuniform vec2 normalScale;\n\tvec3 perturbNormal2Arb( vec3 eye_pos, vec3 surf_norm ) {\n\t\tvec3 q0 = vec3( dFdx( eye_pos.x ), dFdx( eye_pos.y ), dFdx( eye_pos.z ) );\n\t\tvec3 q1 = vec3( dFdy( eye_pos.x ), dFdy( eye_pos.y ), dFdy( eye_pos.z ) );\n\t\tvec2 st0 = dFdx( vUv.st );\n\t\tvec2 st1 = dFdy( vUv.st );\n\t\tvec3 S = normalize( q0 * st1.t - q1 * st0.t );\n\t\tvec3 T = normalize( -q0 * st1.s + q1 * st0.s );\n\t\tvec3 N = normalize( surf_norm );\n\t\tvec3 mapN = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;\n\t\tmapN.xy = normalScale * mapN.xy;\n\t\tmat3 tsn = mat3( S, T, N );\n\t\treturn normalize( tsn * mapN );\n\t}\n#endif\n",packing:"vec3 packNormalToRGB( const in vec3 normal ) {\n\treturn normalize( normal ) * 0.5 + 0.5;\n}\nvec3 unpackRGBToNormal( const in vec3 rgb ) {\n\treturn 2.0 * rgb.xyz - 1.0;\n}\nconst float PackUpscale = 256. / 255.;const float UnpackDownscale = 255. / 256.;\nconst vec3 PackFactors = vec3( 256. * 256. * 256., 256. * 256.,  256. );\nconst vec4 UnpackFactors = UnpackDownscale / vec4( PackFactors, 1. );\nconst float ShiftRight8 = 1. / 256.;\nvec4 packDepthToRGBA( const in float v ) {\n\tvec4 r = vec4( fract( v * PackFactors ), v );\n\tr.yzw -= r.xyz * ShiftRight8;\treturn r * PackUpscale;\n}\nfloat unpackRGBAToDepth( const in vec4 v ) {\n\treturn dot( v, UnpackFactors );\n}\nfloat viewZToOrthographicDepth( const in float viewZ, const in float near, const in float far ) {\n\treturn ( viewZ + near ) / ( near - far );\n}\nfloat orthographicDepthToViewZ( const in float linearClipZ, const in float near, const in float far ) {\n\treturn linearClipZ * ( near - far ) - near;\n}\nfloat viewZToPerspectiveDepth( const in float viewZ, const in float near, const in float far ) {\n\treturn (( near + viewZ ) * far ) / (( far - near ) * viewZ );\n}\nfloat perspectiveDepthToViewZ( const in float invClipZ, const in float near, const in float far ) {\n\treturn ( near * far ) / ( ( far - near ) * invClipZ - far );\n}\n",premultiplied_alpha_fragment:"#ifdef PREMULTIPLIED_ALPHA\n\tgl_FragColor.rgb *= gl_FragColor.a;\n#endif\n",project_vertex:"vec4 mvPosition = modelViewMatrix * vec4( transformed, 1.0 );\ngl_Position = projectionMatrix * mvPosition;\n",dithering_fragment:"#if defined( DITHERING )\n  gl_FragColor.rgb = dithering( gl_FragColor.rgb );\n#endif\n",dithering_pars_fragment:"#if defined( DITHERING )\n\tvec3 dithering( vec3 color ) {\n\t\tfloat grid_position = rand( gl_FragCoord.xy );\n\t\tvec3 dither_shift_RGB = vec3( 0.25 / 255.0, -0.25 / 255.0, 0.25 / 255.0 );\n\t\tdither_shift_RGB = mix( 2.0 * dither_shift_RGB, -2.0 * dither_shift_RGB, grid_position );\n\t\treturn color + dither_shift_RGB;\n\t}\n#endif\n",roughnessmap_fragment:"float roughnessFactor = roughness;\n#ifdef USE_ROUGHNESSMAP\n\tvec4 texelRoughness = texture2D( roughnessMap, vUv );\n\troughnessFactor *= texelRoughness.g;\n#endif\n",roughnessmap_pars_fragment:"#ifdef USE_ROUGHNESSMAP\n\tuniform sampler2D roughnessMap;\n#endif",shadowmap_pars_fragment:"#ifdef USE_SHADOWMAP\n\t#if NUM_DIR_LIGHTS > 0\n\t\tuniform sampler2D directionalShadowMap[ NUM_DIR_LIGHTS ];\n\t\tvarying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHTS ];\n\t#endif\n\t#if NUM_SPOT_LIGHTS > 0\n\t\tuniform sampler2D spotShadowMap[ NUM_SPOT_LIGHTS ];\n\t\tvarying vec4 vSpotShadowCoord[ NUM_SPOT_LIGHTS ];\n\t#endif\n\t#if NUM_POINT_LIGHTS > 0\n\t\tuniform sampler2D pointShadowMap[ NUM_POINT_LIGHTS ];\n\t\tvarying vec4 vPointShadowCoord[ NUM_POINT_LIGHTS ];\n\t#endif\n\tfloat texture2DCompare( sampler2D depths, vec2 uv, float compare ) {\n\t\treturn step( compare, unpackRGBAToDepth( texture2D( depths, uv ) ) );\n\t}\n\tfloat texture2DShadowLerp( sampler2D depths, vec2 size, vec2 uv, float compare ) {\n\t\tconst vec2 offset = vec2( 0.0, 1.0 );\n\t\tvec2 texelSize = vec2( 1.0 ) / size;\n\t\tvec2 centroidUV = floor( uv * size + 0.5 ) / size;\n\t\tfloat lb = texture2DCompare( depths, centroidUV + texelSize * offset.xx, compare );\n\t\tfloat lt = texture2DCompare( depths, centroidUV + texelSize * offset.xy, compare );\n\t\tfloat rb = texture2DCompare( depths, centroidUV + texelSize * offset.yx, compare );\n\t\tfloat rt = texture2DCompare( depths, centroidUV + texelSize * offset.yy, compare );\n\t\tvec2 f = fract( uv * size + 0.5 );\n\t\tfloat a = mix( lb, lt, f.y );\n\t\tfloat b = mix( rb, rt, f.y );\n\t\tfloat c = mix( a, b, f.x );\n\t\treturn c;\n\t}\n\tfloat getShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord ) {\n\t\tfloat shadow = 1.0;\n\t\tshadowCoord.xyz /= shadowCoord.w;\n\t\tshadowCoord.z += shadowBias;\n\t\tbvec4 inFrustumVec = bvec4 ( shadowCoord.x >= 0.0, shadowCoord.x <= 1.0, shadowCoord.y >= 0.0, shadowCoord.y <= 1.0 );\n\t\tbool inFrustum = all( inFrustumVec );\n\t\tbvec2 frustumTestVec = bvec2( inFrustum, shadowCoord.z <= 1.0 );\n\t\tbool frustumTest = all( frustumTestVec );\n\t\tif ( frustumTest ) {\n\t\t#if defined( SHADOWMAP_TYPE_PCF )\n\t\t\tvec2 texelSize = vec2( 1.0 ) / shadowMapSize;\n\t\t\tfloat dx0 = - texelSize.x * shadowRadius;\n\t\t\tfloat dy0 = - texelSize.y * shadowRadius;\n\t\t\tfloat dx1 = + texelSize.x * shadowRadius;\n\t\t\tfloat dy1 = + texelSize.y * shadowRadius;\n\t\t\tshadow = (\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy1 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy1 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy1 ), shadowCoord.z )\n\t\t\t) * ( 1.0 / 9.0 );\n\t\t#elif defined( SHADOWMAP_TYPE_PCF_SOFT )\n\t\t\tvec2 texelSize = vec2( 1.0 ) / shadowMapSize;\n\t\t\tfloat dx0 = - texelSize.x * shadowRadius;\n\t\t\tfloat dy0 = - texelSize.y * shadowRadius;\n\t\t\tfloat dx1 = + texelSize.x * shadowRadius;\n\t\t\tfloat dy1 = + texelSize.y * shadowRadius;\n\t\t\tshadow = (\n\t\t\t\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx0, dy0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( 0.0, dy0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx1, dy0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx0, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy, shadowCoord.z ) +\n\t\t\t\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx1, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx0, dy1 ), shadowCoord.z ) +\n\t\t\t\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( 0.0, dy1 ), shadowCoord.z ) +\n\t\t\t\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx1, dy1 ), shadowCoord.z )\n\t\t\t) * ( 1.0 / 9.0 );\n\t\t#else\n\t\t\tshadow = texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z );\n\t\t#endif\n\t\t}\n\t\treturn shadow;\n\t}\n\tvec2 cubeToUV( vec3 v, float texelSizeY ) {\n\t\tvec3 absV = abs( v );\n\t\tfloat scaleToCube = 1.0 / max( absV.x, max( absV.y, absV.z ) );\n\t\tabsV *= scaleToCube;\n\t\tv *= scaleToCube * ( 1.0 - 2.0 * texelSizeY );\n\t\tvec2 planar = v.xy;\n\t\tfloat almostATexel = 1.5 * texelSizeY;\n\t\tfloat almostOne = 1.0 - almostATexel;\n\t\tif ( absV.z >= almostOne ) {\n\t\t\tif ( v.z > 0.0 )\n\t\t\t\tplanar.x = 4.0 - v.x;\n\t\t} else if ( absV.x >= almostOne ) {\n\t\t\tfloat signX = sign( v.x );\n\t\t\tplanar.x = v.z * signX + 2.0 * signX;\n\t\t} else if ( absV.y >= almostOne ) {\n\t\t\tfloat signY = sign( v.y );\n\t\t\tplanar.x = v.x + 2.0 * signY + 2.0;\n\t\t\tplanar.y = v.z * signY - 2.0;\n\t\t}\n\t\treturn vec2( 0.125, 0.25 ) * planar + vec2( 0.375, 0.75 );\n\t}\n\tfloat getPointShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord, float shadowCameraNear, float shadowCameraFar ) {\n\t\tvec2 texelSize = vec2( 1.0 ) / ( shadowMapSize * vec2( 4.0, 2.0 ) );\n\t\tvec3 lightToPosition = shadowCoord.xyz;\n\t\tfloat dp = ( length( lightToPosition ) - shadowCameraNear ) / ( shadowCameraFar - shadowCameraNear );\t\tdp += shadowBias;\n\t\tvec3 bd3D = normalize( lightToPosition );\n\t\t#if defined( SHADOWMAP_TYPE_PCF ) || defined( SHADOWMAP_TYPE_PCF_SOFT )\n\t\t\tvec2 offset = vec2( - 1, 1 ) * shadowRadius * texelSize.y;\n\t\t\treturn (\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyy, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyy, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyx, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyx, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxy, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxy, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxx, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxx, texelSize.y ), dp )\n\t\t\t) * ( 1.0 / 9.0 );\n\t\t#else\n\t\t\treturn texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp );\n\t\t#endif\n\t}\n#endif\n",shadowmap_pars_vertex:"#ifdef USE_SHADOWMAP\n\t#if NUM_DIR_LIGHTS > 0\n\t\tuniform mat4 directionalShadowMatrix[ NUM_DIR_LIGHTS ];\n\t\tvarying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHTS ];\n\t#endif\n\t#if NUM_SPOT_LIGHTS > 0\n\t\tuniform mat4 spotShadowMatrix[ NUM_SPOT_LIGHTS ];\n\t\tvarying vec4 vSpotShadowCoord[ NUM_SPOT_LIGHTS ];\n\t#endif\n\t#if NUM_POINT_LIGHTS > 0\n\t\tuniform mat4 pointShadowMatrix[ NUM_POINT_LIGHTS ];\n\t\tvarying vec4 vPointShadowCoord[ NUM_POINT_LIGHTS ];\n\t#endif\n#endif\n",shadowmap_vertex:"#ifdef USE_SHADOWMAP\n\t#if NUM_DIR_LIGHTS > 0\n\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\n\t\tvDirectionalShadowCoord[ i ] = directionalShadowMatrix[ i ] * worldPosition;\n\t}\n\t#endif\n\t#if NUM_SPOT_LIGHTS > 0\n\tfor ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\n\t\tvSpotShadowCoord[ i ] = spotShadowMatrix[ i ] * worldPosition;\n\t}\n\t#endif\n\t#if NUM_POINT_LIGHTS > 0\n\tfor ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\n\t\tvPointShadowCoord[ i ] = pointShadowMatrix[ i ] * worldPosition;\n\t}\n\t#endif\n#endif\n",shadowmask_pars_fragment:"float getShadowMask() {\n\tfloat shadow = 1.0;\n\t#ifdef USE_SHADOWMAP\n\t#if NUM_DIR_LIGHTS > 0\n\tDirectionalLight directionalLight;\n\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\n\t\tdirectionalLight = directionalLights[ i ];\n\t\tshadow *= bool( directionalLight.shadow ) ? getShadow( directionalShadowMap[ i ], directionalLight.shadowMapSize, directionalLight.shadowBias, directionalLight.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;\n\t}\n\t#endif\n\t#if NUM_SPOT_LIGHTS > 0\n\tSpotLight spotLight;\n\tfor ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\n\t\tspotLight = spotLights[ i ];\n\t\tshadow *= bool( spotLight.shadow ) ? getShadow( spotShadowMap[ i ], spotLight.shadowMapSize, spotLight.shadowBias, spotLight.shadowRadius, vSpotShadowCoord[ i ] ) : 1.0;\n\t}\n\t#endif\n\t#if NUM_POINT_LIGHTS > 0\n\tPointLight pointLight;\n\tfor ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\n\t\tpointLight = pointLights[ i ];\n\t\tshadow *= bool( pointLight.shadow ) ? getPointShadow( pointShadowMap[ i ], pointLight.shadowMapSize, pointLight.shadowBias, pointLight.shadowRadius, vPointShadowCoord[ i ], pointLight.shadowCameraNear, pointLight.shadowCameraFar ) : 1.0;\n\t}\n\t#endif\n\t#endif\n\treturn shadow;\n}\n",skinbase_vertex:"#ifdef USE_SKINNING\n\tmat4 boneMatX = getBoneMatrix( skinIndex.x );\n\tmat4 boneMatY = getBoneMatrix( skinIndex.y );\n\tmat4 boneMatZ = getBoneMatrix( skinIndex.z );\n\tmat4 boneMatW = getBoneMatrix( skinIndex.w );\n#endif",skinning_pars_vertex:"#ifdef USE_SKINNING\n\tuniform mat4 bindMatrix;\n\tuniform mat4 bindMatrixInverse;\n\t#ifdef BONE_TEXTURE\n\t\tuniform sampler2D boneTexture;\n\t\tuniform int boneTextureSize;\n\t\tmat4 getBoneMatrix( const in float i ) {\n\t\t\tfloat j = i * 4.0;\n\t\t\tfloat x = mod( j, float( boneTextureSize ) );\n\t\t\tfloat y = floor( j / float( boneTextureSize ) );\n\t\t\tfloat dx = 1.0 / float( boneTextureSize );\n\t\t\tfloat dy = 1.0 / float( boneTextureSize );\n\t\t\ty = dy * ( y + 0.5 );\n\t\t\tvec4 v1 = texture2D( boneTexture, vec2( dx * ( x + 0.5 ), y ) );\n\t\t\tvec4 v2 = texture2D( boneTexture, vec2( dx * ( x + 1.5 ), y ) );\n\t\t\tvec4 v3 = texture2D( boneTexture, vec2( dx * ( x + 2.5 ), y ) );\n\t\t\tvec4 v4 = texture2D( boneTexture, vec2( dx * ( x + 3.5 ), y ) );\n\t\t\tmat4 bone = mat4( v1, v2, v3, v4 );\n\t\t\treturn bone;\n\t\t}\n\t#else\n\t\tuniform mat4 boneMatrices[ MAX_BONES ];\n\t\tmat4 getBoneMatrix( const in float i ) {\n\t\t\tmat4 bone = boneMatrices[ int(i) ];\n\t\t\treturn bone;\n\t\t}\n\t#endif\n#endif\n",skinning_vertex:"#ifdef USE_SKINNING\n\tvec4 skinVertex = bindMatrix * vec4( transformed, 1.0 );\n\tvec4 skinned = vec4( 0.0 );\n\tskinned += boneMatX * skinVertex * skinWeight.x;\n\tskinned += boneMatY * skinVertex * skinWeight.y;\n\tskinned += boneMatZ * skinVertex * skinWeight.z;\n\tskinned += boneMatW * skinVertex * skinWeight.w;\n\ttransformed = ( bindMatrixInverse * skinned ).xyz;\n#endif\n",skinnormal_vertex:"#ifdef USE_SKINNING\n\tmat4 skinMatrix = mat4( 0.0 );\n\tskinMatrix += skinWeight.x * boneMatX;\n\tskinMatrix += skinWeight.y * boneMatY;\n\tskinMatrix += skinWeight.z * boneMatZ;\n\tskinMatrix += skinWeight.w * boneMatW;\n\tskinMatrix  = bindMatrixInverse * skinMatrix * bindMatrix;\n\tobjectNormal = vec4( skinMatrix * vec4( objectNormal, 0.0 ) ).xyz;\n#endif\n",specularmap_fragment:"float specularStrength;\n#ifdef USE_SPECULARMAP\n\tvec4 texelSpecular = texture2D( specularMap, vUv );\n\tspecularStrength = texelSpecular.r;\n#else\n\tspecularStrength = 1.0;\n#endif",specularmap_pars_fragment:"#ifdef USE_SPECULARMAP\n\tuniform sampler2D specularMap;\n#endif",tonemapping_fragment:"#if defined( TONE_MAPPING )\n  gl_FragColor.rgb = toneMapping( gl_FragColor.rgb );\n#endif\n",tonemapping_pars_fragment:"#ifndef saturate\n\t#define saturate(a) clamp( a, 0.0, 1.0 )\n#endif\nuniform float toneMappingExposure;\nuniform float toneMappingWhitePoint;\nvec3 LinearToneMapping( vec3 color ) {\n\treturn toneMappingExposure * color;\n}\nvec3 ReinhardToneMapping( vec3 color ) {\n\tcolor *= toneMappingExposure;\n\treturn saturate( color / ( vec3( 1.0 ) + color ) );\n}\n#define Uncharted2Helper( x ) max( ( ( x * ( 0.15 * x + 0.10 * 0.50 ) + 0.20 * 0.02 ) / ( x * ( 0.15 * x + 0.50 ) + 0.20 * 0.30 ) ) - 0.02 / 0.30, vec3( 0.0 ) )\nvec3 Uncharted2ToneMapping( vec3 color ) {\n\tcolor *= toneMappingExposure;\n\treturn saturate( Uncharted2Helper( color ) / Uncharted2Helper( vec3( toneMappingWhitePoint ) ) );\n}\nvec3 OptimizedCineonToneMapping( vec3 color ) {\n\tcolor *= toneMappingExposure;\n\tcolor = max( vec3( 0.0 ), color - 0.004 );\n\treturn pow( ( color * ( 6.2 * color + 0.5 ) ) / ( color * ( 6.2 * color + 1.7 ) + 0.06 ), vec3( 2.2 ) );\n}\n",uv_pars_fragment:"#if defined( USE_MAP ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( USE_SPECULARMAP ) || defined( USE_ALPHAMAP ) || defined( USE_EMISSIVEMAP ) || defined( USE_ROUGHNESSMAP ) || defined( USE_METALNESSMAP )\n\tvarying vec2 vUv;\n#endif",uv_pars_vertex:"#if defined( USE_MAP ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( USE_SPECULARMAP ) || defined( USE_ALPHAMAP ) || defined( USE_EMISSIVEMAP ) || defined( USE_ROUGHNESSMAP ) || defined( USE_METALNESSMAP )\n\tvarying vec2 vUv;\n\tuniform mat3 uvTransform;\n#endif\n",uv_vertex:"#if defined( USE_MAP ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( USE_SPECULARMAP ) || defined( USE_ALPHAMAP ) || defined( USE_EMISSIVEMAP ) || defined( USE_ROUGHNESSMAP ) || defined( USE_METALNESSMAP )\n\tvUv = ( uvTransform * vec3( uv, 1 ) ).xy;\n#endif",uv2_pars_fragment:"#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\n\tvarying vec2 vUv2;\n#endif",uv2_pars_vertex:"#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\n\tattribute vec2 uv2;\n\tvarying vec2 vUv2;\n#endif",uv2_vertex:"#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\n\tvUv2 = uv2;\n#endif",worldpos_vertex:"#if defined( USE_ENVMAP ) || defined( DISTANCE ) || defined ( USE_SHADOWMAP )\n\tvec4 worldPosition = modelMatrix * vec4( transformed, 1.0 );\n#endif\n",cube_frag:"uniform samplerCube tCube;\nuniform float tFlip;\nuniform float opacity;\nvarying vec3 vWorldPosition;\nvoid main() {\n\tgl_FragColor = textureCube( tCube, vec3( tFlip * vWorldPosition.x, vWorldPosition.yz ) );\n\tgl_FragColor.a *= opacity;\n}\n",cube_vert:"varying vec3 vWorldPosition;\n#include <common>\nvoid main() {\n\tvWorldPosition = transformDirection( position, modelMatrix );\n\t#include <begin_vertex>\n\t#include <project_vertex>\n\tgl_Position.z = gl_Position.w;\n}\n",depth_frag:"#if DEPTH_PACKING == 3200\n\tuniform float opacity;\n#endif\n#include <common>\n#include <packing>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( 1.0 );\n\t#if DEPTH_PACKING == 3200\n\t\tdiffuseColor.a = opacity;\n\t#endif\n\t#include <map_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <logdepthbuf_fragment>\n\t#if DEPTH_PACKING == 3200\n\t\tgl_FragColor = vec4( vec3( gl_FragCoord.z ), opacity );\n\t#elif DEPTH_PACKING == 3201\n\t\tgl_FragColor = packDepthToRGBA( gl_FragCoord.z );\n\t#endif\n}\n",depth_vert:"#include <common>\n#include <uv_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <skinbase_vertex>\n\t#ifdef USE_DISPLACEMENTMAP\n\t\t#include <beginnormal_vertex>\n\t\t#include <morphnormal_vertex>\n\t\t#include <skinnormal_vertex>\n\t#endif\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n}\n",distanceRGBA_frag:"#define DISTANCE\nuniform vec3 referencePosition;\nuniform float nearDistance;\nuniform float farDistance;\nvarying vec3 vWorldPosition;\n#include <common>\n#include <packing>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main () {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( 1.0 );\n\t#include <map_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\tfloat dist = length( vWorldPosition - referencePosition );\n\tdist = ( dist - nearDistance ) / ( farDistance - nearDistance );\n\tdist = saturate( dist );\n\tgl_FragColor = packDepthToRGBA( dist );\n}\n",distanceRGBA_vert:"#define DISTANCE\nvarying vec3 vWorldPosition;\n#include <common>\n#include <uv_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <skinbase_vertex>\n\t#ifdef USE_DISPLACEMENTMAP\n\t\t#include <beginnormal_vertex>\n\t\t#include <morphnormal_vertex>\n\t\t#include <skinnormal_vertex>\n\t#endif\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <worldpos_vertex>\n\t#include <clipping_planes_vertex>\n\tvWorldPosition = worldPosition.xyz;\n}\n",equirect_frag:"uniform sampler2D tEquirect;\nvarying vec3 vWorldPosition;\n#include <common>\nvoid main() {\n\tvec3 direction = normalize( vWorldPosition );\n\tvec2 sampleUV;\n\tsampleUV.y = asin( clamp( direction.y, - 1.0, 1.0 ) ) * RECIPROCAL_PI + 0.5;\n\tsampleUV.x = atan( direction.z, direction.x ) * RECIPROCAL_PI2 + 0.5;\n\tgl_FragColor = texture2D( tEquirect, sampleUV );\n}\n",equirect_vert:"varying vec3 vWorldPosition;\n#include <common>\nvoid main() {\n\tvWorldPosition = transformDirection( position, modelMatrix );\n\t#include <begin_vertex>\n\t#include <project_vertex>\n}\n",linedashed_frag:"uniform vec3 diffuse;\nuniform float opacity;\nuniform float dashSize;\nuniform float totalSize;\nvarying float vLineDistance;\n#include <common>\n#include <color_pars_fragment>\n#include <fog_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tif ( mod( vLineDistance, totalSize ) > dashSize ) {\n\t\tdiscard;\n\t}\n\tvec3 outgoingLight = vec3( 0.0 );\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\t#include <logdepthbuf_fragment>\n\t#include <color_fragment>\n\toutgoingLight = diffuseColor.rgb;\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\t#include <premultiplied_alpha_fragment>\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n}\n",linedashed_vert:"uniform float scale;\nattribute float lineDistance;\nvarying float vLineDistance;\n#include <common>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <color_vertex>\n\tvLineDistance = scale * lineDistance;\n\tvec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );\n\tgl_Position = projectionMatrix * mvPosition;\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <fog_vertex>\n}\n",meshbasic_frag:"uniform vec3 diffuse;\nuniform float opacity;\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n#endif\n#include <common>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <envmap_pars_fragment>\n#include <fog_pars_fragment>\n#include <specularmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <specularmap_fragment>\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\t#ifdef USE_LIGHTMAP\n\t\treflectedLight.indirectDiffuse += texture2D( lightMap, vUv2 ).xyz * lightMapIntensity;\n\t#else\n\t\treflectedLight.indirectDiffuse += vec3( 1.0 );\n\t#endif\n\t#include <aomap_fragment>\n\treflectedLight.indirectDiffuse *= diffuseColor.rgb;\n\tvec3 outgoingLight = reflectedLight.indirectDiffuse;\n\t#include <envmap_fragment>\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\t#include <premultiplied_alpha_fragment>\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n}\n",meshbasic_vert:"#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <envmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <uv2_vertex>\n\t#include <color_vertex>\n\t#include <skinbase_vertex>\n\t#ifdef USE_ENVMAP\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\t#endif\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <worldpos_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <envmap_vertex>\n\t#include <fog_vertex>\n}\n",meshlambert_frag:"uniform vec3 diffuse;\nuniform vec3 emissive;\nuniform float opacity;\nvarying vec3 vLightFront;\n#ifdef DOUBLE_SIDED\n\tvarying vec3 vLightBack;\n#endif\n#include <common>\n#include <packing>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <emissivemap_pars_fragment>\n#include <envmap_pars_fragment>\n#include <bsdfs>\n#include <lights_pars>\n#include <fog_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <shadowmask_pars_fragment>\n#include <specularmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\tvec3 totalEmissiveRadiance = emissive;\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <specularmap_fragment>\n\t#include <emissivemap_fragment>\n\treflectedLight.indirectDiffuse = getAmbientLightIrradiance( ambientLightColor );\n\t#include <lightmap_fragment>\n\treflectedLight.indirectDiffuse *= BRDF_Diffuse_Lambert( diffuseColor.rgb );\n\t#ifdef DOUBLE_SIDED\n\t\treflectedLight.directDiffuse = ( gl_FrontFacing ) ? vLightFront : vLightBack;\n\t#else\n\t\treflectedLight.directDiffuse = vLightFront;\n\t#endif\n\treflectedLight.directDiffuse *= BRDF_Diffuse_Lambert( diffuseColor.rgb ) * getShadowMask();\n\t#include <aomap_fragment>\n\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;\n\t#include <envmap_fragment>\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n}\n",meshlambert_vert:"#define LAMBERT\nvarying vec3 vLightFront;\n#ifdef DOUBLE_SIDED\n\tvarying vec3 vLightBack;\n#endif\n#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <envmap_pars_vertex>\n#include <bsdfs>\n#include <lights_pars>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <uv2_vertex>\n\t#include <color_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <worldpos_vertex>\n\t#include <envmap_vertex>\n\t#include <lights_lambert_vertex>\n\t#include <shadowmap_vertex>\n\t#include <fog_vertex>\n}\n",meshphong_frag:"#define PHONG\nuniform vec3 diffuse;\nuniform vec3 emissive;\nuniform vec3 specular;\nuniform float shininess;\nuniform float opacity;\n#include <common>\n#include <packing>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <emissivemap_pars_fragment>\n#include <envmap_pars_fragment>\n#include <gradientmap_pars_fragment>\n#include <fog_pars_fragment>\n#include <bsdfs>\n#include <lights_pars>\n#include <lights_phong_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <specularmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\tvec3 totalEmissiveRadiance = emissive;\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <specularmap_fragment>\n\t#include <normal_fragment>\n\t#include <emissivemap_fragment>\n\t#include <lights_phong_fragment>\n\t#include <lights_template>\n\t#include <aomap_fragment>\n\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;\n\t#include <envmap_fragment>\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n}\n",meshphong_vert:"#define PHONG\nvarying vec3 vViewPosition;\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n#endif\n#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <envmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <uv2_vertex>\n\t#include <color_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n#ifndef FLAT_SHADED\n\tvNormal = normalize( transformedNormal );\n#endif\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\tvViewPosition = - mvPosition.xyz;\n\t#include <worldpos_vertex>\n\t#include <envmap_vertex>\n\t#include <shadowmap_vertex>\n\t#include <fog_vertex>\n}\n",meshphysical_frag:"#define PHYSICAL\nuniform vec3 diffuse;\nuniform vec3 emissive;\nuniform float roughness;\nuniform float metalness;\nuniform float opacity;\n#ifndef STANDARD\n\tuniform float clearCoat;\n\tuniform float clearCoatRoughness;\n#endif\nvarying vec3 vViewPosition;\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n#endif\n#include <common>\n#include <packing>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <emissivemap_pars_fragment>\n#include <envmap_pars_fragment>\n#include <fog_pars_fragment>\n#include <bsdfs>\n#include <cube_uv_reflection_fragment>\n#include <lights_pars>\n#include <lights_physical_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <roughnessmap_pars_fragment>\n#include <metalnessmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\tvec3 totalEmissiveRadiance = emissive;\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <roughnessmap_fragment>\n\t#include <metalnessmap_fragment>\n\t#include <normal_fragment>\n\t#include <emissivemap_fragment>\n\t#include <lights_physical_fragment>\n\t#include <lights_template>\n\t#include <aomap_fragment>\n\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n}\n",meshphysical_vert:"#define PHYSICAL\nvarying vec3 vViewPosition;\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n#endif\n#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <uv2_vertex>\n\t#include <color_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n#ifndef FLAT_SHADED\n\tvNormal = normalize( transformedNormal );\n#endif\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\tvViewPosition = - mvPosition.xyz;\n\t#include <worldpos_vertex>\n\t#include <shadowmap_vertex>\n\t#include <fog_vertex>\n}\n",normal_frag:"#define NORMAL\nuniform float opacity;\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP )\n\tvarying vec3 vViewPosition;\n#endif\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n#endif\n#include <packing>\n#include <uv_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\nvoid main() {\n\t#include <logdepthbuf_fragment>\n\t#include <normal_fragment>\n\tgl_FragColor = vec4( packNormalToRGB( normal ), opacity );\n}\n",normal_vert:"#define NORMAL\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP )\n\tvarying vec3 vViewPosition;\n#endif\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n#endif\n#include <uv_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n#ifndef FLAT_SHADED\n\tvNormal = normalize( transformedNormal );\n#endif\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP )\n\tvViewPosition = - mvPosition.xyz;\n#endif\n}\n",points_frag:"uniform vec3 diffuse;\nuniform float opacity;\n#include <common>\n#include <packing>\n#include <color_pars_fragment>\n#include <map_particle_pars_fragment>\n#include <fog_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec3 outgoingLight = vec3( 0.0 );\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\t#include <logdepthbuf_fragment>\n\t#include <map_particle_fragment>\n\t#include <color_fragment>\n\t#include <alphatest_fragment>\n\toutgoingLight = diffuseColor.rgb;\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\t#include <premultiplied_alpha_fragment>\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n}\n",points_vert:"uniform float size;\nuniform float scale;\n#include <common>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <color_vertex>\n\t#include <begin_vertex>\n\t#include <project_vertex>\n\t#ifdef USE_SIZEATTENUATION\n\t\tgl_PointSize = size * ( scale / - mvPosition.z );\n\t#else\n\t\tgl_PointSize = size;\n\t#endif\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <worldpos_vertex>\n\t#include <shadowmap_vertex>\n\t#include <fog_vertex>\n}\n",shadow_frag:"uniform vec3 color;\nuniform float opacity;\n#include <common>\n#include <packing>\n#include <fog_pars_fragment>\n#include <bsdfs>\n#include <lights_pars>\n#include <shadowmap_pars_fragment>\n#include <shadowmask_pars_fragment>\nvoid main() {\n\tgl_FragColor = vec4( color, opacity * ( 1.0 - getShadowMask() ) );\n\t#include <fog_fragment>\n}\n",shadow_vert:"#include <fog_pars_vertex>\n#include <shadowmap_pars_vertex>\nvoid main() {\n\t#include <begin_vertex>\n\t#include <project_vertex>\n\t#include <worldpos_vertex>\n\t#include <shadowmap_vertex>\n\t#include <fog_vertex>\n}\n"},ko={basic:{uniforms:Go.merge([Bo.common,Bo.specularmap,Bo.envmap,Bo.aomap,Bo.lightmap,Bo.fog]),vertexShader:Vo.meshbasic_vert,fragmentShader:Vo.meshbasic_frag},lambert:{uniforms:Go.merge([Bo.common,Bo.specularmap,Bo.envmap,Bo.aomap,Bo.lightmap,Bo.emissivemap,Bo.fog,Bo.lights,{emissive:{value:new H(0)}}]),vertexShader:Vo.meshlambert_vert,fragmentShader:Vo.meshlambert_frag},phong:{uniforms:Go.merge([Bo.common,Bo.specularmap,Bo.envmap,Bo.aomap,Bo.lightmap,Bo.emissivemap,Bo.bumpmap,Bo.normalmap,Bo.displacementmap,Bo.gradientmap,Bo.fog,Bo.lights,{emissive:{value:new H(0)},specular:{value:new H(1118481)},shininess:{value:30}}]),vertexShader:Vo.meshphong_vert,fragmentShader:Vo.meshphong_frag},standard:{uniforms:Go.merge([Bo.common,Bo.envmap,Bo.aomap,Bo.lightmap,Bo.emissivemap,Bo.bumpmap,Bo.normalmap,Bo.displacementmap,Bo.roughnessmap,Bo.metalnessmap,Bo.fog,Bo.lights,{emissive:{value:new H(0)},roughness:{value:.5},metalness:{value:.5},envMapIntensity:{value:1}}]),vertexShader:Vo.meshphysical_vert,fragmentShader:Vo.meshphysical_frag},points:{uniforms:Go.merge([Bo.points,Bo.fog]),vertexShader:Vo.points_vert,fragmentShader:Vo.points_frag},dashed:{uniforms:Go.merge([Bo.common,Bo.fog,{scale:{value:1},dashSize:{value:1},totalSize:{value:2}}]),vertexShader:Vo.linedashed_vert,fragmentShader:Vo.linedashed_frag},depth:{uniforms:Go.merge([Bo.common,Bo.displacementmap]),vertexShader:Vo.depth_vert,fragmentShader:Vo.depth_frag},normal:{uniforms:Go.merge([Bo.common,Bo.bumpmap,Bo.normalmap,Bo.displacementmap,{opacity:{value:1}}]),vertexShader:Vo.normal_vert,fragmentShader:Vo.normal_frag},cube:{uniforms:{tCube:{value:null},tFlip:{value:-1},opacity:{value:1}},vertexShader:Vo.cube_vert,fragmentShader:Vo.cube_frag},equirect:{uniforms:{tEquirect:{value:null}},vertexShader:Vo.equirect_vert,fragmentShader:Vo.equirect_frag},distanceRGBA:{uniforms:Go.merge([Bo.common,Bo.displacementmap,{referencePosition:{value:new a},nearDistance:{value:1},farDistance:{value:1e3}}]),vertexShader:Vo.distanceRGBA_vert,fragmentShader:Vo.distanceRGBA_frag},shadow:{uniforms:Go.merge([Bo.lights,Bo.fog,{color:{value:new H(0)},opacity:{value:1}}]),vertexShader:Vo.shadow_vert,fragmentShader:Vo.shadow_frag}};ko.physical={uniforms:Go.merge([ko.standard.uniforms,{clearCoat:{value:0},clearCoatRoughness:{value:0}}]),vertexShader:Vo.meshphysical_vert,fragmentShader:Vo.meshphysical_frag},Object.assign(X.prototype,{set:function(t,e){return this.min.copy(t),this.max.copy(e),this},setFromPoints:function(t){this.makeEmpty();for(var e=0,i=t.length;e<i;e++)this.expandByPoint(t[e]);return this},setFromCenterAndSize:function(){var t=new i;return function(e,i){var n=t.copy(i).multiplyScalar(.5);return this.min.copy(e).sub(n),this.max.copy(e).add(n),this}}(),clone:function(){return(new this.constructor).copy(this)},copy:function(t){return this.min.copy(t.min),this.max.copy(t.max),this},makeEmpty:function(){return this.min.x=this.min.y=1/0,this.max.x=this.max.y=-1/0,this},isEmpty:function(){return this.max.x<this.min.x||this.max.y<this.min.y},getCenter:function(t){var e=t||new i;return this.isEmpty()?e.set(0,0):e.addVectors(this.min,this.max).multiplyScalar(.5)},getSize:function(t){var e=t||new i;return this.isEmpty()?e.set(0,0):e.subVectors(this.max,this.min)},expandByPoint:function(t){return this.min.min(t),this.max.max(t),this},expandByVector:function(t){return this.min.sub(t),this.max.add(t),this},expandByScalar:function(t){return this.min.addScalar(-t),this.max.addScalar(t),this},containsPoint:function(t){return!(t.x<this.min.x||t.x>this.max.x||t.y<this.min.y||t.y>this.max.y)},containsBox:function(t){return this.min.x<=t.min.x&&t.max.x<=this.max.x&&this.min.y<=t.min.y&&t.max.y<=this.max.y},getParameter:function(t,e){return(e||new i).set((t.x-this.min.x)/(this.max.x-this.min.x),(t.y-this.min.y)/(this.max.y-this.min.y))},intersectsBox:function(t){return!(t.max.x<this.min.x||t.min.x>this.max.x||t.max.y<this.min.y||t.min.y>this.max.y)},clampPoint:function(t,e){return(e||new i).copy(t).clamp(this.min,this.max)},distanceToPoint:function(){var t=new i;return function(e){return t.copy(e).clamp(this.min,this.max).sub(e).length()}}(),intersect:function(t){return this.min.max(t.min),this.max.min(t.max),this},union:function(t){return this.min.min(t.min),this.max.max(t.max),this},translate:function(t){return this.min.add(t),this.max.add(t),this},equals:function(t){return t.min.equals(this.min)&&t.max.equals(this.max)}}),(Y.prototype=Object.create(s.prototype)).constructor=Y;var jo=0;J.prototype=Object.assign(Object.create(e.prototype),{constructor:J,isMaterial:!0,onBeforeCompile:function(){},setValues:function(t){if(void 0!==t)for(var e in t){var i=t[e];if(void 0!==i)if("shading"!==e){var n=this[e];void 0!==n&&(n&&n.isColor?n.set(i):n&&n.isVector3&&i&&i.isVector3?n.copy(i):this[e]="overdraw"===e?Number(i):i)}else this.flatShading=1===i}},toJSON:function(t){function e(t){var e=[];for(var i in t){var n=t[i];delete n.metadata,e.push(n)}return e}var i=void 0===t||"string"==typeof t;i&&(t={textures:{},images:{}});var n={metadata:{version:4.5,type:"Material",generator:"Material.toJSON"}};if(n.uuid=this.uuid,n.type=this.type,""!==this.name&&(n.name=this.name),this.color&&this.color.isColor&&(n.color=this.color.getHex()),void 0!==this.roughness&&(n.roughness=this.roughness),void 0!==this.metalness&&(n.metalness=this.metalness),this.emissive&&this.emissive.isColor&&(n.emissive=this.emissive.getHex()),1!==this.emissiveIntensity&&(n.emissiveIntensity=this.emissiveIntensity),this.specular&&this.specular.isColor&&(n.specular=this.specular.getHex()),void 0!==this.shininess&&(n.shininess=this.shininess),void 0!==this.clearCoat&&(n.clearCoat=this.clearCoat),void 0!==this.clearCoatRoughness&&(n.clearCoatRoughness=this.clearCoatRoughness),this.map&&this.map.isTexture&&(n.map=this.map.toJSON(t).uuid),this.alphaMap&&this.alphaMap.isTexture&&(n.alphaMap=this.alphaMap.toJSON(t).uuid),this.lightMap&&this.lightMap.isTexture&&(n.lightMap=this.lightMap.toJSON(t).uuid),this.bumpMap&&this.bumpMap.isTexture&&(n.bumpMap=this.bumpMap.toJSON(t).uuid,n.bumpScale=this.bumpScale),this.normalMap&&this.normalMap.isTexture&&(n.normalMap=this.normalMap.toJSON(t).uuid,n.normalScale=this.normalScale.toArray()),this.displacementMap&&this.displacementMap.isTexture&&(n.displacementMap=this.displacementMap.toJSON(t).uuid,n.displacementScale=this.displacementScale,n.displacementBias=this.displacementBias),this.roughnessMap&&this.roughnessMap.isTexture&&(n.roughnessMap=this.roughnessMap.toJSON(t).uuid),this.metalnessMap&&this.metalnessMap.isTexture&&(n.metalnessMap=this.metalnessMap.toJSON(t).uuid),this.emissiveMap&&this.emissiveMap.isTexture&&(n.emissiveMap=this.emissiveMap.toJSON(t).uuid),this.specularMap&&this.specularMap.isTexture&&(n.specularMap=this.specularMap.toJSON(t).uuid),this.envMap&&this.envMap.isTexture&&(n.envMap=this.envMap.toJSON(t).uuid,n.reflectivity=this.reflectivity),this.gradientMap&&this.gradientMap.isTexture&&(n.gradientMap=this.gradientMap.toJSON(t).uuid),void 0!==this.size&&(n.size=this.size),void 0!==this.sizeAttenuation&&(n.sizeAttenuation=this.sizeAttenuation),this.blending!==Gr&&(n.blending=this.blending),!0===this.flatShading&&(n.flatShading=this.flatShading),this.side!==Nr&&(n.side=this.side),this.vertexColors!==Ur&&(n.vertexColors=this.vertexColors),this.opacity<1&&(n.opacity=this.opacity),!0===this.transparent&&(n.transparent=this.transparent),n.depthFunc=this.depthFunc,n.depthTest=this.depthTest,n.depthWrite=this.depthWrite,0!==this.rotation&&(n.rotation=this.rotation),1!==this.linewidth&&(n.linewidth=this.linewidth),void 0!==this.dashSize&&(n.dashSize=this.dashSize),void 0!==this.gapSize&&(n.gapSize=this.gapSize),void 0!==this.scale&&(n.scale=this.scale),!0===this.dithering&&(n.dithering=!0),this.alphaTest>0&&(n.alphaTest=this.alphaTest),!0===this.premultipliedAlpha&&(n.premultipliedAlpha=this.premultipliedAlpha),!0===this.wireframe&&(n.wireframe=this.wireframe),this.wireframeLinewidth>1&&(n.wireframeLinewidth=this.wireframeLinewidth),"round"!==this.wireframeLinecap&&(n.wireframeLinecap=this.wireframeLinecap),"round"!==this.wireframeLinejoin&&(n.wireframeLinejoin=this.wireframeLinejoin),!0===this.morphTargets&&(n.morphTargets=!0),!0===this.skinning&&(n.skinning=!0),!1===this.visible&&(n.visible=!1),"{}"!==JSON.stringify(this.userData)&&(n.userData=this.userData),i){var r=e(t.textures),a=e(t.images);r.length>0&&(n.textures=r),a.length>0&&(n.images=a)}return n},clone:function(){return(new this.constructor).copy(this)},copy:function(t){this.name=t.name,this.fog=t.fog,this.lights=t.lights,this.blending=t.blending,this.side=t.side,this.flatShading=t.flatShading,this.vertexColors=t.vertexColors,this.opacity=t.opacity,this.transparent=t.transparent,this.blendSrc=t.blendSrc,this.blendDst=t.blendDst,this.blendEquation=t.blendEquation,this.blendSrcAlpha=t.blendSrcAlpha,this.blendDstAlpha=t.blendDstAlpha,this.blendEquationAlpha=t.blendEquationAlpha,this.depthFunc=t.depthFunc,this.depthTest=t.depthTest,this.depthWrite=t.depthWrite,this.colorWrite=t.colorWrite,this.precision=t.precision,this.polygonOffset=t.polygonOffset,this.polygonOffsetFactor=t.polygonOffsetFactor,this.polygonOffsetUnits=t.polygonOffsetUnits,this.dithering=t.dithering,this.alphaTest=t.alphaTest,this.premultipliedAlpha=t.premultipliedAlpha,this.overdraw=t.overdraw,this.visible=t.visible,this.userData=JSON.parse(JSON.stringify(t.userData)),this.clipShadows=t.clipShadows,this.clipIntersection=t.clipIntersection;var e=t.clippingPlanes,i=null;if(null!==e){var n=e.length;i=new Array(n);for(var r=0;r!==n;++r)i[r]=e[r].clone()}return this.clippingPlanes=i,this},dispose:function(){this.dispatchEvent({type:"dispose"})}}),(Q.prototype=Object.create(J.prototype)).constructor=Q,Q.prototype.isMeshDepthMaterial=!0,Q.prototype.copy=function(t){return J.prototype.copy.call(this,t),this.depthPacking=t.depthPacking,this.skinning=t.skinning,this.morphTargets=t.morphTargets,this.map=t.map,this.alphaMap=t.alphaMap,this.displacementMap=t.displacementMap,this.displacementScale=t.displacementScale,this.displacementBias=t.displacementBias,this.wireframe=t.wireframe,this.wireframeLinewidth=t.wireframeLinewidth,this},(K.prototype=Object.create(J.prototype)).constructor=K,K.prototype.isMeshDistanceMaterial=!0,K.prototype.copy=function(t){return J.prototype.copy.call(this,t),this.referencePosition.copy(t.referencePosition),this.nearDistance=t.nearDistance,this.farDistance=t.farDistance,this.skinning=t.skinning,this.morphTargets=t.morphTargets,this.map=t.map,this.alphaMap=t.alphaMap,this.displacementMap=t.displacementMap,this.displacementScale=t.displacementScale,this.displacementBias=t.displacementBias,this},Object.assign($.prototype,{isBox3:!0,set:function(t,e){return this.min.copy(t),this.max.copy(e),this},setFromArray:function(t){for(var e=1/0,i=1/0,n=1/0,r=-1/0,a=-1/0,o=-1/0,s=0,h=t.length;s<h;s+=3){var c=t[s],l=t[s+1],u=t[s+2];c<e&&(e=c),l<i&&(i=l),u<n&&(n=u),c>r&&(r=c),l>a&&(a=l),u>o&&(o=u)}return this.min.set(e,i,n),this.max.set(r,a,o),this},setFromBufferAttribute:function(t){for(var e=1/0,i=1/0,n=1/0,r=-1/0,a=-1/0,o=-1/0,s=0,h=t.count;s<h;s++){var c=t.getX(s),l=t.getY(s),u=t.getZ(s);c<e&&(e=c),l<i&&(i=l),u<n&&(n=u),c>r&&(r=c),l>a&&(a=l),u>o&&(o=u)}return this.min.set(e,i,n),this.max.set(r,a,o),this},setFromPoints:function(t){this.makeEmpty();for(var e=0,i=t.length;e<i;e++)this.expandByPoint(t[e]);return this},setFromCenterAndSize:function(){var t=new a;return function(e,i){var n=t.copy(i).multiplyScalar(.5);return this.min.copy(e).sub(n),this.max.copy(e).add(n),this}}(),setFromObject:function(t){return this.makeEmpty(),this.expandByObject(t)},clone:function(){return(new this.constructor).copy(this)},copy:function(t){return this.min.copy(t.min),this.max.copy(t.max),this},makeEmpty:function(){return this.min.x=this.min.y=this.min.z=1/0,this.max.x=this.max.y=this.max.z=-1/0,this},isEmpty:function(){return this.max.x<this.min.x||this.max.y<this.min.y||this.max.z<this.min.z},getCenter:function(t){var e=t||new a;return this.isEmpty()?e.set(0,0,0):e.addVectors(this.min,this.max).multiplyScalar(.5)},getSize:function(t){var e=t||new a;return this.isEmpty()?e.set(0,0,0):e.subVectors(this.max,this.min)},expandByPoint:function(t){return this.min.min(t),this.max.max(t),this},expandByVector:function(t){return this.min.sub(t),this.max.add(t),this},expandByScalar:function(t){return this.min.addScalar(-t),this.max.addScalar(t),this},expandByObject:function(){function t(t){var a=t.geometry;if(void 0!==a)if(a.isGeometry){var o=a.vertices;for(i=0,n=o.length;i<n;i++)r.copy(o[i]),r.applyMatrix4(t.matrixWorld),e.expandByPoint(r)}else if(a.isBufferGeometry){var s=a.attributes.position;if(void 0!==s)for(i=0,n=s.count;i<n;i++)r.fromBufferAttribute(s,i).applyMatrix4(t.matrixWorld),e.expandByPoint(r)}}var e,i,n,r=new a;return function(i){return e=this,i.updateMatrixWorld(!0),i.traverse(t),this}}(),containsPoint:function(t){return!(t.x<this.min.x||t.x>this.max.x||t.y<this.min.y||t.y>this.max.y||t.z<this.min.z||t.z>this.max.z)},containsBox:function(t){return this.min.x<=t.min.x&&t.max.x<=this.max.x&&this.min.y<=t.min.y&&t.max.y<=this.max.y&&this.min.z<=t.min.z&&t.max.z<=this.max.z},getParameter:function(t,e){return(e||new a).set((t.x-this.min.x)/(this.max.x-this.min.x),(t.y-this.min.y)/(this.max.y-this.min.y),(t.z-this.min.z)/(this.max.z-this.min.z))},intersectsBox:function(t){return!(t.max.x<this.min.x||t.min.x>this.max.x||t.max.y<this.min.y||t.min.y>this.max.y||t.max.z<this.min.z||t.min.z>this.max.z)},intersectsSphere:function(){var t=new a;return function(e){return this.clampPoint(e.center,t),t.distanceToSquared(e.center)<=e.radius*e.radius}}(),intersectsPlane:function(t){var e,i;return t.normal.x>0?(e=t.normal.x*this.min.x,i=t.normal.x*this.max.x):(e=t.normal.x*this.max.x,i=t.normal.x*this.min.x),t.normal.y>0?(e+=t.normal.y*this.min.y,i+=t.normal.y*this.max.y):(e+=t.normal.y*this.max.y,i+=t.normal.y*this.min.y),t.normal.z>0?(e+=t.normal.z*this.min.z,i+=t.normal.z*this.max.z):(e+=t.normal.z*this.max.z,i+=t.normal.z*this.min.z),e<=t.constant&&i>=t.constant},clampPoint:function(t,e){return(e||new a).copy(t).clamp(this.min,this.max)},distanceToPoint:function(){var t=new a;return function(e){return t.copy(e).clamp(this.min,this.max).sub(e).length()}}(),getBoundingSphere:function(){var t=new a;return function(e){var i=e||new tt;return this.getCenter(i.center),i.radius=.5*this.getSize(t).length(),i}}(),intersect:function(t){return this.min.max(t.min),this.max.min(t.max),this.isEmpty()&&this.makeEmpty(),this},union:function(t){return this.min.min(t.min),this.max.max(t.max),this},applyMatrix4:function(){var t=[new a,new a,new a,new a,new a,new a,new a,new a];return function(e){return this.isEmpty()?this:(t[0].set(this.min.x,this.min.y,this.min.z).applyMatrix4(e),t[1].set(this.min.x,this.min.y,this.max.z).applyMatrix4(e),t[2].set(this.min.x,this.max.y,this.min.z).applyMatrix4(e),t[3].set(this.min.x,this.max.y,this.max.z).applyMatrix4(e),t[4].set(this.max.x,this.min.y,this.min.z).applyMatrix4(e),t[5].set(this.max.x,this.min.y,this.max.z).applyMatrix4(e),t[6].set(this.max.x,this.max.y,this.min.z).applyMatrix4(e),t[7].set(this.max.x,this.max.y,this.max.z).applyMatrix4(e),this.setFromPoints(t),this)}}(),translate:function(t){return this.min.add(t),this.max.add(t),this},equals:function(t){return t.min.equals(this.min)&&t.max.equals(this.max)}}),Object.assign(tt.prototype,{set:function(t,e){return this.center.copy(t),this.radius=e,this},setFromPoints:function(){var t=new $;return function(e,i){var n=this.center;void 0!==i?n.copy(i):t.setFromPoints(e).getCenter(n);for(var r=0,a=0,o=e.length;a<o;a++)r=Math.max(r,n.distanceToSquared(e[a]));return this.radius=Math.sqrt(r),this}}(),clone:function(){return(new this.constructor).copy(this)},copy:function(t){return this.center.copy(t.center),this.radius=t.radius,this},empty:function(){return this.radius<=0},containsPoint:function(t){return t.distanceToSquared(this.center)<=this.radius*this.radius},distanceToPoint:function(t){return t.distanceTo(this.center)-this.radius},intersectsSphere:function(t){var e=this.radius+t.radius;return t.center.distanceToSquared(this.center)<=e*e},intersectsBox:function(t){return t.intersectsSphere(this)},intersectsPlane:function(t){return Math.abs(t.distanceToPoint(this.center))<=this.radius},clampPoint:function(t,e){var i=this.center.distanceToSquared(t),n=e||new a;return n.copy(t),i>this.radius*this.radius&&(n.sub(this.center).normalize(),n.multiplyScalar(this.radius).add(this.center)),n},getBoundingBox:function(t){var e=t||new $;return e.set(this.center,this.center),e.expandByScalar(this.radius),e},applyMatrix4:function(t){return this.center.applyMatrix4(t),this.radius=this.radius*t.getMaxScaleOnAxis(),this},translate:function(t){return this.center.add(t),this},equals:function(t){return t.center.equals(this.center)&&t.radius===this.radius}}),Object.assign(et.prototype,{set:function(t,e){return this.normal.copy(t),this.constant=e,this},setComponents:function(t,e,i,n){return this.normal.set(t,e,i),this.constant=n,this},setFromNormalAndCoplanarPoint:function(t,e){return this.normal.copy(t),this.constant=-e.dot(this.normal),this},setFromCoplanarPoints:function(){var t=new a,e=new a;return function(i,n,r){var a=t.subVectors(r,n).cross(e.subVectors(i,n)).normalize();return this.setFromNormalAndCoplanarPoint(a,i),this}}(),clone:function(){return(new this.constructor).copy(this)},copy:function(t){return this.normal.copy(t.normal),this.constant=t.constant,this},normalize:function(){var t=1/this.normal.length();return this.normal.multiplyScalar(t),this.constant*=t,this},negate:function(){return this.constant*=-1,this.normal.negate(),this},distanceToPoint:function(t){return this.normal.dot(t)+this.constant},distanceToSphere:function(t){return this.distanceToPoint(t.center)-t.radius},projectPoint:function(t,e){return(e||new a).copy(this.normal).multiplyScalar(-this.distanceToPoint(t)).add(t)},intersectLine:function(){var t=new a;return function(e,i){var n=i||new a,r=e.delta(t),o=this.normal.dot(r);if(0!==o){var s=-(e.start.dot(this.normal)+this.constant)/o;if(!(s<0||s>1))return n.copy(r).multiplyScalar(s).add(e.start)}else if(0===this.distanceToPoint(e.start))return n.copy(e.start)}}(),intersectsLine:function(t){var e=this.distanceToPoint(t.start),i=this.distanceToPoint(t.end);return e<0&&i>0||i<0&&e>0},intersectsBox:function(t){return t.intersectsPlane(this)},intersectsSphere:function(t){return t.intersectsPlane(this)},coplanarPoint:function(t){return(t||new a).copy(this.normal).multiplyScalar(-this.constant)},applyMatrix4:function(){var t=new a,e=new o;return function(i,n){var r=n||e.getNormalMatrix(i),a=this.coplanarPoint(t).applyMatrix4(i),o=this.normal.applyMatrix3(r).normalize();return this.constant=-a.dot(o),this}}(),translate:function(t){return this.constant-=t.dot(this.normal),this},equals:function(t){return t.normal.equals(this.normal)&&t.constant===this.constant}}),Object.assign(it.prototype,{set:function(t,e,i,n,r,a){var o=this.planes;return o[0].copy(t),o[1].copy(e),o[2].copy(i),o[3].copy(n),o[4].copy(r),o[5].copy(a),this},clone:function(){return(new this.constructor).copy(this)},copy:function(t){for(var e=this.planes,i=0;i<6;i++)e[i].copy(t.planes[i]);return this},setFromMatrix:function(t){var e=this.planes,i=t.elements,n=i[0],r=i[1],a=i[2],o=i[3],s=i[4],h=i[5],c=i[6],l=i[7],u=i[8],p=i[9],d=i[10],f=i[11],m=i[12],v=i[13],g=i[14],y=i[15];return e[0].setComponents(o-n,l-s,f-u,y-m).normalize(),e[1].setComponents(o+n,l+s,f+u,y+m).normalize(),e[2].setComponents(o+r,l+h,f+p,y+v).normalize(),e[3].setComponents(o-r,l-h,f-p,y-v).normalize(),e[4].setComponents(o-a,l-c,f-d,y-g).normalize(),e[5].setComponents(o+a,l+c,f+d,y+g).normalize(),this},intersectsObject:function(){var t=new tt;return function(e){var i=e.geometry;return null===i.boundingSphere&&i.computeBoundingSphere(),t.copy(i.boundingSphere).applyMatrix4(e.matrixWorld),this.intersectsSphere(t)}}(),intersectsSprite:function(){var t=new tt;return function(e){return t.center.set(0,0,0),t.radius=.7071067811865476,t.applyMatrix4(e.matrixWorld),this.intersectsSphere(t)}}(),intersectsSphere:function(t){for(var e=this.planes,i=t.center,n=-t.radius,r=0;r<6;r++){if(e[r].distanceToPoint(i)<n)return!1}return!0},intersectsBox:function(){var t=new a,e=new a;return function(i){for(var n=this.planes,r=0;r<6;r++){var a=n[r];t.x=a.normal.x>0?i.min.x:i.max.x,e.x=a.normal.x>0?i.max.x:i.min.x,t.y=a.normal.y>0?i.min.y:i.max.y,e.y=a.normal.y>0?i.max.y:i.min.y,t.z=a.normal.z>0?i.min.z:i.max.z,e.z=a.normal.z>0?i.max.z:i.min.z;var o=a.distanceToPoint(t),s=a.distanceToPoint(e);if(o<0&&s<0)return!1}return!0}}(),containsPoint:function(t){for(var e=this.planes,i=0;i<6;i++)if(e[i].distanceToPoint(t)<0)return!1;return!0}}),at.RotationOrders=["XYZ","YZX","ZXY","XZY","YXZ","ZYX"],at.DefaultOrder="XYZ",Object.defineProperties(at.prototype,{x:{get:function(){return this._x},set:function(t){this._x=t,this.onChangeCallback()}},y:{get:function(){return this._y},set:function(t){this._y=t,this.onChangeCallback()}},z:{get:function(){return this._z},set:function(t){this._z=t,this.onChangeCallback()}},order:{get:function(){return this._order},set:function(t){this._order=t,this.onChangeCallback()}}}),Object.assign(at.prototype,{isEuler:!0,set:function(t,e,i,n){return this._x=t,this._y=e,this._z=i,this._order=n||this._order,this.onChangeCallback(),this},clone:function(){return new this.constructor(this._x,this._y,this._z,this._order)},copy:function(t){return this._x=t._x,this._y=t._y,this._z=t._z,this._order=t._order,this.onChangeCallback(),this},setFromRotationMatrix:function(t,e,i){var n=Po.clamp,r=t.elements,a=r[0],o=r[4],s=r[8],h=r[1],c=r[5],l=r[9],u=r[2],p=r[6],d=r[10];return"XYZ"===(e=e||this._order)?(this._y=Math.asin(n(s,-1,1)),Math.abs(s)<.99999?(this._x=Math.atan2(-l,d),this._z=Math.atan2(-o,a)):(this._x=Math.atan2(p,c),this._z=0)):"YXZ"===e?(this._x=Math.asin(-n(l,-1,1)),Math.abs(l)<.99999?(this._y=Math.atan2(s,d),this._z=Math.atan2(h,c)):(this._y=Math.atan2(-u,a),this._z=0)):"ZXY"===e?(this._x=Math.asin(n(p,-1,1)),Math.abs(p)<.99999?(this._y=Math.atan2(-u,d),this._z=Math.atan2(-o,c)):(this._y=0,this._z=Math.atan2(h,a))):"ZYX"===e?(this._y=Math.asin(-n(u,-1,1)),Math.abs(u)<.99999?(this._x=Math.atan2(p,d),this._z=Math.atan2(h,a)):(this._x=0,this._z=Math.atan2(-o,c))):"YZX"===e?(this._z=Math.asin(n(h,-1,1)),Math.abs(h)<.99999?(this._x=Math.atan2(-l,c),this._y=Math.atan2(-u,a)):(this._x=0,this._y=Math.atan2(s,d))):"XZY"===e&&(this._z=Math.asin(-n(o,-1,1)),Math.abs(o)<.99999?(this._x=Math.atan2(p,c),this._y=Math.atan2(s,a)):(this._x=Math.atan2(-l,d),this._y=0)),this._order=e,!1!==i&&this.onChangeCallback(),this},setFromQuaternion:function(){var t=new n;return function(e,i,n){return t.makeRotationFromQuaternion(e),this.setFromRotationMatrix(t,i,n)}}(),setFromVector3:function(t,e){return this.set(t.x,t.y,t.z,e||this._order)},reorder:function(){var t=new r;return function(e){return t.setFromEuler(this),this.setFromQuaternion(t,e)}}(),equals:function(t){return t._x===this._x&&t._y===this._y&&t._z===this._z&&t._order===this._order},fromArray:function(t){return this._x=t[0],this._y=t[1],this._z=t[2],void 0!==t[3]&&(this._order=t[3]),this.onChangeCallback(),this},toArray:function(t,e){return void 0===t&&(t=[]),void 0===e&&(e=0),t[e]=this._x,t[e+1]=this._y,t[e+2]=this._z,t[e+3]=this._order,t},toVector3:function(t){return t?t.set(this._x,this._y,this._z):new a(this._x,this._y,this._z)},onChange:function(t){return this.onChangeCallback=t,this},onChangeCallback:function(){}}),Object.assign(ot.prototype,{set:function(t){this.mask=1<<t|0},enable:function(t){this.mask|=1<<t|0},toggle:function(t){this.mask^=1<<t|0},disable:function(t){this.mask&=~(1<<t|0)},test:function(t){return 0!=(this.mask&t.mask)}});var Wo=0;st.DefaultUp=new a(0,1,0),st.DefaultMatrixAutoUpdate=!0,st.prototype=Object.assign(Object.create(e.prototype),{constructor:st,isObject3D:!0,onBeforeRender:function(){},onAfterRender:function(){},applyMatrix:function(t){this.matrix.multiplyMatrices(t,this.matrix),this.matrix.decompose(this.position,this.quaternion,this.scale)},applyQuaternion:function(t){return this.quaternion.premultiply(t),this},setRotationFromAxisAngle:function(t,e){this.quaternion.setFromAxisAngle(t,e)},setRotationFromEuler:function(t){this.quaternion.setFromEuler(t,!0)},setRotationFromMatrix:function(t){this.quaternion.setFromRotationMatrix(t)},setRotationFromQuaternion:function(t){this.quaternion.copy(t)},rotateOnAxis:function(){var t=new r;return function(e,i){return t.setFromAxisAngle(e,i),this.quaternion.multiply(t),this}}(),rotateOnWorldAxis:function(){var t=new r;return function(e,i){return t.setFromAxisAngle(e,i),this.quaternion.premultiply(t),this}}(),rotateX:function(){var t=new a(1,0,0);return function(e){return this.rotateOnAxis(t,e)}}(),rotateY:function(){var t=new a(0,1,0);return function(e){return this.rotateOnAxis(t,e)}}(),rotateZ:function(){var t=new a(0,0,1);return function(e){return this.rotateOnAxis(t,e)}}(),translateOnAxis:function(){var t=new a;return function(e,i){return t.copy(e).applyQuaternion(this.quaternion),this.position.add(t.multiplyScalar(i)),this}}(),translateX:function(){var t=new a(1,0,0);return function(e){return this.translateOnAxis(t,e)}}(),translateY:function(){var t=new a(0,1,0);return function(e){return this.translateOnAxis(t,e)}}(),translateZ:function(){var t=new a(0,0,1);return function(e){return this.translateOnAxis(t,e)}}(),localToWorld:function(t){return t.applyMatrix4(this.matrixWorld)},worldToLocal:function(){var t=new n;return function(e){return e.applyMatrix4(t.getInverse(this.matrixWorld))}}(),lookAt:function(){var t=new n,e=new a;return function(i,n,r){i.isVector3?e.copy(i):e.set(i,n,r),this.isCamera?t.lookAt(this.position,e,this.up):t.lookAt(e,this.position,this.up),this.quaternion.setFromRotationMatrix(t)}}(),add:function(t){if(arguments.length>1){for(var e=0;e<arguments.length;e++)this.add(arguments[e]);return this}return t===this?this:(t&&t.isObject3D&&(null!==t.parent&&t.parent.remove(t),t.parent=this,t.dispatchEvent({type:"added"}),this.children.push(t)),this)},remove:function(t){if(arguments.length>1){for(var e=0;e<arguments.length;e++)this.remove(arguments[e]);return this}var i=this.children.indexOf(t);return-1!==i&&(t.parent=null,t.dispatchEvent({type:"removed"}),this.children.splice(i,1)),this},getObjectById:function(t){return this.getObjectByProperty("id",t)},getObjectByName:function(t){return this.getObjectByProperty("name",t)},getObjectByProperty:function(t,e){if(this[t]===e)return this;for(var i=0,n=this.children.length;i<n;i++){var r=this.children[i].getObjectByProperty(t,e);if(void 0!==r)return r}},getWorldPosition:function(t){var e=t||new a;return this.updateMatrixWorld(!0),e.setFromMatrixPosition(this.matrixWorld)},getWorldQuaternion:function(){var t=new a,e=new a;return function(i){var n=i||new r;return this.updateMatrixWorld(!0),this.matrixWorld.decompose(t,n,e),n}}(),getWorldRotation:function(){var t=new r;return function(e){var i=e||new at;return this.getWorldQuaternion(t),i.setFromQuaternion(t,this.rotation.order,!1)}}(),getWorldScale:function(){var t=new a,e=new r;return function(i){var n=i||new a;return this.updateMatrixWorld(!0),this.matrixWorld.decompose(t,e,n),n}}(),getWorldDirection:function(){var t=new r;return function(e){var i=e||new a;return this.getWorldQuaternion(t),i.set(0,0,1).applyQuaternion(t)}}(),raycast:function(){},traverse:function(t){t(this);for(var e=this.children,i=0,n=e.length;i<n;i++)e[i].traverse(t)},traverseVisible:function(t){if(!1!==this.visible){t(this);for(var e=this.children,i=0,n=e.length;i<n;i++)e[i].traverseVisible(t)}},traverseAncestors:function(t){var e=this.parent;null!==e&&(t(e),e.traverseAncestors(t))},updateMatrix:function(){this.matrix.compose(this.position,this.quaternion,this.scale),this.matrixWorldNeedsUpdate=!0},updateMatrixWorld:function(t){this.matrixAutoUpdate&&this.updateMatrix(),(this.matrixWorldNeedsUpdate||t)&&(null===this.parent?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix),this.matrixWorldNeedsUpdate=!1,t=!0);for(var e=this.children,i=0,n=e.length;i<n;i++)e[i].updateMatrixWorld(t)},toJSON:function(t){function e(e,i){return void 0===e[i.uuid]&&(e[i.uuid]=i.toJSON(t)),i.uuid}function i(t){var e=[];for(var i in t){var n=t[i];delete n.metadata,e.push(n)}return e}var n=void 0===t||"string"==typeof t,r={};n&&(t={geometries:{},materials:{},textures:{},images:{},shapes:{}},r.metadata={version:4.5,type:"Object",generator:"Object3D.toJSON"});var a={};if(a.uuid=this.uuid,a.type=this.type,""!==this.name&&(a.name=this.name),!0===this.castShadow&&(a.castShadow=!0),!0===this.receiveShadow&&(a.receiveShadow=!0),!1===this.visible&&(a.visible=!1),"{}"!==JSON.stringify(this.userData)&&(a.userData=this.userData),a.matrix=this.matrix.toArray(),void 0!==this.geometry){a.geometry=e(t.geometries,this.geometry);var o=this.geometry.parameters;if(void 0!==o&&void 0!==o.shapes){var s=o.shapes;if(Array.isArray(s))for(var h=0,c=s.length;h<c;h++){var l=s[h];e(t.shapes,l)}else e(t.shapes,s)}}if(void 0!==this.material)if(Array.isArray(this.material)){var u=[];for(h=0,c=this.material.length;h<c;h++)u.push(e(t.materials,this.material[h]));a.material=u}else a.material=e(t.materials,this.material);if(this.children.length>0){a.children=[];for(h=0;h<this.children.length;h++)a.children.push(this.children[h].toJSON(t).object)}if(n){var p=i(t.geometries),d=i(t.materials),f=i(t.textures),m=i(t.images);s=i(t.shapes);p.length>0&&(r.geometries=p),d.length>0&&(r.materials=d),f.length>0&&(r.textures=f),m.length>0&&(r.images=m),s.length>0&&(r.shapes=s)}return r.object=a,r},clone:function(t){return(new this.constructor).copy(this,t)},copy:function(t,e){if(void 0===e&&(e=!0),this.name=t.name,this.up.copy(t.up),this.position.copy(t.position),this.quaternion.copy(t.quaternion),this.scale.copy(t.scale),this.matrix.copy(t.matrix),this.matrixWorld.copy(t.matrixWorld),this.matrixAutoUpdate=t.matrixAutoUpdate,this.matrixWorldNeedsUpdate=t.matrixWorldNeedsUpdate,this.layers.mask=t.layers.mask,this.visible=t.visible,this.castShadow=t.castShadow,this.receiveShadow=t.receiveShadow,this.frustumCulled=t.frustumCulled,this.renderOrder=t.renderOrder,this.userData=JSON.parse(JSON.stringify(t.userData)),!0===e)for(var i=0;i<t.children.length;i++){var n=t.children[i];this.add(n.clone())}return this}}),ht.prototype=Object.assign(Object.create(st.prototype),{constructor:ht,isCamera:!0,copy:function(t,e){return st.prototype.copy.call(this,t,e),this.matrixWorldInverse.copy(t.matrixWorldInverse),this.projectionMatrix.copy(t.projectionMatrix),this},getWorldDirection:function(){var t=new r;return function(e){var i=e||new a;return this.getWorldQuaternion(t),i.set(0,0,-1).applyQuaternion(t)}}(),updateMatrixWorld:function(t){st.prototype.updateMatrixWorld.call(this,t),this.matrixWorldInverse.getInverse(this.matrixWorld)},clone:function(){return(new this.constructor).copy(this)}}),ct.prototype=Object.assign(Object.create(ht.prototype),{constructor:ct,isOrthographicCamera:!0,copy:function(t,e){return ht.prototype.copy.call(this,t,e),this.left=t.left,this.right=t.right,this.top=t.top,this.bottom=t.bottom,this.near=t.near,this.far=t.far,this.zoom=t.zoom,this.view=null===t.view?null:Object.assign({},t.view),this},setViewOffset:function(t,e,i,n,r,a){null===this.view&&(this.view={enabled:!0,fullWidth:1,fullHeight:1,offsetX:0,offsetY:0,width:1,height:1}),this.view.enabled=!0,this.view.fullWidth=t,this.view.fullHeight=e,this.view.offsetX=i,this.view.offsetY=n,this.view.width=r,this.view.height=a,this.updateProjectionMatrix()},clearViewOffset:function(){null!==this.view&&(this.view.enabled=!1),this.updateProjectionMatrix()},updateProjectionMatrix:function(){var t=(this.right-this.left)/(2*this.zoom),e=(this.top-this.bottom)/(2*this.zoom),i=(this.right+this.left)/2,n=(this.top+this.bottom)/2,r=i-t,a=i+t,o=n+e,s=n-e;if(null!==this.view&&this.view.enabled){var h=this.zoom/(this.view.width/this.view.fullWidth),c=this.zoom/(this.view.height/this.view.fullHeight),l=(this.right-this.left)/this.view.width,u=(this.top-this.bottom)/this.view.height;a=(r+=l*(this.view.offsetX/h))+l*(this.view.width/h),s=(o-=u*(this.view.offsetY/c))-u*(this.view.height/c)}this.projectionMatrix.makeOrthographic(r,a,o,s,this.near,this.far)},toJSON:function(t){var e=st.prototype.toJSON.call(this,t);return e.object.zoom=this.zoom,e.object.left=this.left,e.object.right=this.right,e.object.top=this.top,e.object.bottom=this.bottom,e.object.near=this.near,e.object.far=this.far,null!==this.view&&(e.object.view=Object.assign({},this.view)),e}}),Object.assign(lt.prototype,{clone:function(){return(new this.constructor).copy(this)},copy:function(t){this.a=t.a,this.b=t.b,this.c=t.c,this.normal.copy(t.normal),this.color.copy(t.color),this.materialIndex=t.materialIndex;for(var e=0,i=t.vertexNormals.length;e<i;e++)this.vertexNormals[e]=t.vertexNormals[e].clone();for(e=0,i=t.vertexColors.length;e<i;e++)this.vertexColors[e]=t.vertexColors[e].clone();return this}});var Ho=0;ut.prototype=Object.assign(Object.create(e.prototype),{constructor:ut,isGeometry:!0,applyMatrix:function(t){for(var e=(new o).getNormalMatrix(t),i=0,n=this.vertices.length;i<n;i++){this.vertices[i].applyMatrix4(t)}for(i=0,n=this.faces.length;i<n;i++){var r=this.faces[i];r.normal.applyMatrix3(e).normalize();for(var a=0,s=r.vertexNormals.length;a<s;a++)r.vertexNormals[a].applyMatrix3(e).normalize()}return null!==this.boundingBox&&this.computeBoundingBox(),null!==this.boundingSphere&&this.computeBoundingSphere(),this.verticesNeedUpdate=!0,this.normalsNeedUpdate=!0,this},rotateX:function(){var t=new n;return function(e){return t.makeRotationX(e),this.applyMatrix(t),this}}(),rotateY:function(){var t=new n;return function(e){return t.makeRotationY(e),this.applyMatrix(t),this}}(),rotateZ:function(){var t=new n;return function(e){return t.makeRotationZ(e),this.applyMatrix(t),this}}(),translate:function(){var t=new n;return function(e,i,n){return t.makeTranslation(e,i,n),this.applyMatrix(t),this}}(),scale:function(){var t=new n;return function(e,i,n){return t.makeScale(e,i,n),this.applyMatrix(t),this}}(),lookAt:function(){var t=new st;return function(e){t.lookAt(e),t.updateMatrix(),this.applyMatrix(t.matrix)}}(),fromBufferGeometry:function(t){function e(t,e,i,r){var a=new lt(t,e,i,void 0!==h?[p[t].clone(),p[e].clone(),p[i].clone()]:[],void 0!==c?[n.colors[t].clone(),n.colors[e].clone(),n.colors[i].clone()]:[],r);n.faces.push(a),void 0!==l&&n.faceVertexUvs[0].push([d[t].clone(),d[e].clone(),d[i].clone()]),void 0!==u&&n.faceVertexUvs[1].push([f[t].clone(),f[e].clone(),f[i].clone()])}var n=this,r=null!==t.index?t.index.array:void 0,o=t.attributes,s=o.position.array,h=void 0!==o.normal?o.normal.array:void 0,c=void 0!==o.color?o.color.array:void 0,l=void 0!==o.uv?o.uv.array:void 0,u=void 0!==o.uv2?o.uv2.array:void 0;void 0!==u&&(this.faceVertexUvs[1]=[]);for(var p=[],d=[],f=[],m=0,v=0;m<s.length;m+=3,v+=2)n.vertices.push(new a(s[m],s[m+1],s[m+2])),void 0!==h&&p.push(new a(h[m],h[m+1],h[m+2])),void 0!==c&&n.colors.push(new H(c[m],c[m+1],c[m+2])),void 0!==l&&d.push(new i(l[v],l[v+1])),void 0!==u&&f.push(new i(u[v],u[v+1]));var g=t.groups;if(g.length>0)for(m=0;m<g.length;m++)for(var y=g[m],x=y.start,_=(v=x,x+y.count);v<_;v+=3)void 0!==r?e(r[v],r[v+1],r[v+2],y.materialIndex):e(v,v+1,v+2,y.materialIndex);else if(void 0!==r)for(m=0;m<r.length;m+=3)e(r[m],r[m+1],r[m+2]);else for(m=0;m<s.length/3;m+=3)e(m,m+1,m+2);return this.computeFaceNormals(),null!==t.boundingBox&&(this.boundingBox=t.boundingBox.clone()),null!==t.boundingSphere&&(this.boundingSphere=t.boundingSphere.clone()),this},center:function(){this.computeBoundingBox();var t=this.boundingBox.getCenter().negate();return this.translate(t.x,t.y,t.z),t},normalize:function(){this.computeBoundingSphere();var t=this.boundingSphere.center,e=this.boundingSphere.radius,i=0===e?1:1/e,r=new n;return r.set(i,0,0,-i*t.x,0,i,0,-i*t.y,0,0,i,-i*t.z,0,0,0,1),this.applyMatrix(r),this},computeFaceNormals:function(){for(var t=new a,e=new a,i=0,n=this.faces.length;i<n;i++){var r=this.faces[i],o=this.vertices[r.a],s=this.vertices[r.b],h=this.vertices[r.c];t.subVectors(h,s),e.subVectors(o,s),t.cross(e),t.normalize(),r.normal.copy(t)}},computeVertexNormals:function(t){void 0===t&&(t=!0);var e,i,n,r,o,s;for(s=new Array(this.vertices.length),e=0,i=this.vertices.length;e<i;e++)s[e]=new a;if(t){var h,c,l,u=new a,p=new a;for(n=0,r=this.faces.length;n<r;n++)o=this.faces[n],h=this.vertices[o.a],c=this.vertices[o.b],l=this.vertices[o.c],u.subVectors(l,c),p.subVectors(h,c),u.cross(p),s[o.a].add(u),s[o.b].add(u),s[o.c].add(u)}else for(this.computeFaceNormals(),n=0,r=this.faces.length;n<r;n++)s[(o=this.faces[n]).a].add(o.normal),s[o.b].add(o.normal),s[o.c].add(o.normal);for(e=0,i=this.vertices.length;e<i;e++)s[e].normalize();for(n=0,r=this.faces.length;n<r;n++){var d=(o=this.faces[n]).vertexNormals;3===d.length?(d[0].copy(s[o.a]),d[1].copy(s[o.b]),d[2].copy(s[o.c])):(d[0]=s[o.a].clone(),d[1]=s[o.b].clone(),d[2]=s[o.c].clone())}this.faces.length>0&&(this.normalsNeedUpdate=!0)},computeFlatVertexNormals:function(){var t,e,i;for(this.computeFaceNormals(),t=0,e=this.faces.length;t<e;t++){var n=(i=this.faces[t]).vertexNormals;3===n.length?(n[0].copy(i.normal),n[1].copy(i.normal),n[2].copy(i.normal)):(n[0]=i.normal.clone(),n[1]=i.normal.clone(),n[2]=i.normal.clone())}this.faces.length>0&&(this.normalsNeedUpdate=!0)},computeMorphNormals:function(){var t,e,i,n,r;for(i=0,n=this.faces.length;i<n;i++)for((r=this.faces[i]).__originalFaceNormal?r.__originalFaceNormal.copy(r.normal):r.__originalFaceNormal=r.normal.clone(),r.__originalVertexNormals||(r.__originalVertexNormals=[]),t=0,e=r.vertexNormals.length;t<e;t++)r.__originalVertexNormals[t]?r.__originalVertexNormals[t].copy(r.vertexNormals[t]):r.__originalVertexNormals[t]=r.vertexNormals[t].clone();var o=new ut;for(o.faces=this.faces,t=0,e=this.morphTargets.length;t<e;t++){if(!this.morphNormals[t]){this.morphNormals[t]={},this.morphNormals[t].faceNormals=[],this.morphNormals[t].vertexNormals=[];var s=this.morphNormals[t].faceNormals,h=this.morphNormals[t].vertexNormals;for(i=0,n=this.faces.length;i<n;i++)l=new a,u={a:new a,b:new a,c:new a},s.push(l),h.push(u)}var c=this.morphNormals[t];o.vertices=this.morphTargets[t].vertices,o.computeFaceNormals(),o.computeVertexNormals();var l,u;for(i=0,n=this.faces.length;i<n;i++)r=this.faces[i],l=c.faceNormals[i],u=c.vertexNormals[i],l.copy(r.normal),u.a.copy(r.vertexNormals[0]),u.b.copy(r.vertexNormals[1]),u.c.copy(r.vertexNormals[2])}for(i=0,n=this.faces.length;i<n;i++)(r=this.faces[i]).normal=r.__originalFaceNormal,r.vertexNormals=r.__originalVertexNormals},computeLineDistances:function(){for(var t=0,e=this.vertices,i=0,n=e.length;i<n;i++)i>0&&(t+=e[i].distanceTo(e[i-1])),this.lineDistances[i]=t},computeBoundingBox:function(){null===this.boundingBox&&(this.boundingBox=new $),this.boundingBox.setFromPoints(this.vertices)},computeBoundingSphere:function(){null===this.boundingSphere&&(this.boundingSphere=new tt),this.boundingSphere.setFromPoints(this.vertices)},merge:function(t,e,i){if(t&&t.isGeometry){var n,r=this.vertices.length,a=this.vertices,s=t.vertices,h=this.faces,c=t.faces,l=this.faceVertexUvs[0],u=t.faceVertexUvs[0],p=this.colors,d=t.colors;void 0===i&&(i=0),void 0!==e&&(n=(new o).getNormalMatrix(e));for(var f=0,m=s.length;f<m;f++){var v=s[f].clone();void 0!==e&&v.applyMatrix4(e),a.push(v)}for(f=0,m=d.length;f<m;f++)p.push(d[f].clone());for(f=0,m=c.length;f<m;f++){var g,y,x,_=c[f],b=_.vertexNormals,M=_.vertexColors;(g=new lt(_.a+r,_.b+r,_.c+r)).normal.copy(_.normal),void 0!==n&&g.normal.applyMatrix3(n).normalize();for(var w=0,S=b.length;w<S;w++)y=b[w].clone(),void 0!==n&&y.applyMatrix3(n).normalize(),g.vertexNormals.push(y);g.color.copy(_.color);for(w=0,S=M.length;w<S;w++)x=M[w],g.vertexColors.push(x.clone());g.materialIndex=_.materialIndex+i,h.push(g)}for(f=0,m=u.length;f<m;f++){var T=u[f],A=[];if(void 0!==T){for(w=0,S=T.length;w<S;w++)A.push(T[w].clone());l.push(A)}}}},mergeMesh:function(t){t&&t.isMesh&&(t.matrixAutoUpdate&&t.updateMatrix(),this.merge(t.geometry,t.matrix))},mergeVertices:function(){var t,e,i,n,r,a,o,s,h={},c=[],l=[],u=Math.pow(10,4);for(i=0,n=this.vertices.length;i<n;i++)t=this.vertices[i],void 0===h[e=Math.round(t.x*u)+"_"+Math.round(t.y*u)+"_"+Math.round(t.z*u)]?(h[e]=i,c.push(this.vertices[i]),l[i]=c.length-1):l[i]=l[h[e]];var p=[];for(i=0,n=this.faces.length;i<n;i++){(r=this.faces[i]).a=l[r.a],r.b=l[r.b],r.c=l[r.c],a=[r.a,r.b,r.c];for(var d=0;d<3;d++)if(a[d]===a[(d+1)%3]){p.push(i);break}}for(i=p.length-1;i>=0;i--){var f=p[i];for(this.faces.splice(f,1),o=0,s=this.faceVertexUvs.length;o<s;o++)this.faceVertexUvs[o].splice(f,1)}var m=this.vertices.length-c.length;return this.vertices=c,m},setFromPoints:function(t){this.vertices=[];for(var e=0,i=t.length;e<i;e++){var n=t[e];this.vertices.push(new a(n.x,n.y,n.z||0))}return this},sortFacesByMaterialIndex:function(){for(var t=this.faces,e=t.length,i=0;i<e;i++)t[i]._id=i;t.sort(function(t,e){return t.materialIndex-e.materialIndex});var n,r,a=this.faceVertexUvs[0],o=this.faceVertexUvs[1];a&&a.length===e&&(n=[]),o&&o.length===e&&(r=[]);for(i=0;i<e;i++){var s=t[i]._id;n&&n.push(a[s]),r&&r.push(o[s])}n&&(this.faceVertexUvs[0]=n),r&&(this.faceVertexUvs[1]=r)},toJSON:function(){function t(t,e,i){return i?t|1<<e:t&~(1<<e)}function e(t){var e=t.x.toString()+t.y.toString()+t.z.toString();return void 0!==p[e]?p[e]:(p[e]=u.length/3,u.push(t.x,t.y,t.z),p[e])}function i(t){var e=t.r.toString()+t.g.toString()+t.b.toString();return void 0!==f[e]?f[e]:(f[e]=d.length,d.push(t.getHex()),f[e])}function n(t){var e=t.x.toString()+t.y.toString();return void 0!==v[e]?v[e]:(v[e]=m.length/2,m.push(t.x,t.y),v[e])}var r={metadata:{version:4.5,type:"Geometry",generator:"Geometry.toJSON"}};if(r.uuid=this.uuid,r.type=this.type,""!==this.name&&(r.name=this.name),void 0!==this.parameters){var a=this.parameters;for(var o in a)void 0!==a[o]&&(r[o]=a[o]);return r}for(var s=[],h=0;h<this.vertices.length;h++){var c=this.vertices[h];s.push(c.x,c.y,c.z)}var l=[],u=[],p={},d=[],f={},m=[],v={};for(h=0;h<this.faces.length;h++){var g=this.faces[h],y=void 0!==this.faceVertexUvs[0][h],x=g.normal.length()>0,_=g.vertexNormals.length>0,b=1!==g.color.r||1!==g.color.g||1!==g.color.b,M=g.vertexColors.length>0,w=0;if(w=t(w,0,0),w=t(w,1,!0),w=t(w,2,!1),w=t(w,3,y),w=t(w,4,x),w=t(w,5,_),w=t(w,6,b),w=t(w,7,M),l.push(w),l.push(g.a,g.b,g.c),l.push(g.materialIndex),y){var S=this.faceVertexUvs[0][h];l.push(n(S[0]),n(S[1]),n(S[2]))}if(x&&l.push(e(g.normal)),_){var T=g.vertexNormals;l.push(e(T[0]),e(T[1]),e(T[2]))}if(b&&l.push(i(g.color)),M){var A=g.vertexColors;l.push(i(A[0]),i(A[1]),i(A[2]))}}return r.data={},r.data.vertices=s,r.data.normals=u,d.length>0&&(r.data.colors=d),m.length>0&&(r.data.uvs=[m]),r.data.faces=l,r},clone:function(){return(new ut).copy(this)},copy:function(t){var e,i,n,r,a,o;this.vertices=[],this.colors=[],this.faces=[],this.faceVertexUvs=[[]],this.morphTargets=[],this.morphNormals=[],this.skinWeights=[],this.skinIndices=[],this.lineDistances=[],this.boundingBox=null,this.boundingSphere=null,this.name=t.name;var s=t.vertices;for(e=0,i=s.length;e<i;e++)this.vertices.push(s[e].clone());var h=t.colors;for(e=0,i=h.length;e<i;e++)this.colors.push(h[e].clone());var c=t.faces;for(e=0,i=c.length;e<i;e++)this.faces.push(c[e].clone());for(e=0,i=t.faceVertexUvs.length;e<i;e++){var l=t.faceVertexUvs[e];for(void 0===this.faceVertexUvs[e]&&(this.faceVertexUvs[e]=[]),n=0,r=l.length;n<r;n++){var u=l[n],p=[];for(a=0,o=u.length;a<o;a++){var d=u[a];p.push(d.clone())}this.faceVertexUvs[e].push(p)}}var f=t.morphTargets;for(e=0,i=f.length;e<i;e++){var m={};if(m.name=f[e].name,void 0!==f[e].vertices)for(m.vertices=[],n=0,r=f[e].vertices.length;n<r;n++)m.vertices.push(f[e].vertices[n].clone());if(void 0!==f[e].normals)for(m.normals=[],n=0,r=f[e].normals.length;n<r;n++)m.normals.push(f[e].normals[n].clone());this.morphTargets.push(m)}var v=t.morphNormals;for(e=0,i=v.length;e<i;e++){var g={};if(void 0!==v[e].vertexNormals)for(g.vertexNormals=[],n=0,r=v[e].vertexNormals.length;n<r;n++){var y=v[e].vertexNormals[n],x={};x.a=y.a.clone(),x.b=y.b.clone(),x.c=y.c.clone(),g.vertexNormals.push(x)}if(void 0!==v[e].faceNormals)for(g.faceNormals=[],n=0,r=v[e].faceNormals.length;n<r;n++)g.faceNormals.push(v[e].faceNormals[n].clone());this.morphNormals.push(g)}var _=t.skinWeights;for(e=0,i=_.length;e<i;e++)this.skinWeights.push(_[e].clone());var b=t.skinIndices;for(e=0,i=b.length;e<i;e++)this.skinIndices.push(b[e].clone());var M=t.lineDistances;for(e=0,i=M.length;e<i;e++)this.lineDistances.push(M[e]);var w=t.boundingBox;null!==w&&(this.boundingBox=w.clone());var S=t.boundingSphere;return null!==S&&(this.boundingSphere=S.clone()),this.elementsNeedUpdate=t.elementsNeedUpdate,this.verticesNeedUpdate=t.verticesNeedUpdate,this.uvsNeedUpdate=t.uvsNeedUpdate,this.normalsNeedUpdate=t.normalsNeedUpdate,this.colorsNeedUpdate=t.colorsNeedUpdate,this.lineDistancesNeedUpdate=t.lineDistancesNeedUpdate,this.groupsNeedUpdate=t.groupsNeedUpdate,this},dispose:function(){this.dispatchEvent({type:"dispose"})}}),Object.defineProperty(pt.prototype,"needsUpdate",{set:function(t){!0===t&&this.version++}}),Object.assign(pt.prototype,{isBufferAttribute:!0,setArray:function(t){if(Array.isArray(t))throw new TypeError("THREE.BufferAttribute: array should be a Typed Array.");this.count=void 0!==t?t.length/this.itemSize:0,this.array=t},setDynamic:function(t){return this.dynamic=t,this},copy:function(t){return this.array=new t.array.constructor(t.array),this.itemSize=t.itemSize,this.count=t.count,this.normalized=t.normalized,this.dynamic=t.dynamic,this},copyAt:function(t,e,i){t*=this.itemSize,i*=e.itemSize;for(var n=0,r=this.itemSize;n<r;n++)this.array[t+n]=e.array[i+n];return this},copyArray:function(t){return this.array.set(t),this},copyColorsArray:function(t){for(var e=this.array,i=0,n=0,r=t.length;n<r;n++){var a=t[n];void 0===a&&(a=new H),e[i++]=a.r,e[i++]=a.g,e[i++]=a.b}return this},copyIndicesArray:function(t){for(var e=this.array,i=0,n=0,r=t.length;n<r;n++){var a=t[n];e[i++]=a.a,e[i++]=a.b,e[i++]=a.c}return this},copyVector2sArray:function(t){for(var e=this.array,n=0,r=0,a=t.length;r<a;r++){var o=t[r];void 0===o&&(o=new i),e[n++]=o.x,e[n++]=o.y}return this},copyVector3sArray:function(t){for(var e=this.array,i=0,n=0,r=t.length;n<r;n++){var o=t[n];void 0===o&&(o=new a),e[i++]=o.x,e[i++]=o.y,e[i++]=o.z}return this},copyVector4sArray:function(t){for(var e=this.array,i=0,n=0,r=t.length;n<r;n++){var a=t[n];void 0===a&&(a=new h),e[i++]=a.x,e[i++]=a.y,e[i++]=a.z,e[i++]=a.w}return this},set:function(t,e){return void 0===e&&(e=0),this.array.set(t,e),this},getX:function(t){return this.array[t*this.itemSize]},setX:function(t,e){return this.array[t*this.itemSize]=e,this},getY:function(t){return this.array[t*this.itemSize+1]},setY:function(t,e){return this.array[t*this.itemSize+1]=e,this},getZ:function(t){return this.array[t*this.itemSize+2]},setZ:function(t,e){return this.array[t*this.itemSize+2]=e,this},getW:function(t){return this.array[t*this.itemSize+3]},setW:function(t,e){return this.array[t*this.itemSize+3]=e,this},setXY:function(t,e,i){return t*=this.itemSize,this.array[t+0]=e,this.array[t+1]=i,this},setXYZ:function(t,e,i,n){return t*=this.itemSize,this.array[t+0]=e,this.array[t+1]=i,this.array[t+2]=n,this},setXYZW:function(t,e,i,n,r){return t*=this.itemSize,this.array[t+0]=e,this.array[t+1]=i,this.array[t+2]=n,this.array[t+3]=r,this},onUpload:function(t){return this.onUploadCallback=t,this},clone:function(){return new this.constructor(this.array,this.itemSize).copy(this)}}),(dt.prototype=Object.create(pt.prototype)).constructor=dt,(ft.prototype=Object.create(pt.prototype)).constructor=ft,(mt.prototype=Object.create(pt.prototype)).constructor=mt,(vt.prototype=Object.create(pt.prototype)).constructor=vt,(gt.prototype=Object.create(pt.prototype)).constructor=gt,(yt.prototype=Object.create(pt.prototype)).constructor=yt,(xt.prototype=Object.create(pt.prototype)).constructor=xt,(_t.prototype=Object.create(pt.prototype)).constructor=_t,(bt.prototype=Object.create(pt.prototype)).constructor=bt,Object.assign(Mt.prototype,{computeGroups:function(t){for(var e,i=[],n=void 0,r=t.faces,a=0;a<r.length;a++){var o=r[a];o.materialIndex!==n&&(n=o.materialIndex,void 0!==e&&(e.count=3*a-e.start,i.push(e)),e={start:3*a,materialIndex:n})}void 0!==e&&(e.count=3*a-e.start,i.push(e)),this.groups=i},fromGeometry:function(t){var e,n=t.faces,r=t.vertices,a=t.faceVertexUvs,o=a[0]&&a[0].length>0,s=a[1]&&a[1].length>0,h=t.morphTargets,c=h.length;if(c>0){e=[];for(var l=0;l<c;l++)e[l]=[];this.morphTargets.position=e}var u,p=t.morphNormals,d=p.length;if(d>0){u=[];for(l=0;l<d;l++)u[l]=[];this.morphTargets.normal=u}var f=t.skinIndices,m=t.skinWeights,v=f.length===r.length,g=m.length===r.length;for(l=0;l<n.length;l++){var y=n[l];this.vertices.push(r[y.a],r[y.b],r[y.c]);var x=y.vertexNormals;if(3===x.length)this.normals.push(x[0],x[1],x[2]);else{var _=y.normal;this.normals.push(_,_,_)}var b=y.vertexColors;if(3===b.length)this.colors.push(b[0],b[1],b[2]);else{var M=y.color;this.colors.push(M,M,M)}if(!0===o){void 0!==(w=a[0][l])?this.uvs.push(w[0],w[1],w[2]):this.uvs.push(new i,new i,new i)}if(!0===s){var w;void 0!==(w=a[1][l])?this.uvs2.push(w[0],w[1],w[2]):this.uvs2.push(new i,new i,new i)}for(var S=0;S<c;S++){var T=h[S].vertices;e[S].push(T[y.a],T[y.b],T[y.c])}for(S=0;S<d;S++){var A=p[S].vertexNormals[l];u[S].push(A.a,A.b,A.c)}v&&this.skinIndices.push(f[y.a],f[y.b],f[y.c]),g&&this.skinWeights.push(m[y.a],m[y.b],m[y.c])}return this.computeGroups(t),this.verticesNeedUpdate=t.verticesNeedUpdate,this.normalsNeedUpdate=t.normalsNeedUpdate,this.colorsNeedUpdate=t.colorsNeedUpdate,this.uvsNeedUpdate=t.uvsNeedUpdate,this.groupsNeedUpdate=t.groupsNeedUpdate,this}});var Xo=1;St.prototype=Object.assign(Object.create(e.prototype),{constructor:St,isBufferGeometry:!0,getIndex:function(){return this.index},setIndex:function(t){Array.isArray(t)?this.index=new(wt(t)>65535?xt:gt)(t,1):this.index=t},addAttribute:function(t,e){if(e&&e.isBufferAttribute||e&&e.isInterleavedBufferAttribute){if("index"!==t)return this.attributes[t]=e,this;this.setIndex(e)}else this.addAttribute(t,new pt(arguments[1],arguments[2]))},getAttribute:function(t){return this.attributes[t]},removeAttribute:function(t){return delete this.attributes[t],this},addGroup:function(t,e,i){this.groups.push({start:t,count:e,materialIndex:void 0!==i?i:0})},clearGroups:function(){this.groups=[]},setDrawRange:function(t,e){this.drawRange.start=t,this.drawRange.count=e},applyMatrix:function(t){var e=this.attributes.position;void 0!==e&&(t.applyToBufferAttribute(e),e.needsUpdate=!0);var i=this.attributes.normal;if(void 0!==i){(new o).getNormalMatrix(t).applyToBufferAttribute(i),i.needsUpdate=!0}return null!==this.boundingBox&&this.computeBoundingBox(),null!==this.boundingSphere&&this.computeBoundingSphere(),this},rotateX:function(){var t=new n;return function(e){return t.makeRotationX(e),this.applyMatrix(t),this}}(),rotateY:function(){var t=new n;return function(e){return t.makeRotationY(e),this.applyMatrix(t),this}}(),rotateZ:function(){var t=new n;return function(e){return t.makeRotationZ(e),this.applyMatrix(t),this}}(),translate:function(){var t=new n;return function(e,i,n){return t.makeTranslation(e,i,n),this.applyMatrix(t),this}}(),scale:function(){var t=new n;return function(e,i,n){return t.makeScale(e,i,n),this.applyMatrix(t),this}}(),lookAt:function(){var t=new st;return function(e){t.lookAt(e),t.updateMatrix(),this.applyMatrix(t.matrix)}}(),center:function(){this.computeBoundingBox();var t=this.boundingBox.getCenter().negate();return this.translate(t.x,t.y,t.z),t},setFromObject:function(t){var e=t.geometry;if(t.isPoints||t.isLine){var i=new _t(3*e.vertices.length,3),n=new _t(3*e.colors.length,3);if(this.addAttribute("position",i.copyVector3sArray(e.vertices)),this.addAttribute("color",n.copyColorsArray(e.colors)),e.lineDistances&&e.lineDistances.length===e.vertices.length){var r=new _t(e.lineDistances.length,1);this.addAttribute("lineDistance",r.copyArray(e.lineDistances))}null!==e.boundingSphere&&(this.boundingSphere=e.boundingSphere.clone()),null!==e.boundingBox&&(this.boundingBox=e.boundingBox.clone())}else t.isMesh&&e&&e.isGeometry&&this.fromGeometry(e);return this},setFromPoints:function(t){for(var e=[],i=0,n=t.length;i<n;i++){var r=t[i];e.push(r.x,r.y,r.z||0)}return this.addAttribute("position",new _t(e,3)),this},updateFromObject:function(t){var e=t.geometry;if(t.isMesh){var i=e.__directGeometry;if(!0===e.elementsNeedUpdate&&(i=void 0,e.elementsNeedUpdate=!1),void 0===i)return this.fromGeometry(e);i.verticesNeedUpdate=e.verticesNeedUpdate,i.normalsNeedUpdate=e.normalsNeedUpdate,i.colorsNeedUpdate=e.colorsNeedUpdate,i.uvsNeedUpdate=e.uvsNeedUpdate,i.groupsNeedUpdate=e.groupsNeedUpdate,e.verticesNeedUpdate=!1,e.normalsNeedUpdate=!1,e.colorsNeedUpdate=!1,e.uvsNeedUpdate=!1,e.groupsNeedUpdate=!1,e=i}var n;return!0===e.verticesNeedUpdate&&(void 0!==(n=this.attributes.position)&&(n.copyVector3sArray(e.vertices),n.needsUpdate=!0),e.verticesNeedUpdate=!1),!0===e.normalsNeedUpdate&&(void 0!==(n=this.attributes.normal)&&(n.copyVector3sArray(e.normals),n.needsUpdate=!0),e.normalsNeedUpdate=!1),!0===e.colorsNeedUpdate&&(void 0!==(n=this.attributes.color)&&(n.copyColorsArray(e.colors),n.needsUpdate=!0),e.colorsNeedUpdate=!1),e.uvsNeedUpdate&&(void 0!==(n=this.attributes.uv)&&(n.copyVector2sArray(e.uvs),n.needsUpdate=!0),e.uvsNeedUpdate=!1),e.lineDistancesNeedUpdate&&(void 0!==(n=this.attributes.lineDistance)&&(n.copyArray(e.lineDistances),n.needsUpdate=!0),e.lineDistancesNeedUpdate=!1),e.groupsNeedUpdate&&(e.computeGroups(t.geometry),this.groups=e.groups,e.groupsNeedUpdate=!1),this},fromGeometry:function(t){return t.__directGeometry=(new Mt).fromGeometry(t),this.fromDirectGeometry(t.__directGeometry)},fromDirectGeometry:function(t){var e=new Float32Array(3*t.vertices.length);if(this.addAttribute("position",new pt(e,3).copyVector3sArray(t.vertices)),t.normals.length>0){var i=new Float32Array(3*t.normals.length);this.addAttribute("normal",new pt(i,3).copyVector3sArray(t.normals))}if(t.colors.length>0){var n=new Float32Array(3*t.colors.length);this.addAttribute("color",new pt(n,3).copyColorsArray(t.colors))}if(t.uvs.length>0){var r=new Float32Array(2*t.uvs.length);this.addAttribute("uv",new pt(r,2).copyVector2sArray(t.uvs))}if(t.uvs2.length>0){var a=new Float32Array(2*t.uvs2.length);this.addAttribute("uv2",new pt(a,2).copyVector2sArray(t.uvs2))}if(t.indices.length>0){var o=new(wt(t.indices)>65535?Uint32Array:Uint16Array)(3*t.indices.length);this.setIndex(new pt(o,1).copyIndicesArray(t.indices))}this.groups=t.groups;for(var s in t.morphTargets){for(var h=[],c=t.morphTargets[s],l=0,u=c.length;l<u;l++){var p=c[l],d=new _t(3*p.length,3);h.push(d.copyVector3sArray(p))}this.morphAttributes[s]=h}if(t.skinIndices.length>0){var f=new _t(4*t.skinIndices.length,4);this.addAttribute("skinIndex",f.copyVector4sArray(t.skinIndices))}if(t.skinWeights.length>0){var m=new _t(4*t.skinWeights.length,4);this.addAttribute("skinWeight",m.copyVector4sArray(t.skinWeights))}return null!==t.boundingSphere&&(this.boundingSphere=t.boundingSphere.clone()),null!==t.boundingBox&&(this.boundingBox=t.boundingBox.clone()),this},computeBoundingBox:function(){null===this.boundingBox&&(this.boundingBox=new $);var t=this.attributes.position;void 0!==t?this.boundingBox.setFromBufferAttribute(t):this.boundingBox.makeEmpty(),isNaN(this.boundingBox.min.x)||isNaN(this.boundingBox.min.y)||isNaN(this.boundingBox.min.z)},computeBoundingSphere:function(){var t=new $,e=new a;return function(){null===this.boundingSphere&&(this.boundingSphere=new tt);var i=this.attributes.position;if(i){var n=this.boundingSphere.center;t.setFromBufferAttribute(i),t.getCenter(n);for(var r=0,a=0,o=i.count;a<o;a++)e.x=i.getX(a),e.y=i.getY(a),e.z=i.getZ(a),r=Math.max(r,n.distanceToSquared(e));this.boundingSphere.radius=Math.sqrt(r),isNaN(this.boundingSphere.radius)}}}(),computeFaceNormals:function(){},computeVertexNormals:function(){var t=this.index,e=this.attributes,i=this.groups;if(e.position){var n=e.position.array;if(void 0===e.normal)this.addAttribute("normal",new pt(new Float32Array(n.length),3));else for(var r=e.normal.array,o=0,s=r.length;o<s;o++)r[o]=0;var h,c,l,u=e.normal.array,p=new a,d=new a,f=new a,m=new a,v=new a;if(t){var g=t.array;0===i.length&&this.addGroup(0,g.length);for(var y=0,x=i.length;y<x;++y){var _=i[y],b=_.start;for(o=b,s=b+_.count;o<s;o+=3)h=3*g[o+0],c=3*g[o+1],l=3*g[o+2],p.fromArray(n,h),d.fromArray(n,c),f.fromArray(n,l),m.subVectors(f,d),v.subVectors(p,d),m.cross(v),u[h]+=m.x,u[h+1]+=m.y,u[h+2]+=m.z,u[c]+=m.x,u[c+1]+=m.y,u[c+2]+=m.z,u[l]+=m.x,u[l+1]+=m.y,u[l+2]+=m.z}}else for(o=0,s=n.length;o<s;o+=9)p.fromArray(n,o),d.fromArray(n,o+3),f.fromArray(n,o+6),m.subVectors(f,d),v.subVectors(p,d),m.cross(v),u[o]=m.x,u[o+1]=m.y,u[o+2]=m.z,u[o+3]=m.x,u[o+4]=m.y,u[o+5]=m.z,u[o+6]=m.x,u[o+7]=m.y,u[o+8]=m.z;this.normalizeNormals(),e.normal.needsUpdate=!0}},merge:function(t,e){if(t&&t.isBufferGeometry){void 0===e&&(e=0);var i=this.attributes;for(var n in i)if(void 0!==t.attributes[n])for(var r=i[n].array,a=t.attributes[n],o=a.array,s=0,h=a.itemSize*e;s<o.length;s++,h++)r[h]=o[s];return this}},normalizeNormals:function(){var t=new a;return function(){for(var e=this.attributes.normal,i=0,n=e.count;i<n;i++)t.x=e.getX(i),t.y=e.getY(i),t.z=e.getZ(i),t.normalize(),e.setXYZ(i,t.x,t.y,t.z)}}(),toNonIndexed:function(){if(null===this.index)return this;var t=new St,e=this.index.array,i=this.attributes;for(var n in i){for(var r=i[n],a=r.array,o=r.itemSize,s=new a.constructor(e.length*o),h=0,c=0,l=0,u=e.length;l<u;l++){h=e[l]*o;for(var p=0;p<o;p++)s[c++]=a[h++]}t.addAttribute(n,new pt(s,o))}return t},toJSON:function(){var t={metadata:{version:4.5,type:"BufferGeometry",generator:"BufferGeometry.toJSON"}};if(t.uuid=this.uuid,t.type=this.type,""!==this.name&&(t.name=this.name),void 0!==this.parameters){var e=this.parameters;for(var i in e)void 0!==e[i]&&(t[i]=e[i]);return t}t.data={attributes:{}};var n=this.index;if(null!==n){var r=Array.prototype.slice.call(n.array);t.data.index={type:n.array.constructor.name,array:r}}var a=this.attributes;for(var i in a){var o=a[i];r=Array.prototype.slice.call(o.array);t.data.attributes[i]={itemSize:o.itemSize,type:o.array.constructor.name,array:r,normalized:o.normalized}}var s=this.groups;s.length>0&&(t.data.groups=JSON.parse(JSON.stringify(s)));var h=this.boundingSphere;return null!==h&&(t.data.boundingSphere={center:h.center.toArray(),radius:h.radius}),t},clone:function(){return(new St).copy(this)},copy:function(t){var e,i,n;this.index=null,this.attributes={},this.morphAttributes={},this.groups=[],this.boundingBox=null,this.boundingSphere=null,this.name=t.name;var r=t.index;null!==r&&this.setIndex(r.clone());var a=t.attributes;for(e in a){var o=a[e];this.addAttribute(e,o.clone())}var s=t.morphAttributes;for(e in s){var h=[],c=s[e];for(i=0,n=c.length;i<n;i++)h.push(c[i].clone());this.morphAttributes[e]=h}var l=t.groups;for(i=0,n=l.length;i<n;i++){var u=l[i];this.addGroup(u.start,u.count,u.materialIndex)}var p=t.boundingBox;null!==p&&(this.boundingBox=p.clone());var d=t.boundingSphere;return null!==d&&(this.boundingSphere=d.clone()),this.drawRange.start=t.drawRange.start,this.drawRange.count=t.drawRange.count,this},dispose:function(){this.dispatchEvent({type:"dispose"})}}),(Tt.prototype=Object.create(ut.prototype)).constructor=Tt,(At.prototype=Object.create(St.prototype)).constructor=At,(Et.prototype=Object.create(ut.prototype)).constructor=Et,(Lt.prototype=Object.create(St.prototype)).constructor=Lt,(Pt.prototype=Object.create(J.prototype)).constructor=Pt,Pt.prototype.isMeshBasicMaterial=!0,Pt.prototype.copy=function(t){return J.prototype.copy.call(this,t),this.color.copy(t.color),this.map=t.map,this.lightMap=t.lightMap,this.lightMapIntensity=t.lightMapIntensity,this.aoMap=t.aoMap,this.aoMapIntensity=t.aoMapIntensity,this.specularMap=t.specularMap,this.alphaMap=t.alphaMap,this.envMap=t.envMap,this.combine=t.combine,this.reflectivity=t.reflectivity,this.refractionRatio=t.refractionRatio,this.wireframe=t.wireframe,this.wireframeLinewidth=t.wireframeLinewidth,this.wireframeLinecap=t.wireframeLinecap,this.wireframeLinejoin=t.wireframeLinejoin,this.skinning=t.skinning,this.morphTargets=t.morphTargets,this},(Ct.prototype=Object.create(J.prototype)).constructor=Ct,Ct.prototype.isShaderMaterial=!0,Ct.prototype.copy=function(t){return J.prototype.copy.call(this,t),this.fragmentShader=t.fragmentShader,this.vertexShader=t.vertexShader,this.uniforms=Go.clone(t.uniforms),this.defines=t.defines,this.wireframe=t.wireframe,this.wireframeLinewidth=t.wireframeLinewidth,this.lights=t.lights,this.clipping=t.clipping,this.skinning=t.skinning,this.morphTargets=t.morphTargets,this.morphNormals=t.morphNormals,this.extensions=t.extensions,this},Ct.prototype.toJSON=function(t){var e=J.prototype.toJSON.call(this,t);return e.uniforms=this.uniforms,e.vertexShader=this.vertexShader,e.fragmentShader=this.fragmentShader,e},Object.assign(It.prototype,{set:function(t,e){return this.origin.copy(t),this.direction.copy(e),this},clone:function(){return(new this.constructor).copy(this)},copy:function(t){return this.origin.copy(t.origin),this.direction.copy(t.direction),this},at:function(t,e){return(e||new a).copy(this.direction).multiplyScalar(t).add(this.origin)},lookAt:function(t){return this.direction.copy(t).sub(this.origin).normalize(),this},recast:function(){var t=new a;return function(e){return this.origin.copy(this.at(e,t)),this}}(),closestPointToPoint:function(t,e){var i=e||new a;i.subVectors(t,this.origin);var n=i.dot(this.direction);return n<0?i.copy(this.origin):i.copy(this.direction).multiplyScalar(n).add(this.origin)},distanceToPoint:function(t){return Math.sqrt(this.distanceSqToPoint(t))},distanceSqToPoint:function(){var t=new a;return function(e){var i=t.subVectors(e,this.origin).dot(this.direction);return i<0?this.origin.distanceToSquared(e):(t.copy(this.direction).multiplyScalar(i).add(this.origin),t.distanceToSquared(e))}}(),distanceSqToSegment:function(){var t=new a,e=new a,i=new a;return function(n,r,a,o){t.copy(n).add(r).multiplyScalar(.5),e.copy(r).sub(n).normalize(),i.copy(this.origin).sub(t);var s,h,c,l,u=.5*n.distanceTo(r),p=-this.direction.dot(e),d=i.dot(this.direction),f=-i.dot(e),m=i.lengthSq(),v=Math.abs(1-p*p);if(v>0)if(s=p*f-d,h=p*d-f,l=u*v,s>=0)if(h>=-l)if(h<=l){var g=1/v;c=(s*=g)*(s+p*(h*=g)+2*d)+h*(p*s+h+2*f)+m}else h=u,c=-(s=Math.max(0,-(p*h+d)))*s+h*(h+2*f)+m;else h=-u,c=-(s=Math.max(0,-(p*h+d)))*s+h*(h+2*f)+m;else h<=-l?c=-(s=Math.max(0,-(-p*u+d)))*s+(h=s>0?-u:Math.min(Math.max(-u,-f),u))*(h+2*f)+m:h<=l?(s=0,c=(h=Math.min(Math.max(-u,-f),u))*(h+2*f)+m):c=-(s=Math.max(0,-(p*u+d)))*s+(h=s>0?u:Math.min(Math.max(-u,-f),u))*(h+2*f)+m;else h=p>0?-u:u,c=-(s=Math.max(0,-(p*h+d)))*s+h*(h+2*f)+m;return a&&a.copy(this.direction).multiplyScalar(s).add(this.origin),o&&o.copy(e).multiplyScalar(h).add(t),c}}(),intersectSphere:function(){var t=new a;return function(e,i){t.subVectors(e.center,this.origin);var n=t.dot(this.direction),r=t.dot(t)-n*n,a=e.radius*e.radius;if(r>a)return null;var o=Math.sqrt(a-r),s=n-o,h=n+o;return s<0&&h<0?null:s<0?this.at(h,i):this.at(s,i)}}(),intersectsSphere:function(t){return this.distanceToPoint(t.center)<=t.radius},distanceToPlane:function(t){var e=t.normal.dot(this.direction);if(0===e)return 0===t.distanceToPoint(this.origin)?0:null;var i=-(this.origin.dot(t.normal)+t.constant)/e;return i>=0?i:null},intersectPlane:function(t,e){var i=this.distanceToPlane(t);return null===i?null:this.at(i,e)},intersectsPlane:function(t){var e=t.distanceToPoint(this.origin);if(0===e)return!0;return t.normal.dot(this.direction)*e<0},intersectBox:function(t,e){var i,n,r,a,o,s,h=1/this.direction.x,c=1/this.direction.y,l=1/this.direction.z,u=this.origin;return h>=0?(i=(t.min.x-u.x)*h,n=(t.max.x-u.x)*h):(i=(t.max.x-u.x)*h,n=(t.min.x-u.x)*h),c>=0?(r=(t.min.y-u.y)*c,a=(t.max.y-u.y)*c):(r=(t.max.y-u.y)*c,a=(t.min.y-u.y)*c),i>a||r>n?null:((r>i||i!=i)&&(i=r),(a<n||n!=n)&&(n=a),l>=0?(o=(t.min.z-u.z)*l,s=(t.max.z-u.z)*l):(o=(t.max.z-u.z)*l,s=(t.min.z-u.z)*l),i>s||o>n?null:((o>i||i!=i)&&(i=o),(s<n||n!=n)&&(n=s),n<0?null:this.at(i>=0?i:n,e)))},intersectsBox:function(){var t=new a;return function(e){return null!==this.intersectBox(e,t)}}(),intersectTriangle:function(){var t=new a,e=new a,i=new a,n=new a;return function(r,a,o,s,h){e.subVectors(a,r),i.subVectors(o,r),n.crossVectors(e,i);var c,l=this.direction.dot(n);if(l>0){if(s)return null;c=1}else{if(!(l<0))return null;c=-1,l=-l}t.subVectors(this.origin,r);var u=c*this.direction.dot(i.crossVectors(t,i));if(u<0)return null;var p=c*this.direction.dot(e.cross(t));if(p<0)return null;if(u+p>l)return null;var d=-c*t.dot(n);return d<0?null:this.at(d/l,h)}}(),applyMatrix4:function(t){return this.origin.applyMatrix4(t),this.direction.transformDirection(t),this},equals:function(t){return t.origin.equals(this.origin)&&t.direction.equals(this.direction)}}),Object.assign(Rt.prototype,{set:function(t,e){return this.start.copy(t),this.end.copy(e),this},clone:function(){return(new this.constructor).copy(this)},copy:function(t){return this.start.copy(t.start),this.end.copy(t.end),this},getCenter:function(t){return(t||new a).addVectors(this.start,this.end).multiplyScalar(.5)},delta:function(t){return(t||new a).subVectors(this.end,this.start)},distanceSq:function(){return this.start.distanceToSquared(this.end)},distance:function(){return this.start.distanceTo(this.end)},at:function(t,e){var i=e||new a;return this.delta(i).multiplyScalar(t).add(this.start)},closestPointToPointParameter:function(){var t=new a,e=new a;return function(i,n){t.subVectors(i,this.start),e.subVectors(this.end,this.start);var r=e.dot(e),a=e.dot(t)/r;return n&&(a=Po.clamp(a,0,1)),a}}(),closestPointToPoint:function(t,e,i){var n=this.closestPointToPointParameter(t,e),r=i||new a;return this.delta(r).multiplyScalar(n).add(this.start)},applyMatrix4:function(t){return this.start.applyMatrix4(t),this.end.applyMatrix4(t),this},equals:function(t){return t.start.equals(this.start)&&t.end.equals(this.end)}}),Object.assign(Nt,{normal:function(){var t=new a;return function(e,i,n,r){var o=r||new a;o.subVectors(n,i),t.subVectors(e,i),o.cross(t);var s=o.lengthSq();return s>0?o.multiplyScalar(1/Math.sqrt(s)):o.set(0,0,0)}}(),barycoordFromPoint:function(){var t=new a,e=new a,i=new a;return function(n,r,o,s,h){t.subVectors(s,r),e.subVectors(o,r),i.subVectors(n,r);var c=t.dot(t),l=t.dot(e),u=t.dot(i),p=e.dot(e),d=e.dot(i),f=c*p-l*l,m=h||new a;if(0===f)return m.set(-2,-1,-1);var v=1/f,g=(p*u-l*d)*v,y=(c*d-l*u)*v;return m.set(1-g-y,y,g)}}(),containsPoint:function(){var t=new a;return function(e,i,n,r){var a=Nt.barycoordFromPoint(e,i,n,r,t);return a.x>=0&&a.y>=0&&a.x+a.y<=1}}()}),Object.assign(Nt.prototype,{set:function(t,e,i){return this.a.copy(t),this.b.copy(e),this.c.copy(i),this},setFromPointsAndIndices:function(t,e,i,n){return this.a.copy(t[e]),this.b.copy(t[i]),this.c.copy(t[n]),this},clone:function(){return(new this.constructor).copy(this)},copy:function(t){return this.a.copy(t.a),this.b.copy(t.b),this.c.copy(t.c),this},area:function(){var t=new a,e=new a;return function(){return t.subVectors(this.c,this.b),e.subVectors(this.a,this.b),.5*t.cross(e).length()}}(),midpoint:function(t){return(t||new a).addVectors(this.a,this.b).add(this.c).multiplyScalar(1/3)},normal:function(t){return Nt.normal(this.a,this.b,this.c,t)},plane:function(t){return(t||new et).setFromCoplanarPoints(this.a,this.b,this.c)},barycoordFromPoint:function(t,e){return Nt.barycoordFromPoint(t,this.a,this.b,this.c,e)},containsPoint:function(t){return Nt.containsPoint(t,this.a,this.b,this.c)},closestPointToPoint:function(){var t=new et,e=[new Rt,new Rt,new Rt],i=new a,n=new a;return function(r,o){var s=o||new a,h=1/0;if(t.setFromCoplanarPoints(this.a,this.b,this.c),t.projectPoint(r,i),!0===this.containsPoint(i))s.copy(i);else{e[0].set(this.a,this.b),e[1].set(this.b,this.c),e[2].set(this.c,this.a);for(var c=0;c<e.length;c++){e[c].closestPointToPoint(i,!0,n);var l=i.distanceToSquared(n);l<h&&(h=l,s.copy(n))}}return s}}(),equals:function(t){return t.a.equals(this.a)&&t.b.equals(this.b)&&t.c.equals(this.c)}}),Ot.prototype=Object.assign(Object.create(st.prototype),{constructor:Ot,isMesh:!0,setDrawMode:function(t){this.drawMode=t},copy:function(t){return st.prototype.copy.call(this,t),this.drawMode=t.drawMode,void 0!==t.morphTargetInfluences&&(this.morphTargetInfluences=t.morphTargetInfluences.slice()),void 0!==t.morphTargetDictionary&&(this.morphTargetDictionary=Object.assign({},t.morphTargetDictionary)),this},updateMorphTargets:function(){var t,e,i,n=this.geometry;if(n.isBufferGeometry){var r=n.morphAttributes,a=Object.keys(r);if(a.length>0){var o=r[a[0]];if(void 0!==o)for(this.morphTargetInfluences=[],this.morphTargetDictionary={},t=0,e=o.length;t<e;t++)i=o[t].name||String(t),this.morphTargetInfluences.push(0),this.morphTargetDictionary[i]=t}}else{var s=n.morphTargets;if(void 0!==s&&s.length>0)for(this.morphTargetInfluences=[],this.morphTargetDictionary={},t=0,e=s.length;t<e;t++)i=s[t].name||String(t),this.morphTargetInfluences.push(0),this.morphTargetDictionary[i]=t}},raycast:function(){function t(t,e,i,n,r,a,o){return Nt.barycoordFromPoint(t,e,i,n,y),r.multiplyScalar(y.x),a.multiplyScalar(y.y),o.multiplyScalar(y.z),r.add(a).add(o),r.clone()}function e(t,e,i,n,r,a,o,s){if(null===(e.side===Or?n.intersectTriangle(o,a,r,!0,s):n.intersectTriangle(r,a,o,e.side!==Dr,s)))return null;_.copy(s),_.applyMatrix4(t.matrixWorld);var h=i.ray.origin.distanceTo(_);return h<i.near||h>i.far?null:{distance:h,point:_.clone(),object:t}}function r(i,n,r,a,o,s,h,p){c.fromBufferAttribute(a,s),l.fromBufferAttribute(a,h),u.fromBufferAttribute(a,p);var d=e(i,i.material,n,r,c,l,u,x);return d&&(o&&(m.fromBufferAttribute(o,s),v.fromBufferAttribute(o,h),g.fromBufferAttribute(o,p),d.uv=t(x,c,l,u,m,v,g)),d.face=new lt(s,h,p,Nt.normal(c,l,u)),d.faceIndex=s),d}var o=new n,s=new It,h=new tt,c=new a,l=new a,u=new a,p=new a,d=new a,f=new a,m=new i,v=new i,g=new i,y=new a,x=new a,_=new a;return function(i,n){var a=this.geometry,y=this.material,_=this.matrixWorld;if(void 0!==y&&(null===a.boundingSphere&&a.computeBoundingSphere(),h.copy(a.boundingSphere),h.applyMatrix4(_),!1!==i.ray.intersectsSphere(h)&&(o.getInverse(_),s.copy(i.ray).applyMatrix4(o),null===a.boundingBox||!1!==s.intersectsBox(a.boundingBox)))){var b;if(a.isBufferGeometry){var M,w,S,T,A,E=a.index,L=a.attributes.position,P=a.attributes.uv;if(null!==E)for(T=0,A=E.count;T<A;T+=3)M=E.getX(T),w=E.getX(T+1),S=E.getX(T+2),(b=r(this,i,s,L,P,M,w,S))&&(b.faceIndex=Math.floor(T/3),n.push(b));else if(void 0!==L)for(T=0,A=L.count;T<A;T+=3)(b=r(this,i,s,L,P,M=T,w=T+1,S=T+2))&&(b.index=M,n.push(b))}else if(a.isGeometry){var C,I,R,N,O=Array.isArray(y),D=a.vertices,U=a.faces,F=a.faceVertexUvs[0];F.length>0&&(N=F);for(var z=0,B=U.length;z<B;z++){var G=U[z],V=O?y[G.materialIndex]:y;if(void 0!==V){if(C=D[G.a],I=D[G.b],R=D[G.c],!0===V.morphTargets){var k=a.morphTargets,j=this.morphTargetInfluences;c.set(0,0,0),l.set(0,0,0),u.set(0,0,0);for(var W=0,H=k.length;W<H;W++){var X=j[W];if(0!==X){var q=k[W].vertices;c.addScaledVector(p.subVectors(q[G.a],C),X),l.addScaledVector(d.subVectors(q[G.b],I),X),u.addScaledVector(f.subVectors(q[G.c],R),X)}}c.add(C),l.add(I),u.add(R),C=c,I=l,R=u}if(b=e(this,V,i,s,C,I,R,x)){if(N&&N[z]){var Y=N[z];m.copy(Y[0]),v.copy(Y[1]),g.copy(Y[2]),b.uv=t(x,C,I,R,m,v,g)}b.face=G,b.faceIndex=z,n.push(b)}}}}}}}(),clone:function(){return new this.constructor(this.geometry,this.material).copy(this)}});var qo=0;Jt.prototype=Object.assign(Object.create(ht.prototype),{constructor:Jt,isPerspectiveCamera:!0,copy:function(t,e){return ht.prototype.copy.call(this,t,e),this.fov=t.fov,this.zoom=t.zoom,this.near=t.near,this.far=t.far,this.focus=t.focus,this.aspect=t.aspect,this.view=null===t.view?null:Object.assign({},t.view),this.filmGauge=t.filmGauge,this.filmOffset=t.filmOffset,this},setFocalLength:function(t){var e=.5*this.getFilmHeight()/t;this.fov=2*Po.RAD2DEG*Math.atan(e),this.updateProjectionMatrix()},getFocalLength:function(){var t=Math.tan(.5*Po.DEG2RAD*this.fov);return.5*this.getFilmHeight()/t},getEffectiveFOV:function(){return 2*Po.RAD2DEG*Math.atan(Math.tan(.5*Po.DEG2RAD*this.fov)/this.zoom)},getFilmWidth:function(){return this.filmGauge*Math.min(this.aspect,1)},getFilmHeight:function(){return this.filmGauge/Math.max(this.aspect,1)},setViewOffset:function(t,e,i,n,r,a){this.aspect=t/e,null===this.view&&(this.view={enabled:!0,fullWidth:1,fullHeight:1,offsetX:0,offsetY:0,width:1,height:1}),this.view.enabled=!0,this.view.fullWidth=t,this.view.fullHeight=e,this.view.offsetX=i,this.view.offsetY=n,this.view.width=r,this.view.height=a,this.updateProjectionMatrix()},clearViewOffset:function(){null!==this.view&&(this.view.enabled=!1),this.updateProjectionMatrix()},updateProjectionMatrix:function(){var t=this.near,e=t*Math.tan(.5*Po.DEG2RAD*this.fov)/this.zoom,i=2*e,n=this.aspect*i,r=-.5*n,a=this.view;if(null!==this.view&&this.view.enabled){var o=a.fullWidth,s=a.fullHeight;r+=a.offsetX*n/o,e-=a.offsetY*i/s,n*=a.width/o,i*=a.height/s}var h=this.filmOffset;0!==h&&(r+=t*h/this.getFilmWidth()),this.projectionMatrix.makePerspective(r,r+n,e,e-i,t,this.far)},toJSON:function(t){var e=st.prototype.toJSON.call(this,t);return e.object.fov=this.fov,e.object.zoom=this.zoom,e.object.near=this.near,e.object.far=this.far,e.object.focus=this.focus,e.object.aspect=this.aspect,null!==this.view&&(e.object.view=Object.assign({},this.view)),e.object.filmGauge=this.filmGauge,e.object.filmOffset=this.filmOffset,e}}),Qt.prototype=Object.assign(Object.create(Jt.prototype),{constructor:Qt,isArrayCamera:!0}),ee.prototype.isFogExp2=!0,ee.prototype.clone=function(){return new ee(this.color.getHex(),this.density)},ee.prototype.toJSON=function(){return{type:"FogExp2",color:this.color.getHex(),density:this.density}},ie.prototype.isFog=!0,ie.prototype.clone=function(){return new ie(this.color.getHex(),this.near,this.far)},ie.prototype.toJSON=function(){return{type:"Fog",color:this.color.getHex(),near:this.near,far:this.far}},ne.prototype=Object.assign(Object.create(st.prototype),{constructor:ne,copy:function(t,e){return st.prototype.copy.call(this,t,e),null!==t.background&&(this.background=t.background.clone()),null!==t.fog&&(this.fog=t.fog.clone()),null!==t.overrideMaterial&&(this.overrideMaterial=t.overrideMaterial.clone()),this.autoUpdate=t.autoUpdate,this.matrixAutoUpdate=t.matrixAutoUpdate,this},toJSON:function(t){var e=st.prototype.toJSON.call(this,t);return null!==this.background&&(e.object.background=this.background.toJSON(t)),null!==this.fog&&(e.object.fog=this.fog.toJSON()),e}}),re.prototype=Object.assign(Object.create(st.prototype),{constructor:re,isLensFlare:!0,copy:function(t){st.prototype.copy.call(this,t),this.positionScreen.copy(t.positionScreen),this.customUpdateCallback=t.customUpdateCallback;for(var e=0,i=t.lensFlares.length;e<i;e++)this.lensFlares.push(t.lensFlares[e]);return this},add:function(t,e,i,n,r,a){void 0===e&&(e=-1),void 0===i&&(i=0),void 0===a&&(a=1),void 0===r&&(r=new H(16777215)),void 0===n&&(n=Gr),i=Math.min(i,Math.max(0,i)),this.lensFlares.push({texture:t,size:e,distance:i,x:0,y:0,z:0,scale:1,rotation:0,opacity:a,color:r,blending:n})},updateLensFlares:function(){var t,e,i=this.lensFlares.length,n=2*-this.positionScreen.x,r=2*-this.positionScreen.y;for(t=0;t<i;t++)(e=this.lensFlares[t]).x=this.positionScreen.x+n*e.distance,e.y=this.positionScreen.y+r*e.distance,e.wantedRotation=e.x*Math.PI*.25,e.rotation+=.25*(e.wantedRotation-e.rotation)}}),(ae.prototype=Object.create(J.prototype)).constructor=ae,ae.prototype.isSpriteMaterial=!0,ae.prototype.copy=function(t){return J.prototype.copy.call(this,t),this.color.copy(t.color),this.map=t.map,this.rotation=t.rotation,this},oe.prototype=Object.assign(Object.create(st.prototype),{constructor:oe,isSprite:!0,raycast:function(){var t=new a,e=new a,i=new a;return function(n,r){e.setFromMatrixPosition(this.matrixWorld),n.ray.closestPointToPoint(e,t),i.setFromMatrixScale(this.matrixWorld);var a=i.x*i.y/4;if(!(e.distanceToSquared(t)>a)){var o=n.ray.origin.distanceTo(t);o<n.near||o>n.far||r.push({distance:o,point:t.clone(),face:null,object:this})}}}(),clone:function(){return new this.constructor(this.material).copy(this)}}),se.prototype=Object.assign(Object.create(st.prototype),{constructor:se,copy:function(t){st.prototype.copy.call(this,t,!1);for(var e=t.levels,i=0,n=e.length;i<n;i++){var r=e[i];this.addLevel(r.object.clone(),r.distance)}return this},addLevel:function(t,e){void 0===e&&(e=0),e=Math.abs(e);for(var i=this.levels,n=0;n<i.length&&!(e<i[n].distance);n++);i.splice(n,0,{distance:e,object:t}),this.add(t)},getObjectForDistance:function(t){for(var e=this.levels,i=1,n=e.length;i<n&&!(t<e[i].distance);i++);return e[i-1].object},raycast:function(){var t=new a;return function(e,i){t.setFromMatrixPosition(this.matrixWorld);var n=e.ray.origin.distanceTo(t);this.getObjectForDistance(n).raycast(e,i)}}(),update:function(){var t=new a,e=new a;return function(i){var n=this.levels;if(n.length>1){t.setFromMatrixPosition(i.matrixWorld),e.setFromMatrixPosition(this.matrixWorld);var r=t.distanceTo(e);n[0].object.visible=!0;for(var a=1,o=n.length;a<o&&r>=n[a].distance;a++)n[a-1].object.visible=!1,n[a].object.visible=!0;for(;a<o;a++)n[a].object.visible=!1}}}(),toJSON:function(t){var e=st.prototype.toJSON.call(this,t);e.object.levels=[];for(var i=this.levels,n=0,r=i.length;n<r;n++){var a=i[n];e.object.levels.push({object:a.object.uuid,distance:a.distance})}return e}}),Object.assign(he.prototype,{calculateInverses:function(){this.boneInverses=[];for(var t=0,e=this.bones.length;t<e;t++){var i=new n;this.bones[t]&&i.getInverse(this.bones[t].matrixWorld),this.boneInverses.push(i)}},pose:function(){var t,e,i;for(e=0,i=this.bones.length;e<i;e++)(t=this.bones[e])&&t.matrixWorld.getInverse(this.boneInverses[e]);for(e=0,i=this.bones.length;e<i;e++)(t=this.bones[e])&&(t.parent&&t.parent.isBone?(t.matrix.getInverse(t.parent.matrixWorld),t.matrix.multiply(t.matrixWorld)):t.matrix.copy(t.matrixWorld),t.matrix.decompose(t.position,t.quaternion,t.scale))},update:function(){var t=new n,e=new n;return function(){for(var i=this.bones,n=this.boneInverses,r=this.boneMatrices,a=this.boneTexture,o=0,s=i.length;o<s;o++){var h=i[o]?i[o].matrixWorld:e;t.multiplyMatrices(h,n[o]),t.toArray(r,16*o)}void 0!==a&&(a.needsUpdate=!0)}}(),clone:function(){return new he(this.bones,this.boneInverses)}}),ce.prototype=Object.assign(Object.create(st.prototype),{constructor:ce,isBone:!0}),le.prototype=Object.assign(Object.create(Ot.prototype),{constructor:le,isSkinnedMesh:!0,initBones:function(){var t,e,i,n,r=[];if(this.geometry&&void 0!==this.geometry.bones){for(i=0,n=this.geometry.bones.length;i<n;i++)e=this.geometry.bones[i],t=new ce,r.push(t),t.name=e.name,t.position.fromArray(e.pos),t.quaternion.fromArray(e.rotq),void 0!==e.scl&&t.scale.fromArray(e.scl);for(i=0,n=this.geometry.bones.length;i<n;i++)-1!==(e=this.geometry.bones[i]).parent&&null!==e.parent&&void 0!==r[e.parent]?r[e.parent].add(r[i]):this.add(r[i])}return this.updateMatrixWorld(!0),r},bind:function(t,e){this.skeleton=t,void 0===e&&(this.updateMatrixWorld(!0),this.skeleton.calculateInverses(),e=this.matrixWorld),this.bindMatrix.copy(e),this.bindMatrixInverse.getInverse(e)},pose:function(){this.skeleton.pose()},normalizeSkinWeights:function(){var t,e;if(this.geometry&&this.geometry.isGeometry)for(e=0;e<this.geometry.skinWeights.length;e++){var i=this.geometry.skinWeights[e];(t=1/i.manhattanLength())!==1/0?i.multiplyScalar(t):i.set(1,0,0,0)}else if(this.geometry&&this.geometry.isBufferGeometry){var n=new h,r=this.geometry.attributes.skinWeight;for(e=0;e<r.count;e++)n.x=r.getX(e),n.y=r.getY(e),n.z=r.getZ(e),n.w=r.getW(e),(t=1/n.manhattanLength())!==1/0?n.multiplyScalar(t):n.set(1,0,0,0),r.setXYZW(e,n.x,n.y,n.z,n.w)}},updateMatrixWorld:function(t){Ot.prototype.updateMatrixWorld.call(this,t),"attached"===this.bindMode?this.bindMatrixInverse.getInverse(this.matrixWorld):"detached"===this.bindMode&&this.bindMatrixInverse.getInverse(this.bindMatrix)},clone:function(){return new this.constructor(this.geometry,this.material).copy(this)}}),(ue.prototype=Object.create(J.prototype)).constructor=ue,ue.prototype.isLineBasicMaterial=!0,ue.prototype.copy=function(t){return J.prototype.copy.call(this,t),this.color.copy(t.color),this.linewidth=t.linewidth,this.linecap=t.linecap,this.linejoin=t.linejoin,this},pe.prototype=Object.assign(Object.create(st.prototype),{constructor:pe,isLine:!0,raycast:function(){var t=new n,e=new It,i=new tt;return function(n,r){var o=n.linePrecision,s=o*o,h=this.geometry,c=this.matrixWorld;if(null===h.boundingSphere&&h.computeBoundingSphere(),i.copy(h.boundingSphere),i.applyMatrix4(c),!1!==n.ray.intersectsSphere(i)){t.getInverse(c),e.copy(n.ray).applyMatrix4(t);var l=new a,u=new a,p=new a,d=new a,f=this&&this.isLineSegments?2:1;if(h.isBufferGeometry){var m=h.index,v=h.attributes.position.array;if(null!==m)for(var g=m.array,y=0,x=g.length-1;y<x;y+=f){var _=g[y],b=g[y+1];l.fromArray(v,3*_),u.fromArray(v,3*b);if(!(e.distanceSqToSegment(l,u,d,p)>s)){d.applyMatrix4(this.matrixWorld);(S=n.ray.origin.distanceTo(d))<n.near||S>n.far||r.push({distance:S,point:p.clone().applyMatrix4(this.matrixWorld),index:y,face:null,faceIndex:null,object:this})}}else for(y=0,x=v.length/3-1;y<x;y+=f){l.fromArray(v,3*y),u.fromArray(v,3*y+3);if(!(e.distanceSqToSegment(l,u,d,p)>s)){d.applyMatrix4(this.matrixWorld);(S=n.ray.origin.distanceTo(d))<n.near||S>n.far||r.push({distance:S,point:p.clone().applyMatrix4(this.matrixWorld),index:y,face:null,faceIndex:null,object:this})}}}else if(h.isGeometry){var M=h.vertices,w=M.length;for(y=0;y<w-1;y+=f){if(!(e.distanceSqToSegment(M[y],M[y+1],d,p)>s)){d.applyMatrix4(this.matrixWorld);var S;(S=n.ray.origin.distanceTo(d))<n.near||S>n.far||r.push({distance:S,point:p.clone().applyMatrix4(this.matrixWorld),index:y,face:null,faceIndex:null,object:this})}}}}}}(),clone:function(){return new this.constructor(this.geometry,this.material).copy(this)}}),de.prototype=Object.assign(Object.create(pe.prototype),{constructor:de,isLineSegments:!0}),fe.prototype=Object.assign(Object.create(pe.prototype),{constructor:fe,isLineLoop:!0}),(me.prototype=Object.create(J.prototype)).constructor=me,me.prototype.isPointsMaterial=!0,me.prototype.copy=function(t){return J.prototype.copy.call(this,t),this.color.copy(t.color),this.map=t.map,this.size=t.size,this.sizeAttenuation=t.sizeAttenuation,this},ve.prototype=Object.assign(Object.create(st.prototype),{constructor:ve,isPoints:!0,raycast:function(){var t=new n,e=new It,i=new tt;return function(n,r){function o(t,i){var a=e.distanceSqToPoint(t);if(a<p){var o=e.closestPointToPoint(t);o.applyMatrix4(c);var h=n.ray.origin.distanceTo(o);if(h<n.near||h>n.far)return;r.push({distance:h,distanceToRay:Math.sqrt(a),point:o.clone(),index:i,face:null,object:s})}}var s=this,h=this.geometry,c=this.matrixWorld,l=n.params.Points.threshold;if(null===h.boundingSphere&&h.computeBoundingSphere(),i.copy(h.boundingSphere),i.applyMatrix4(c),i.radius+=l,!1!==n.ray.intersectsSphere(i)){t.getInverse(c),e.copy(n.ray).applyMatrix4(t);var u=l/((this.scale.x+this.scale.y+this.scale.z)/3),p=u*u,d=new a;if(h.isBufferGeometry){var f=h.index,m=h.attributes.position.array;if(null!==f)for(var v=f.array,g=0,y=v.length;g<y;g++){var x=v[g];d.fromArray(m,3*x),o(d,x)}else{g=0;for(var _=m.length/3;g<_;g++)d.fromArray(m,3*g),o(d,g)}}else{var b=h.vertices;for(g=0,_=b.length;g<_;g++)o(b[g],g)}}}}(),clone:function(){return new this.constructor(this.geometry,this.material).copy(this)}}),ge.prototype=Object.assign(Object.create(st.prototype),{constructor:ge,isGroup:!0}),ye.prototype=Object.assign(Object.create(s.prototype),{constructor:ye,isVideoTexture:!0,update:function(){var t=this.image;t.readyState>=t.HAVE_CURRENT_DATA&&(this.needsUpdate=!0)}}),(xe.prototype=Object.create(s.prototype)).constructor=xe,xe.prototype.isCompressedTexture=!0,(_e.prototype=Object.create(s.prototype)).constructor=_e,_e.prototype.isDepthTexture=!0,(be.prototype=Object.create(St.prototype)).constructor=be,(Me.prototype=Object.create(ut.prototype)).constructor=Me,(we.prototype=Object.create(St.prototype)).constructor=we,(Se.prototype=Object.create(ut.prototype)).constructor=Se,(Te.prototype=Object.create(St.prototype)).constructor=Te,(Ae.prototype=Object.create(ut.prototype)).constructor=Ae,(Ee.prototype=Object.create(Te.prototype)).constructor=Ee,(Le.prototype=Object.create(ut.prototype)).constructor=Le,(Pe.prototype=Object.create(Te.prototype)).constructor=Pe,(Ce.prototype=Object.create(ut.prototype)).constructor=Ce,(Ie.prototype=Object.create(Te.prototype)).constructor=Ie,(Re.prototype=Object.create(ut.prototype)).constructor=Re,(Ne.prototype=Object.create(Te.prototype)).constructor=Ne,(Oe.prototype=Object.create(ut.prototype)).constructor=Oe,(De.prototype=Object.create(St.prototype)).constructor=De,(Ue.prototype=Object.create(ut.prototype)).constructor=Ue,(Fe.prototype=Object.create(St.prototype)).constructor=Fe,(ze.prototype=Object.create(ut.prototype)).constructor=ze,(Be.prototype=Object.create(St.prototype)).constructor=Be;var Yo=function(t,e,i){i=i||2;var n=e&&e.length,r=n?e[0]*i:t.length,a=Ge(t,0,r,i,!0),o=[];if(!a)return o;var s,h,c,l,u,p,d;if(n&&(a=je(t,e,a,i)),t.length>80*i){s=c=t[0],h=l=t[1];for(var f=i;f<r;f+=i)u=t[f],p=t[f+1],u<s&&(s=u),p<h&&(h=p),u>c&&(c=u),p>l&&(l=p);d=0!==(d=Math.max(c-s,l-h))?1/d:0}return ke(a,o,i,s,h,d),o},Zo={area:function(t){for(var e=t.length,i=0,n=e-1,r=0;r<e;n=r++)i+=t[n].x*t[r].y-t[r].x*t[n].y;return.5*i},isClockWise:function(t){return Zo.area(t)<0},triangulateShape:function(t,e){function i(t){var e=t.length;e>2&&t[e-1].equals(t[0])&&t.pop()}function n(t,e){for(var i=0;i<e.length;i++)t.push(e[i].x),t.push(e[i].y)}var r=[],a=[],o=[];i(t),n(r,t);var s=t.length;for(e.forEach(i),c=0;c<e.length;c++)a.push(s),s+=e[c].length,n(r,e[c]);for(var h=Yo(r,a),c=0;c<h.length;c+=3)o.push(h.slice(c,c+3));return o}};(ei.prototype=Object.create(ut.prototype)).constructor=ei,(ii.prototype=Object.create(St.prototype)).constructor=ii,ii.prototype.getArrays=function(){var t=this.getAttribute("position"),e=t?Array.prototype.slice.call(t.array):[],i=this.getAttribute("uv"),n=i?Array.prototype.slice.call(i.array):[],r=this.index;return{position:e,uv:n,index:r?Array.prototype.slice.call(r.array):[]}},ii.prototype.addShapeList=function(t,e){var i=t.length;e.arrays=this.getArrays();for(var n=0;n<i;n++){var r=t[n];this.addShape(r,e)}this.setIndex(e.arrays.index),this.addAttribute("position",new _t(e.arrays.position,3)),this.addAttribute("uv",new _t(e.arrays.uv,2))},ii.prototype.addShape=function(t,e){function n(t,e,i){return e.clone().multiplyScalar(i).add(t)}function r(t,e,n){var r,a,o,s=t.x-e.x,h=t.y-e.y,c=n.x-t.x,l=n.y-t.y,u=s*s+h*h,p=s*l-h*c;if(Math.abs(p)>Number.EPSILON){var d=Math.sqrt(u),f=Math.sqrt(c*c+l*l),m=e.x-h/d,v=e.y+s/d,g=((n.x-l/f-m)*l-(n.y+c/f-v)*c)/(s*l-h*c),y=(r=m+s*g-t.x)*r+(a=v+h*g-t.y)*a;if(y<=2)return new i(r,a);o=Math.sqrt(y/2)}else{var x=!1;s>Number.EPSILON?c>Number.EPSILON&&(x=!0):s<-Number.EPSILON?c<-Number.EPSILON&&(x=!0):Math.sign(h)===Math.sign(l)&&(x=!0),x?(r=-h,a=s,o=Math.sqrt(u)):(r=s,a=h,o=Math.sqrt(u/2))}return new i(r/o,a/o)}function o(t,e){var i,n;for(Z=t.length;--Z>=0;){i=Z,(n=Z-1)<0&&(n=t.length-1);var r=0,a=E+2*S;for(r=0;r<a;r++){var o=X*r,s=X*(r+1);!function(t,e,i,n){c(t),c(e),c(n),c(e),c(i),c(n);var r=g.length/3,a=C.generateSideWallUV(O,g,r-6,r-3,r-2,r-1);l(a[0]),l(a[1]),l(a[3]),l(a[1]),l(a[2]),l(a[3])}(e+i+o,e+n+o,e+n+s,e+i+s)}}}function s(t,e,i){_.push(t),_.push(e),_.push(i)}function h(t,e,i){c(t),c(e),c(i);var n=g.length/3,r=C.generateTopUV(O,g,n-3,n-2,n-1);l(r[0]),l(r[1]),l(r[2])}function c(t){y.push(g.length/3),g.push(_[3*t+0]),g.push(_[3*t+1]),g.push(_[3*t+2])}function l(t){x.push(t.x),x.push(t.y)}var u,p,d,f,m,v=e.arrays?e.arrays:this.getArrays(),g=v.position,y=v.index,x=v.uv,_=[],b=void 0!==e.amount?e.amount:100,M=void 0!==e.bevelThickness?e.bevelThickness:6,w=void 0!==e.bevelSize?e.bevelSize:M-2,S=void 0!==e.bevelSegments?e.bevelSegments:3,T=void 0===e.bevelEnabled||e.bevelEnabled,A=void 0!==e.curveSegments?e.curveSegments:12,E=void 0!==e.steps?e.steps:1,L=e.extrudePath,P=!1,C=void 0!==e.UVGenerator?e.UVGenerator:ei.WorldUVGenerator;L&&(u=L.getSpacedPoints(E),P=!0,T=!1,p=void 0!==e.frames?e.frames:L.computeFrenetFrames(E,!1),d=new a,f=new a,m=new a),T||(S=0,M=0,w=0);var I,R,N,O=this,D=t.extractPoints(A),U=D.shape,F=D.holes;if(!Zo.isClockWise(U))for(U=U.reverse(),R=0,N=F.length;R<N;R++)I=F[R],Zo.isClockWise(I)&&(F[R]=I.reverse());var z=Zo.triangulateShape(U,F),B=U;for(R=0,N=F.length;R<N;R++)I=F[R],U=U.concat(I);for(var G,V,k,j,W,H,X=U.length,q=z.length,Y=[],Z=0,J=B.length,Q=J-1,K=Z+1;Z<J;Z++,Q++,K++)Q===J&&(Q=0),K===J&&(K=0),Y[Z]=r(B[Z],B[Q],B[K]);var $,tt=[],et=Y.concat();for(R=0,N=F.length;R<N;R++){for(I=F[R],$=[],Z=0,Q=(J=I.length)-1,K=Z+1;Z<J;Z++,Q++,K++)Q===J&&(Q=0),K===J&&(K=0),$[Z]=r(I[Z],I[Q],I[K]);tt.push($),et=et.concat($)}for(G=0;G<S;G++){for(k=G/S,j=M*Math.cos(k*Math.PI/2),V=w*Math.sin(k*Math.PI/2),Z=0,J=B.length;Z<J;Z++)s((W=n(B[Z],Y[Z],V)).x,W.y,-j);for(R=0,N=F.length;R<N;R++)for(I=F[R],$=tt[R],Z=0,J=I.length;Z<J;Z++)s((W=n(I[Z],$[Z],V)).x,W.y,-j)}for(V=w,Z=0;Z<X;Z++)W=T?n(U[Z],et[Z],V):U[Z],P?(f.copy(p.normals[0]).multiplyScalar(W.x),d.copy(p.binormals[0]).multiplyScalar(W.y),m.copy(u[0]).add(f).add(d),s(m.x,m.y,m.z)):s(W.x,W.y,0);var it;for(it=1;it<=E;it++)for(Z=0;Z<X;Z++)W=T?n(U[Z],et[Z],V):U[Z],P?(f.copy(p.normals[it]).multiplyScalar(W.x),d.copy(p.binormals[it]).multiplyScalar(W.y),m.copy(u[it]).add(f).add(d),s(m.x,m.y,m.z)):s(W.x,W.y,b/E*it);for(G=S-1;G>=0;G--){for(k=G/S,j=M*Math.cos(k*Math.PI/2),V=w*Math.sin(k*Math.PI/2),Z=0,J=B.length;Z<J;Z++)s((W=n(B[Z],Y[Z],V)).x,W.y,b+j);for(R=0,N=F.length;R<N;R++)for(I=F[R],$=tt[R],Z=0,J=I.length;Z<J;Z++)W=n(I[Z],$[Z],V),P?s(W.x,W.y+u[E-1].y,u[E-1].x+j):s(W.x,W.y,b+j)}!function(){var t=g.length/3;if(T){var i=0,n=X*i;for(Z=0;Z<q;Z++)h((H=z[Z])[2]+n,H[1]+n,H[0]+n);for(n=X*(i=E+2*S),Z=0;Z<q;Z++)h((H=z[Z])[0]+n,H[1]+n,H[2]+n)}else{for(Z=0;Z<q;Z++)h((H=z[Z])[2],H[1],H[0]);for(Z=0;Z<q;Z++)h((H=z[Z])[0]+X*E,H[1]+X*E,H[2]+X*E)}O.addGroup(t,g.length/3-t,void 0!==e.material?e.material:0)}(),function(){var t=g.length/3,i=0;for(o(B,i),i+=B.length,R=0,N=F.length;R<N;R++)o(I=F[R],i),i+=I.length;O.addGroup(t,g.length/3-t,void 0!==e.extrudeMaterial?e.extrudeMaterial:1)}(),e.arrays||(this.setIndex(y),this.addAttribute("position",new _t(g,3)),this.addAttribute("uv",new _t(x,2)))},ei.WorldUVGenerator={generateTopUV:function(t,e,n,r,a){var o=e[3*n],s=e[3*n+1],h=e[3*r],c=e[3*r+1],l=e[3*a],u=e[3*a+1];return[new i(o,s),new i(h,c),new i(l,u)]},generateSideWallUV:function(t,e,n,r,a,o){var s=e[3*n],h=e[3*n+1],c=e[3*n+2],l=e[3*r],u=e[3*r+1],p=e[3*r+2],d=e[3*a],f=e[3*a+1],m=e[3*a+2],v=e[3*o],g=e[3*o+1],y=e[3*o+2];return Math.abs(h-u)<.01?[new i(s,1-c),new i(l,1-p),new i(d,1-m),new i(v,1-y)]:[new i(h,1-c),new i(u,1-p),new i(f,1-m),new i(g,1-y)]}},(ni.prototype=Object.create(ut.prototype)).constructor=ni,(ri.prototype=Object.create(ii.prototype)).constructor=ri,(ai.prototype=Object.create(ut.prototype)).constructor=ai,(oi.prototype=Object.create(St.prototype)).constructor=oi,(si.prototype=Object.create(ut.prototype)).constructor=si,(hi.prototype=Object.create(St.prototype)).constructor=hi,(ci.prototype=Object.create(ut.prototype)).constructor=ci,(li.prototype=Object.create(St.prototype)).constructor=li,(ui.prototype=Object.create(ut.prototype)).constructor=ui,ui.prototype.toJSON=function(){var t=ut.prototype.toJSON.call(this);return di(this.parameters.shapes,t)},(pi.prototype=Object.create(St.prototype)).constructor=pi,pi.prototype.toJSON=function(){var t=St.prototype.toJSON.call(this);return di(this.parameters.shapes,t)},(fi.prototype=Object.create(St.prototype)).constructor=fi,(mi.prototype=Object.create(ut.prototype)).constructor=mi,(vi.prototype=Object.create(St.prototype)).constructor=vi,(gi.prototype=Object.create(mi.prototype)).constructor=gi,(yi.prototype=Object.create(vi.prototype)).constructor=yi,(xi.prototype=Object.create(ut.prototype)).constructor=xi,(_i.prototype=Object.create(St.prototype)).constructor=_i;var Jo=Object.freeze({WireframeGeometry:be,ParametricGeometry:Me,ParametricBufferGeometry:we,TetrahedronGeometry:Ae,TetrahedronBufferGeometry:Ee,OctahedronGeometry:Le,OctahedronBufferGeometry:Pe,IcosahedronGeometry:Ce,IcosahedronBufferGeometry:Ie,DodecahedronGeometry:Re,DodecahedronBufferGeometry:Ne,PolyhedronGeometry:Se,PolyhedronBufferGeometry:Te,TubeGeometry:Oe,TubeBufferGeometry:De,TorusKnotGeometry:Ue,TorusKnotBufferGeometry:Fe,TorusGeometry:ze,TorusBufferGeometry:Be,TextGeometry:ni,TextBufferGeometry:ri,SphereGeometry:ai,SphereBufferGeometry:oi,RingGeometry:si,RingBufferGeometry:hi,PlaneGeometry:Et,PlaneBufferGeometry:Lt,LatheGeometry:ci,LatheBufferGeometry:li,ShapeGeometry:ui,ShapeBufferGeometry:pi,ExtrudeGeometry:ei,ExtrudeBufferGeometry:ii,EdgesGeometry:fi,ConeGeometry:gi,ConeBufferGeometry:yi,CylinderGeometry:mi,CylinderBufferGeometry:vi,CircleGeometry:xi,CircleBufferGeometry:_i,BoxGeometry:Tt,BoxBufferGeometry:At});(bi.prototype=Object.create(J.prototype)).constructor=bi,bi.prototype.isShadowMaterial=!0,(Mi.prototype=Object.create(Ct.prototype)).constructor=Mi,Mi.prototype.isRawShaderMaterial=!0,(wi.prototype=Object.create(J.prototype)).constructor=wi,wi.prototype.isMeshStandardMaterial=!0,wi.prototype.copy=function(t){return J.prototype.copy.call(this,t),this.defines={STANDARD:""},this.color.copy(t.color),this.roughness=t.roughness,this.metalness=t.metalness,this.map=t.map,this.lightMap=t.lightMap,this.lightMapIntensity=t.lightMapIntensity,this.aoMap=t.aoMap,this.aoMapIntensity=t.aoMapIntensity,this.emissive.copy(t.emissive),this.emissiveMap=t.emissiveMap,this.emissiveIntensity=t.emissiveIntensity,this.bumpMap=t.bumpMap,this.bumpScale=t.bumpScale,this.normalMap=t.normalMap,this.normalScale.copy(t.normalScale),this.displacementMap=t.displacementMap,this.displacementScale=t.displacementScale,this.displacementBias=t.displacementBias,this.roughnessMap=t.roughnessMap,this.metalnessMap=t.metalnessMap,this.alphaMap=t.alphaMap,this.envMap=t.envMap,this.envMapIntensity=t.envMapIntensity,this.refractionRatio=t.refractionRatio,this.wireframe=t.wireframe,this.wireframeLinewidth=t.wireframeLinewidth,this.wireframeLinecap=t.wireframeLinecap,this.wireframeLinejoin=t.wireframeLinejoin,this.skinning=t.skinning,this.morphTargets=t.morphTargets,this.morphNormals=t.morphNormals,this},(Si.prototype=Object.create(wi.prototype)).constructor=Si,Si.prototype.isMeshPhysicalMaterial=!0,Si.prototype.copy=function(t){return wi.prototype.copy.call(this,t),this.defines={PHYSICAL:""},this.reflectivity=t.reflectivity,this.clearCoat=t.clearCoat,this.clearCoatRoughness=t.clearCoatRoughness,this},(Ti.prototype=Object.create(J.prototype)).constructor=Ti,Ti.prototype.isMeshPhongMaterial=!0,Ti.prototype.copy=function(t){return J.prototype.copy.call(this,t),this.color.copy(t.color),this.specular.copy(t.specular),this.shininess=t.shininess,this.map=t.map,this.lightMap=t.lightMap,this.lightMapIntensity=t.lightMapIntensity,this.aoMap=t.aoMap,this.aoMapIntensity=t.aoMapIntensity,this.emissive.copy(t.emissive),this.emissiveMap=t.emissiveMap,this.emissiveIntensity=t.emissiveIntensity,this.bumpMap=t.bumpMap,this.bumpScale=t.bumpScale,this.normalMap=t.normalMap,this.normalScale.copy(t.normalScale),this.displacementMap=t.displacementMap,this.displacementScale=t.displacementScale,this.displacementBias=t.displacementBias,this.specularMap=t.specularMap,this.alphaMap=t.alphaMap,this.envMap=t.envMap,this.combine=t.combine,this.reflectivity=t.reflectivity,this.refractionRatio=t.refractionRatio,this.wireframe=t.wireframe,this.wireframeLinewidth=t.wireframeLinewidth,this.wireframeLinecap=t.wireframeLinecap,this.wireframeLinejoin=t.wireframeLinejoin,this.skinning=t.skinning,this.morphTargets=t.morphTargets,this.morphNormals=t.morphNormals,this},(Ai.prototype=Object.create(Ti.prototype)).constructor=Ai,Ai.prototype.isMeshToonMaterial=!0,Ai.prototype.copy=function(t){return Ti.prototype.copy.call(this,t),this.gradientMap=t.gradientMap,this},(Ei.prototype=Object.create(J.prototype)).constructor=Ei,Ei.prototype.isMeshNormalMaterial=!0,Ei.prototype.copy=function(t){return J.prototype.copy.call(this,t),this.bumpMap=t.bumpMap,this.bumpScale=t.bumpScale,this.normalMap=t.normalMap,this.normalScale.copy(t.normalScale),this.displacementMap=t.displacementMap,this.displacementScale=t.displacementScale,this.displacementBias=t.displacementBias,this.wireframe=t.wireframe,this.wireframeLinewidth=t.wireframeLinewidth,this.skinning=t.skinning,this.morphTargets=t.morphTargets,this.morphNormals=t.morphNormals,this},(Li.prototype=Object.create(J.prototype)).constructor=Li,Li.prototype.isMeshLambertMaterial=!0,Li.prototype.copy=function(t){return J.prototype.copy.call(this,t),this.color.copy(t.color),this.map=t.map,this.lightMap=t.lightMap,this.lightMapIntensity=t.lightMapIntensity,this.aoMap=t.aoMap,this.aoMapIntensity=t.aoMapIntensity,this.emissive.copy(t.emissive),this.emissiveMap=t.emissiveMap,this.emissiveIntensity=t.emissiveIntensity,this.specularMap=t.specularMap,this.alphaMap=t.alphaMap,this.envMap=t.envMap,this.combine=t.combine,this.reflectivity=t.reflectivity,this.refractionRatio=t.refractionRatio,this.wireframe=t.wireframe,this.wireframeLinewidth=t.wireframeLinewidth,this.wireframeLinecap=t.wireframeLinecap,this.wireframeLinejoin=t.wireframeLinejoin,this.skinning=t.skinning,this.morphTargets=t.morphTargets,this.morphNormals=t.morphNormals,this},(Pi.prototype=Object.create(ue.prototype)).constructor=Pi,Pi.prototype.isLineDashedMaterial=!0,Pi.prototype.copy=function(t){return ue.prototype.copy.call(this,t),this.scale=t.scale,this.dashSize=t.dashSize,this.gapSize=t.gapSize,this};var Qo=Object.freeze({ShadowMaterial:bi,SpriteMaterial:ae,RawShaderMaterial:Mi,ShaderMaterial:Ct,PointsMaterial:me,MeshPhysicalMaterial:Si,MeshStandardMaterial:wi,MeshPhongMaterial:Ti,MeshToonMaterial:Ai,MeshNormalMaterial:Ei,MeshLambertMaterial:Li,MeshDepthMaterial:Q,MeshDistanceMaterial:K,MeshBasicMaterial:Pt,LineDashedMaterial:Pi,LineBasicMaterial:ue,Material:J}),Ko={enabled:!1,files:{},add:function(t,e){!1!==this.enabled&&(this.files[t]=e)},get:function(t){if(!1!==this.enabled)return this.files[t]},remove:function(t){delete this.files[t]},clear:function(){this.files={}}},$o=new Ci,ts={};Object.assign(Ii.prototype,{load:function(t,e,i,n){void 0===t&&(t=""),void 0!==this.path&&(t=this.path+t),t=this.manager.resolveURL(t);var r=this,a=Ko.get(t);if(void 0!==a)return r.manager.itemStart(t),setTimeout(function(){e&&e(a),r.manager.itemEnd(t)},0),a;if(void 0===ts[t]){var o=t.match(/^data:(.*?)(;base64)?,(.*)$/);if(o){var s=o[1],h=!!o[2],c=o[3];c=window.decodeURIComponent(c),h&&(c=window.atob(c));try{var l,u=(this.responseType||"").toLowerCase();switch(u){case"arraybuffer":case"blob":for(var p=new Uint8Array(c.length),d=0;d<c.length;d++)p[d]=c.charCodeAt(d);l="blob"===u?new Blob([p.buffer],{type:s}):p.buffer;break;case"document":var f=new DOMParser;l=f.parseFromString(c,s);break;case"json":l=JSON.parse(c);break;default:l=c}window.setTimeout(function(){e&&e(l),r.manager.itemEnd(t)},0)}catch(e){window.setTimeout(function(){n&&n(e),r.manager.itemEnd(t),r.manager.itemError(t)},0)}}else{ts[t]=[],ts[t].push({onLoad:e,onProgress:i,onError:n});var m=new XMLHttpRequest;m.open("GET",t,!0),m.addEventListener("load",function(e){var i=this.response;Ko.add(t,i);var n=ts[t];if(delete ts[t],200===this.status){for(var a=0,o=n.length;a<o;a++){(s=n[a]).onLoad&&s.onLoad(i)}r.manager.itemEnd(t)}else if(0===this.status){for(a=0,o=n.length;a<o;a++){(s=n[a]).onLoad&&s.onLoad(i)}r.manager.itemEnd(t)}else{for(a=0,o=n.length;a<o;a++){var s;(s=n[a]).onError&&s.onError(e)}r.manager.itemEnd(t),r.manager.itemError(t)}},!1),m.addEventListener("progress",function(e){for(var i=ts[t],n=0,r=i.length;n<r;n++){var a=i[n];a.onProgress&&a.onProgress(e)}},!1),m.addEventListener("error",function(e){var i=ts[t];delete ts[t];for(var n=0,a=i.length;n<a;n++){var o=i[n];o.onError&&o.onError(e)}r.manager.itemEnd(t),r.manager.itemError(t)},!1),void 0!==this.responseType&&(m.responseType=this.responseType),void 0!==this.withCredentials&&(m.withCredentials=this.withCredentials),m.overrideMimeType&&m.overrideMimeType(void 0!==this.mimeType?this.mimeType:"text/plain");for(var v in this.requestHeader)m.setRequestHeader(v,this.requestHeader[v]);m.send(null)}return r.manager.itemStart(t),m}ts[t].push({onLoad:e,onProgress:i,onError:n})},setPath:function(t){return this.path=t,this},setResponseType:function(t){return this.responseType=t,this},setWithCredentials:function(t){return this.withCredentials=t,this},setMimeType:function(t){return this.mimeType=t,this},setRequestHeader:function(t){return this.requestHeader=t,this}}),Object.assign(Ri.prototype,{load:function(t,e,i,n){function r(r){h.load(t[r],function(t){var i=a._parser(t,!0);o[r]={width:i.width,height:i.height,format:i.format,mipmaps:i.mipmaps},6===(c+=1)&&(1===i.mipmapCount&&(s.minFilter=Ua),s.format=i.format,s.needsUpdate=!0,e&&e(s))},i,n)}var a=this,o=[],s=new xe;s.image=o;var h=new Ii(this.manager);if(h.setPath(this.path),h.setResponseType("arraybuffer"),Array.isArray(t))for(var c=0,l=0,u=t.length;l<u;++l)r(l);else h.load(t,function(t){var i=a._parser(t,!0);if(i.isCubemap)for(var n=i.mipmaps.length/i.mipmapCount,r=0;r<n;r++){o[r]={mipmaps:[]};for(var h=0;h<i.mipmapCount;h++)o[r].mipmaps.push(i.mipmaps[r*i.mipmapCount+h]),o[r].format=i.format,o[r].width=i.width,o[r].height=i.height}else s.image.width=i.width,s.image.height=i.height,s.mipmaps=i.mipmaps;1===i.mipmapCount&&(s.minFilter=Ua),s.format=i.format,s.needsUpdate=!0,e&&e(s)},i,n);return s},setPath:function(t){return this.path=t,this}}),Object.assign(Ni.prototype,{load:function(t,e,i,n){var r=this,a=new u,o=new Ii(this.manager);return o.setResponseType("arraybuffer"),o.load(t,function(t){var i=r._parser(t);i&&(void 0!==i.image?a.image=i.image:void 0!==i.data&&(a.image.width=i.width,a.image.height=i.height,a.image.data=i.data),a.wrapS=void 0!==i.wrapS?i.wrapS:Ia,a.wrapT=void 0!==i.wrapT?i.wrapT:Ia,a.magFilter=void 0!==i.magFilter?i.magFilter:Ua,a.minFilter=void 0!==i.minFilter?i.minFilter:za,a.anisotropy=void 0!==i.anisotropy?i.anisotropy:1,void 0!==i.format&&(a.format=i.format),void 0!==i.type&&(a.type=i.type),void 0!==i.mipmaps&&(a.mipmaps=i.mipmaps),1===i.mipmapCount&&(a.minFilter=Ua),a.needsUpdate=!0,e&&e(a,i))},i,n),a}}),Object.assign(Oi.prototype,{crossOrigin:"Anonymous",load:function(t,e,i,n){void 0===t&&(t=""),void 0!==this.path&&(t=this.path+t),t=this.manager.resolveURL(t);var r=this,a=Ko.get(t);if(void 0!==a)return r.manager.itemStart(t),setTimeout(function(){e&&e(a),r.manager.itemEnd(t)},0),a;var o=document.createElementNS("http://www.w3.org/1999/xhtml","img");return o.addEventListener("load",function(){Ko.add(t,this),e&&e(this),r.manager.itemEnd(t)},!1),o.addEventListener("error",function(e){n&&n(e),r.manager.itemEnd(t),r.manager.itemError(t)},!1),"data:"!==t.substr(0,5)&&void 0!==this.crossOrigin&&(o.crossOrigin=this.crossOrigin),r.manager.itemStart(t),o.src=t,o},setCrossOrigin:function(t){return this.crossOrigin=t,this},setPath:function(t){return this.path=t,this}}),Object.assign(Di.prototype,{crossOrigin:"Anonymous",load:function(t,e,i,n){function r(i){o.load(t[i],function(t){a.images[i]=t,6===++s&&(a.needsUpdate=!0,e&&e(a))},void 0,n)}var a=new p,o=new Oi(this.manager);o.setCrossOrigin(this.crossOrigin),o.setPath(this.path);for(var s=0,h=0;h<t.length;++h)r(h);return a},setCrossOrigin:function(t){return this.crossOrigin=t,this},setPath:function(t){return this.path=t,this}}),Object.assign(Ui.prototype,{crossOrigin:"Anonymous",load:function(t,e,i,n){var r=new s,a=new Oi(this.manager);return a.setCrossOrigin(this.crossOrigin),a.setPath(this.path),a.load(t,function(i){r.image=i;var n=t.search(/\.(jpg|jpeg)$/)>0||0===t.search(/^data\:image\/jpeg/);r.format=n?Ka:$a,r.needsUpdate=!0,void 0!==e&&e(r)},i,n),r},setCrossOrigin:function(t){return this.crossOrigin=t,this},setPath:function(t){return this.path=t,this}}),Object.assign(Fi.prototype,{getPoint:function(){return null},getPointAt:function(t,e){var i=this.getUtoTmapping(t);return this.getPoint(i,e)},getPoints:function(t){void 0===t&&(t=5);for(var e=[],i=0;i<=t;i++)e.push(this.getPoint(i/t));return e},getSpacedPoints:function(t){void 0===t&&(t=5);for(var e=[],i=0;i<=t;i++)e.push(this.getPointAt(i/t));return e},getLength:function(){var t=this.getLengths();return t[t.length-1]},getLengths:function(t){if(void 0===t&&(t=this.arcLengthDivisions),this.cacheArcLengths&&this.cacheArcLengths.length===t+1&&!this.needsUpdate)return this.cacheArcLengths;this.needsUpdate=!1;var e,i,n=[],r=this.getPoint(0),a=0;for(n.push(0),i=1;i<=t;i++)a+=(e=this.getPoint(i/t)).distanceTo(r),n.push(a),r=e;return this.cacheArcLengths=n,n},updateArcLengths:function(){this.needsUpdate=!0,this.getLengths()},getUtoTmapping:function(t,e){var i,n=this.getLengths(),r=0,a=n.length;i=e||t*n[a-1];for(var o,s=0,h=a-1;s<=h;)if(r=Math.floor(s+(h-s)/2),(o=n[r]-i)<0)s=r+1;else{if(!(o>0)){h=r;break}h=r-1}if(r=h,n[r]===i)return r/(a-1);var c=n[r];return(r+(i-c)/(n[r+1]-c))/(a-1)},getTangent:function(t){var e=t-1e-4,i=t+1e-4;e<0&&(e=0),i>1&&(i=1);var n=this.getPoint(e);return this.getPoint(i).clone().sub(n).normalize()},getTangentAt:function(t){var e=this.getUtoTmapping(t);return this.getTangent(e)},computeFrenetFrames:function(t,e){var i,r,o,s=new a,h=[],c=[],l=[],u=new a,p=new n;for(i=0;i<=t;i++)r=i/t,h[i]=this.getTangentAt(r),h[i].normalize();c[0]=new a,l[0]=new a;var d=Number.MAX_VALUE,f=Math.abs(h[0].x),m=Math.abs(h[0].y),v=Math.abs(h[0].z);for(f<=d&&(d=f,s.set(1,0,0)),m<=d&&(d=m,s.set(0,1,0)),v<=d&&s.set(0,0,1),u.crossVectors(h[0],s).normalize(),c[0].crossVectors(h[0],u),l[0].crossVectors(h[0],c[0]),i=1;i<=t;i++)c[i]=c[i-1].clone(),l[i]=l[i-1].clone(),u.crossVectors(h[i-1],h[i]),u.length()>Number.EPSILON&&(u.normalize(),o=Math.acos(Po.clamp(h[i-1].dot(h[i]),-1,1)),c[i].applyMatrix4(p.makeRotationAxis(u,o))),l[i].crossVectors(h[i],c[i]);if(!0===e)for(o=Math.acos(Po.clamp(c[0].dot(c[t]),-1,1)),o/=t,h[0].dot(u.crossVectors(c[0],c[t]))>0&&(o=-o),i=1;i<=t;i++)c[i].applyMatrix4(p.makeRotationAxis(h[i],o*i)),l[i].crossVectors(h[i],c[i]);return{tangents:h,normals:c,binormals:l}},clone:function(){return(new this.constructor).copy(this)},copy:function(t){return this.arcLengthDivisions=t.arcLengthDivisions,this},toJSON:function(){var t={metadata:{version:4.5,type:"Curve",generator:"Curve.toJSON"}};return t.arcLengthDivisions=this.arcLengthDivisions,t.type=this.type,t},fromJSON:function(t){return this.arcLengthDivisions=t.arcLengthDivisions,this}}),(zi.prototype=Object.create(Fi.prototype)).constructor=zi,zi.prototype.isEllipseCurve=!0,zi.prototype.getPoint=function(t,e){for(var n=e||new i,r=2*Math.PI,a=this.aEndAngle-this.aStartAngle,o=Math.abs(a)<Number.EPSILON;a<0;)a+=r;for(;a>r;)a-=r;a<Number.EPSILON&&(a=o?0:r),!0!==this.aClockwise||o||(a===r?a=-r:a-=r);var s=this.aStartAngle+t*a,h=this.aX+this.xRadius*Math.cos(s),c=this.aY+this.yRadius*Math.sin(s);if(0!==this.aRotation){var l=Math.cos(this.aRotation),u=Math.sin(this.aRotation),p=h-this.aX,d=c-this.aY;h=p*l-d*u+this.aX,c=p*u+d*l+this.aY}return n.set(h,c)},zi.prototype.copy=function(t){return Fi.prototype.copy.call(this,t),this.aX=t.aX,this.aY=t.aY,this.xRadius=t.xRadius,this.yRadius=t.yRadius,this.aStartAngle=t.aStartAngle,this.aEndAngle=t.aEndAngle,this.aClockwise=t.aClockwise,this.aRotation=t.aRotation,this},zi.prototype.toJSON=function(){var t=Fi.prototype.toJSON.call(this);return t.aX=this.aX,t.aY=this.aY,t.xRadius=this.xRadius,t.yRadius=this.yRadius,t.aStartAngle=this.aStartAngle,t.aEndAngle=this.aEndAngle,t.aClockwise=this.aClockwise,t.aRotation=this.aRotation,t},zi.prototype.fromJSON=function(t){return Fi.prototype.fromJSON.call(this,t),this.aX=t.aX,this.aY=t.aY,this.xRadius=t.xRadius,this.yRadius=t.yRadius,this.aStartAngle=t.aStartAngle,this.aEndAngle=t.aEndAngle,this.aClockwise=t.aClockwise,this.aRotation=t.aRotation,this},(Bi.prototype=Object.create(zi.prototype)).constructor=Bi,Bi.prototype.isArcCurve=!0;var es=new a,is=new Gi,ns=new Gi,rs=new Gi;(Vi.prototype=Object.create(Fi.prototype)).constructor=Vi,Vi.prototype.isCatmullRomCurve3=!0,Vi.prototype.getPoint=function(t,e){var i=e||new a,n=this.points,r=n.length,o=(r-(this.closed?0:1))*t,s=Math.floor(o),h=o-s;this.closed?s+=s>0?0:(Math.floor(Math.abs(s)/n.length)+1)*n.length:0===h&&s===r-1&&(s=r-2,h=1);var c,l,u,p;if(this.closed||s>0?c=n[(s-1)%r]:(es.subVectors(n[0],n[1]).add(n[0]),c=es),l=n[s%r],u=n[(s+1)%r],this.closed||s+2<r?p=n[(s+2)%r]:(es.subVectors(n[r-1],n[r-2]).add(n[r-1]),p=es),"centripetal"===this.curveType||"chordal"===this.curveType){var d="chordal"===this.curveType?.5:.25,f=Math.pow(c.distanceToSquared(l),d),m=Math.pow(l.distanceToSquared(u),d),v=Math.pow(u.distanceToSquared(p),d);m<1e-4&&(m=1),f<1e-4&&(f=m),v<1e-4&&(v=m),is.initNonuniformCatmullRom(c.x,l.x,u.x,p.x,f,m,v),ns.initNonuniformCatmullRom(c.y,l.y,u.y,p.y,f,m,v),rs.initNonuniformCatmullRom(c.z,l.z,u.z,p.z,f,m,v)}else"catmullrom"===this.curveType&&(is.initCatmullRom(c.x,l.x,u.x,p.x,this.tension),ns.initCatmullRom(c.y,l.y,u.y,p.y,this.tension),rs.initCatmullRom(c.z,l.z,u.z,p.z,this.tension));return i.set(is.calc(h),ns.calc(h),rs.calc(h)),i},Vi.prototype.copy=function(t){Fi.prototype.copy.call(this,t),this.points=[];for(var e=0,i=t.points.length;e<i;e++){var n=t.points[e];this.points.push(n.clone())}return this.closed=t.closed,this.curveType=t.curveType,this.tension=t.tension,this},Vi.prototype.toJSON=function(){var t=Fi.prototype.toJSON.call(this);t.points=[];for(var e=0,i=this.points.length;e<i;e++){var n=this.points[e];t.points.push(n.toArray())}return t.closed=this.closed,t.curveType=this.curveType,t.tension=this.tension,t},Vi.prototype.fromJSON=function(t){Fi.prototype.fromJSON.call(this,t),this.points=[];for(var e=0,i=t.points.length;e<i;e++){var n=t.points[e];this.points.push((new a).fromArray(n))}return this.closed=t.closed,this.curveType=t.curveType,this.tension=t.tension,this},(Hi.prototype=Object.create(Fi.prototype)).constructor=Hi,Hi.prototype.isCubicBezierCurve=!0,Hi.prototype.getPoint=function(t,e){var n=e||new i,r=this.v0,a=this.v1,o=this.v2,s=this.v3;return n.set(Wi(t,r.x,a.x,o.x,s.x),Wi(t,r.y,a.y,o.y,s.y)),n},Hi.prototype.copy=function(t){return Fi.prototype.copy.call(this,t),this.v0.copy(t.v0),this.v1.copy(t.v1),this.v2.copy(t.v2),this.v3.copy(t.v3),this},Hi.prototype.toJSON=function(){var t=Fi.prototype.toJSON.call(this);return t.v0=this.v0.toArray(),t.v1=this.v1.toArray(),t.v2=this.v2.toArray(),t.v3=this.v3.toArray(),t},Hi.prototype.fromJSON=function(t){return Fi.prototype.fromJSON.call(this,t),this.v0.fromArray(t.v0),this.v1.fromArray(t.v1),this.v2.fromArray(t.v2),this.v3.fromArray(t.v3),this},(Xi.prototype=Object.create(Fi.prototype)).constructor=Xi,Xi.prototype.isCubicBezierCurve3=!0,Xi.prototype.getPoint=function(t,e){var i=e||new a,n=this.v0,r=this.v1,o=this.v2,s=this.v3;return i.set(Wi(t,n.x,r.x,o.x,s.x),Wi(t,n.y,r.y,o.y,s.y),Wi(t,n.z,r.z,o.z,s.z)),i},Xi.prototype.copy=function(t){return Fi.prototype.copy.call(this,t),this.v0.copy(t.v0),this.v1.copy(t.v1),this.v2.copy(t.v2),this.v3.copy(t.v3),this},Xi.prototype.toJSON=function(){var t=Fi.prototype.toJSON.call(this);return t.v0=this.v0.toArray(),t.v1=this.v1.toArray(),t.v2=this.v2.toArray(),t.v3=this.v3.toArray(),t},Xi.prototype.fromJSON=function(t){return Fi.prototype.fromJSON.call(this,t),this.v0.fromArray(t.v0),this.v1.fromArray(t.v1),this.v2.fromArray(t.v2),this.v3.fromArray(t.v3),this},(qi.prototype=Object.create(Fi.prototype)).constructor=qi,qi.prototype.isLineCurve=!0,qi.prototype.getPoint=function(t,e){var n=e||new i;return 1===t?n.copy(this.v2):(n.copy(this.v2).sub(this.v1),n.multiplyScalar(t).add(this.v1)),n},qi.prototype.getPointAt=function(t,e){return this.getPoint(t,e)},qi.prototype.getTangent=function(){return this.v2.clone().sub(this.v1).normalize()},qi.prototype.copy=function(t){return Fi.prototype.copy.call(this,t),this.v1.copy(t.v1),this.v2.copy(t.v2),this},qi.prototype.toJSON=function(){var t=Fi.prototype.toJSON.call(this);return t.v1=this.v1.toArray(),t.v2=this.v2.toArray(),t},qi.prototype.fromJSON=function(t){return Fi.prototype.fromJSON.call(this,t),this.v1.fromArray(t.v1),this.v2.fromArray(t.v2),this},(Yi.prototype=Object.create(Fi.prototype)).constructor=Yi,Yi.prototype.isLineCurve3=!0,Yi.prototype.getPoint=function(t,e){var i=e||new a;return 1===t?i.copy(this.v2):(i.copy(this.v2).sub(this.v1),i.multiplyScalar(t).add(this.v1)),i},Yi.prototype.getPointAt=function(t,e){return this.getPoint(t,e)},Yi.prototype.copy=function(t){return Fi.prototype.copy.call(this,t),this.v1.copy(t.v1),this.v2.copy(t.v2),this},Yi.prototype.toJSON=function(){var t=Fi.prototype.toJSON.call(this);return t.v1=this.v1.toArray(),t.v2=this.v2.toArray(),t},Yi.prototype.fromJSON=function(t){return Fi.prototype.fromJSON.call(this,t),this.v1.fromArray(t.v1),this.v2.fromArray(t.v2),this},(Zi.prototype=Object.create(Fi.prototype)).constructor=Zi,Zi.prototype.isQuadraticBezierCurve=!0,Zi.prototype.getPoint=function(t,e){var n=e||new i,r=this.v0,a=this.v1,o=this.v2;return n.set(ji(t,r.x,a.x,o.x),ji(t,r.y,a.y,o.y)),n},Zi.prototype.copy=function(t){return Fi.prototype.copy.call(this,t),this.v0.copy(t.v0),this.v1.copy(t.v1),this.v2.copy(t.v2),this},Zi.prototype.toJSON=function(){var t=Fi.prototype.toJSON.call(this);return t.v0=this.v0.toArray(),t.v1=this.v1.toArray(),t.v2=this.v2.toArray(),t},Zi.prototype.fromJSON=function(t){return Fi.prototype.fromJSON.call(this,t),this.v0.fromArray(t.v0),this.v1.fromArray(t.v1),this.v2.fromArray(t.v2),this},(Ji.prototype=Object.create(Fi.prototype)).constructor=Ji,Ji.prototype.isQuadraticBezierCurve3=!0,Ji.prototype.getPoint=function(t,e){var i=e||new a,n=this.v0,r=this.v1,o=this.v2;return i.set(ji(t,n.x,r.x,o.x),ji(t,n.y,r.y,o.y),ji(t,n.z,r.z,o.z)),i},Ji.prototype.copy=function(t){return Fi.prototype.copy.call(this,t),this.v0.copy(t.v0),this.v1.copy(t.v1),this.v2.copy(t.v2),this},Ji.prototype.toJSON=function(){var t=Fi.prototype.toJSON.call(this);return t.v0=this.v0.toArray(),t.v1=this.v1.toArray(),t.v2=this.v2.toArray(),t},Ji.prototype.fromJSON=function(t){return Fi.prototype.fromJSON.call(this,t),this.v0.fromArray(t.v0),this.v1.fromArray(t.v1),this.v2.fromArray(t.v2),this},(Qi.prototype=Object.create(Fi.prototype)).constructor=Qi,Qi.prototype.isSplineCurve=!0,Qi.prototype.getPoint=function(t,e){var n=e||new i,r=this.points,a=(r.length-1)*t,o=Math.floor(a),s=a-o,h=r[0===o?o:o-1],c=r[o],l=r[o>r.length-2?r.length-1:o+1],u=r[o>r.length-3?r.length-1:o+2];return n.set(ki(s,h.x,c.x,l.x,u.x),ki(s,h.y,c.y,l.y,u.y)),n},Qi.prototype.copy=function(t){Fi.prototype.copy.call(this,t),this.points=[];for(var e=0,i=t.points.length;e<i;e++){var n=t.points[e];this.points.push(n.clone())}return this},Qi.prototype.toJSON=function(){var t=Fi.prototype.toJSON.call(this);t.points=[];for(var e=0,i=this.points.length;e<i;e++){var n=this.points[e];t.points.push(n.toArray())}return t},Qi.prototype.fromJSON=function(t){Fi.prototype.fromJSON.call(this,t),this.points=[];for(var e=0,n=t.points.length;e<n;e++){var r=t.points[e];this.points.push((new i).fromArray(r))}return this};var as=Object.freeze({ArcCurve:Bi,CatmullRomCurve3:Vi,CubicBezierCurve:Hi,CubicBezierCurve3:Xi,EllipseCurve:zi,LineCurve:qi,LineCurve3:Yi,QuadraticBezierCurve:Zi,QuadraticBezierCurve3:Ji,SplineCurve:Qi});Ki.prototype=Object.assign(Object.create(Fi.prototype),{constructor:Ki,add:function(t){this.curves.push(t)},closePath:function(){var t=this.curves[0].getPoint(0),e=this.curves[this.curves.length-1].getPoint(1);t.equals(e)||this.curves.push(new qi(e,t))},getPoint:function(t){for(var e=t*this.getLength(),i=this.getCurveLengths(),n=0;n<i.length;){if(i[n]>=e){var r=i[n]-e,a=this.curves[n],o=a.getLength(),s=0===o?0:1-r/o;return a.getPointAt(s)}n++}return null},getLength:function(){var t=this.getCurveLengths();return t[t.length-1]},updateArcLengths:function(){this.needsUpdate=!0,this.cacheLengths=null,this.getCurveLengths()},getCurveLengths:function(){if(this.cacheLengths&&this.cacheLengths.length===this.curves.length)return this.cacheLengths;for(var t=[],e=0,i=0,n=this.curves.length;i<n;i++)e+=this.curves[i].getLength(),t.push(e);return this.cacheLengths=t,t},getSpacedPoints:function(t){void 0===t&&(t=40);for(var e=[],i=0;i<=t;i++)e.push(this.getPoint(i/t));return this.autoClose&&e.push(e[0]),e},getPoints:function(t){t=t||12;for(var e,i=[],n=0,r=this.curves;n<r.length;n++)for(var a=r[n],o=a&&a.isEllipseCurve?2*t:a&&a.isLineCurve?1:a&&a.isSplineCurve?t*a.points.length:t,s=a.getPoints(o),h=0;h<s.length;h++){var c=s[h];e&&e.equals(c)||(i.push(c),e=c)}return this.autoClose&&i.length>1&&!i[i.length-1].equals(i[0])&&i.push(i[0]),i},copy:function(t){Fi.prototype.copy.call(this,t),this.curves=[];for(var e=0,i=t.curves.length;e<i;e++){var n=t.curves[e];this.curves.push(n.clone())}return this.autoClose=t.autoClose,this},toJSON:function(){var t=Fi.prototype.toJSON.call(this);t.autoClose=this.autoClose,t.curves=[];for(var e=0,i=this.curves.length;e<i;e++){var n=this.curves[e];t.curves.push(n.toJSON())}return t},fromJSON:function(t){Fi.prototype.fromJSON.call(this,t),this.autoClose=t.autoClose,this.curves=[];for(var e=0,i=t.curves.length;e<i;e++){var n=t.curves[e];this.curves.push((new as[n.type]).fromJSON(n))}return this}}),$i.prototype=Object.assign(Object.create(Ki.prototype),{constructor:$i,setFromPoints:function(t){this.moveTo(t[0].x,t[0].y);for(var e=1,i=t.length;e<i;e++)this.lineTo(t[e].x,t[e].y)},moveTo:function(t,e){this.currentPoint.set(t,e)},lineTo:function(t,e){var n=new qi(this.currentPoint.clone(),new i(t,e));this.curves.push(n),this.currentPoint.set(t,e)},quadraticCurveTo:function(t,e,n,r){var a=new Zi(this.currentPoint.clone(),new i(t,e),new i(n,r));this.curves.push(a),this.currentPoint.set(n,r)},bezierCurveTo:function(t,e,n,r,a,o){var s=new Hi(this.currentPoint.clone(),new i(t,e),new i(n,r),new i(a,o));this.curves.push(s),this.currentPoint.set(a,o)},splineThru:function(t){var e=new Qi([this.currentPoint.clone()].concat(t));this.curves.push(e),this.currentPoint.copy(t[t.length-1])},arc:function(t,e,i,n,r,a){var o=this.currentPoint.x,s=this.currentPoint.y;this.absarc(t+o,e+s,i,n,r,a)},absarc:function(t,e,i,n,r,a){this.absellipse(t,e,i,i,n,r,a)},ellipse:function(t,e,i,n,r,a,o,s){var h=this.currentPoint.x,c=this.currentPoint.y;this.absellipse(t+h,e+c,i,n,r,a,o,s)},absellipse:function(t,e,i,n,r,a,o,s){var h=new zi(t,e,i,n,r,a,o,s);if(this.curves.length>0){var c=h.getPoint(0);c.equals(this.currentPoint)||this.lineTo(c.x,c.y)}this.curves.push(h);var l=h.getPoint(1);this.currentPoint.copy(l)},copy:function(t){return Ki.prototype.copy.call(this,t),this.currentPoint.copy(t.currentPoint),this},toJSON:function(){var t=Ki.prototype.toJSON.call(this);return t.currentPoint=this.currentPoint.toArray(),t},fromJSON:function(t){return Ki.prototype.fromJSON.call(this,t),this.currentPoint.fromArray(t.currentPoint),this}}),tn.prototype=Object.assign(Object.create($i.prototype),{constructor:tn,getPointsHoles:function(t){for(var e=[],i=0,n=this.holes.length;i<n;i++)e[i]=this.holes[i].getPoints(t);return e},extractPoints:function(t){return{shape:this.getPoints(t),holes:this.getPointsHoles(t)}},copy:function(t){$i.prototype.copy.call(this,t),this.holes=[];for(var e=0,i=t.holes.length;e<i;e++){var n=t.holes[e];this.holes.push(n.clone())}return this},toJSON:function(){var t=$i.prototype.toJSON.call(this);t.uuid=this.uuid,t.holes=[];for(var e=0,i=this.holes.length;e<i;e++){var n=this.holes[e];t.holes.push(n.toJSON())}return t},fromJSON:function(t){$i.prototype.fromJSON.call(this,t),this.uuid=t.uuid,this.holes=[];for(var e=0,i=t.holes.length;e<i;e++){var n=t.holes[e];this.holes.push((new $i).fromJSON(n))}return this}}),en.prototype=Object.assign(Object.create(st.prototype),{constructor:en,isLight:!0,copy:function(t){return st.prototype.copy.call(this,t),this.color.copy(t.color),this.intensity=t.intensity,this},toJSON:function(t){var e=st.prototype.toJSON.call(this,t);return e.object.color=this.color.getHex(),e.object.intensity=this.intensity,void 0!==this.groundColor&&(e.object.groundColor=this.groundColor.getHex()),void 0!==this.distance&&(e.object.distance=this.distance),void 0!==this.angle&&(e.object.angle=this.angle),void 0!==this.decay&&(e.object.decay=this.decay),void 0!==this.penumbra&&(e.object.penumbra=this.penumbra),void 0!==this.shadow&&(e.object.shadow=this.shadow.toJSON()),e}}),nn.prototype=Object.assign(Object.create(en.prototype),{constructor:nn,isHemisphereLight:!0,copy:function(t){return en.prototype.copy.call(this,t),this.groundColor.copy(t.groundColor),this}}),Object.assign(rn.prototype,{copy:function(t){return this.camera=t.camera.clone(),this.bias=t.bias,this.radius=t.radius,this.mapSize.copy(t.mapSize),this},clone:function(){return(new this.constructor).copy(this)},toJSON:function(){var t={};return 0!==this.bias&&(t.bias=this.bias),1!==this.radius&&(t.radius=this.radius),512===this.mapSize.x&&512===this.mapSize.y||(t.mapSize=this.mapSize.toArray()),t.camera=this.camera.toJSON(!1).object,delete t.camera.matrix,t}}),an.prototype=Object.assign(Object.create(rn.prototype),{constructor:an,isSpotLightShadow:!0,update:function(t){var e=this.camera,i=2*Po.RAD2DEG*t.angle,n=this.mapSize.width/this.mapSize.height,r=t.distance||e.far;i===e.fov&&n===e.aspect&&r===e.far||(e.fov=i,e.aspect=n,e.far=r,e.updateProjectionMatrix())}}),on.prototype=Object.assign(Object.create(en.prototype),{constructor:on,isSpotLight:!0,copy:function(t){return en.prototype.copy.call(this,t),this.distance=t.distance,this.angle=t.angle,this.penumbra=t.penumbra,this.decay=t.decay,this.target=t.target.clone(),this.shadow=t.shadow.clone(),this}}),sn.prototype=Object.assign(Object.create(en.prototype),{constructor:sn,isPointLight:!0,copy:function(t){return en.prototype.copy.call(this,t),this.distance=t.distance,this.decay=t.decay,this.shadow=t.shadow.clone(),this}}),hn.prototype=Object.assign(Object.create(rn.prototype),{constructor:hn}),cn.prototype=Object.assign(Object.create(en.prototype),{constructor:cn,isDirectionalLight:!0,copy:function(t){return en.prototype.copy.call(this,t),this.target=t.target.clone(),this.shadow=t.shadow.clone(),this}}),ln.prototype=Object.assign(Object.create(en.prototype),{constructor:ln,isAmbientLight:!0}),un.prototype=Object.assign(Object.create(en.prototype),{constructor:un,isRectAreaLight:!0,copy:function(t){return en.prototype.copy.call(this,t),this.width=t.width,this.height=t.height,this},toJSON:function(t){var e=en.prototype.toJSON.call(this,t);return e.object.width=this.width,e.object.height=this.height,e}}),pn.prototype=Object.assign(Object.create(Mn.prototype),{constructor:pn,ValueTypeName:"string",ValueBufferType:Array,DefaultInterpolation:2300,InterpolantFactoryMethodLinear:void 0,InterpolantFactoryMethodSmooth:void 0}),dn.prototype=Object.assign(Object.create(Mn.prototype),{constructor:dn,ValueTypeName:"bool",ValueBufferType:Array,DefaultInterpolation:2300,InterpolantFactoryMethodLinear:void 0,InterpolantFactoryMethodSmooth:void 0}),Object.assign(fn.prototype,{evaluate:function(t){var e=this.parameterPositions,i=this._cachedIndex,n=e[i],r=e[i-1];t:{e:{var a;i:{n:if(!(t<n)){for(var o=i+2;;){if(void 0===n){if(t<r)break n;return i=e.length,this._cachedIndex=i,this.afterEnd_(i-1,t,r)}if(i===o)break;if(r=n,n=e[++i],t<n)break e}a=e.length;break i}if(t>=r)break t;var s=e[1];t<s&&(i=2,r=s);for(o=i-2;;){if(void 0===r)return this._cachedIndex=0,this.beforeStart_(0,t,n);if(i===o)break;if(n=r,r=e[--i-1],t>=r)break e}a=i,i=0}for(;i<a;){var h=i+a>>>1;t<e[h]?a=h:i=h+1}if(n=e[i],void 0===(r=e[i-1]))return this._cachedIndex=0,this.beforeStart_(0,t,n);if(void 0===n)return i=e.length,this._cachedIndex=i,this.afterEnd_(i-1,r,t)}this._cachedIndex=i,this.intervalChanged_(i,r,n)}return this.interpolate_(i,r,t,n)},settings:null,DefaultSettings_:{},getSettings_:function(){return this.settings||this.DefaultSettings_},copySampleValue_:function(t){for(var e=this.resultBuffer,i=this.sampleValues,n=this.valueSize,r=t*n,a=0;a!==n;++a)e[a]=i[r+a];return e},interpolate_:function(){throw new Error("call to abstract method")},intervalChanged_:function(){}}),Object.assign(fn.prototype,{beforeStart_:fn.prototype.copySampleValue_,afterEnd_:fn.prototype.copySampleValue_}),mn.prototype=Object.assign(Object.create(fn.prototype),{constructor:mn,interpolate_:function(t,e,i,n){for(var a=this.resultBuffer,o=this.sampleValues,s=this.valueSize,h=t*s,c=(i-e)/(n-e),l=h+s;h!==l;h+=4)r.slerpFlat(a,0,o,h-s,o,h,c);return a}}),vn.prototype=Object.assign(Object.create(Mn.prototype),{constructor:vn,ValueTypeName:"quaternion",DefaultInterpolation:2301,InterpolantFactoryMethodLinear:function(t){return new mn(this.times,this.values,this.getValueSize(),t)},InterpolantFactoryMethodSmooth:void 0}),gn.prototype=Object.assign(Object.create(Mn.prototype),{constructor:gn,ValueTypeName:"color"}),yn.prototype=Object.assign(Object.create(Mn.prototype),{constructor:yn,ValueTypeName:"number"}),xn.prototype=Object.assign(Object.create(fn.prototype),{constructor:xn,DefaultSettings_:{endingStart:vo,endingEnd:vo},intervalChanged_:function(t,e,i){var n=this.parameterPositions,r=t-2,a=t+1,o=n[r],s=n[a];if(void 0===o)switch(this.getSettings_().endingStart){case 2401:r=t,o=2*e-i;break;case 2402:o=e+n[r=n.length-2]-n[r+1];break;default:r=t,o=i}if(void 0===s)switch(this.getSettings_().endingEnd){case 2401:a=t,s=2*i-e;break;case 2402:a=1,s=i+n[1]-n[0];break;default:a=t-1,s=e}var h=.5*(i-e),c=this.valueSize;this._weightPrev=h/(e-o),this._weightNext=h/(s-i),this._offsetPrev=r*c,this._offsetNext=a*c},interpolate_:function(t,e,i,n){for(var r=this.resultBuffer,a=this.sampleValues,o=this.valueSize,s=t*o,h=s-o,c=this._offsetPrev,l=this._offsetNext,u=this._weightPrev,p=this._weightNext,d=(i-e)/(n-e),f=d*d,m=f*d,v=-u*m+2*u*f-u*d,g=(1+u)*m+(-1.5-2*u)*f+(-.5+u)*d+1,y=(-1-p)*m+(1.5+p)*f+.5*d,x=p*m-p*f,_=0;_!==o;++_)r[_]=v*a[c+_]+g*a[h+_]+y*a[s+_]+x*a[l+_];return r}}),_n.prototype=Object.assign(Object.create(fn.prototype),{constructor:_n,interpolate_:function(t,e,i,n){for(var r=this.resultBuffer,a=this.sampleValues,o=this.valueSize,s=t*o,h=s-o,c=(i-e)/(n-e),l=1-c,u=0;u!==o;++u)r[u]=a[h+u]*l+a[s+u]*c;return r}}),bn.prototype=Object.assign(Object.create(fn.prototype),{constructor:bn,interpolate_:function(t){return this.copySampleValue_(t-1)}});var os={arraySlice:function(t,e,i){return os.isTypedArray(t)?new t.constructor(t.subarray(e,void 0!==i?i:t.length)):t.slice(e,i)},convertArray:function(t,e,i){return!t||!i&&t.constructor===e?t:"number"==typeof e.BYTES_PER_ELEMENT?new e(t):Array.prototype.slice.call(t)},isTypedArray:function(t){return ArrayBuffer.isView(t)&&!(t instanceof DataView)},getKeyframeOrder:function(t){for(var e=t.length,i=new Array(e),n=0;n!==e;++n)i[n]=n;return i.sort(function(e,i){return t[e]-t[i]}),i},sortedArray:function(t,e,i){for(var n=t.length,r=new t.constructor(n),a=0,o=0;o!==n;++a)for(var s=i[a]*e,h=0;h!==e;++h)r[o++]=t[s+h];return r},flattenJSON:function(t,e,i,n){for(var r=1,a=t[0];void 0!==a&&void 0===a[n];)a=t[r++];if(void 0!==a){var o=a[n];if(void 0!==o)if(Array.isArray(o))do{void 0!==(o=a[n])&&(e.push(a.time),i.push.apply(i,o)),a=t[r++]}while(void 0!==a);else if(void 0!==o.toArray)do{void 0!==(o=a[n])&&(e.push(a.time),o.toArray(i,i.length)),a=t[r++]}while(void 0!==a);else do{void 0!==(o=a[n])&&(e.push(a.time),i.push(o)),a=t[r++]}while(void 0!==a)}}};Object.assign(Mn,{parse:function(t){if(void 0===t.type)throw new Error("THREE.KeyframeTrack: track type undefined, can not parse");var e=Mn._getTrackTypeForValueTypeName(t.type);if(void 0===t.times){var i=[],n=[];os.flattenJSON(t.keys,i,n,"value"),t.times=i,t.values=n}return void 0!==e.parse?e.parse(t):new e(t.name,t.times,t.values,t.interpolation)},toJSON:function(t){var e,i=t.constructor;if(void 0!==i.toJSON)e=i.toJSON(t);else{e={name:t.name,times:os.convertArray(t.times,Array),values:os.convertArray(t.values,Array)};var n=t.getInterpolation();n!==t.DefaultInterpolation&&(e.interpolation=n)}return e.type=t.ValueTypeName,e},_getTrackTypeForValueTypeName:function(t){switch(t.toLowerCase()){case"scalar":case"double":case"float":case"number":case"integer":return yn;case"vector":case"vector2":case"vector3":case"vector4":return wn;case"color":return gn;case"quaternion":return vn;case"bool":case"boolean":return dn;case"string":return pn}throw new Error("THREE.KeyframeTrack: Unsupported typeName: "+t)}}),Object.assign(Mn.prototype,{constructor:Mn,TimeBufferType:Float32Array,ValueBufferType:Float32Array,DefaultInterpolation:2301,InterpolantFactoryMethodDiscrete:function(t){return new bn(this.times,this.values,this.getValueSize(),t)},InterpolantFactoryMethodLinear:function(t){return new _n(this.times,this.values,this.getValueSize(),t)},InterpolantFactoryMethodSmooth:function(t){return new xn(this.times,this.values,this.getValueSize(),t)},setInterpolation:function(t){var e;switch(t){case 2300:e=this.InterpolantFactoryMethodDiscrete;break;case 2301:e=this.InterpolantFactoryMethodLinear;break;case 2302:e=this.InterpolantFactoryMethodSmooth}if(void 0!==e)this.createInterpolant=e;else{var i="unsupported interpolation for "+this.ValueTypeName+" keyframe track named "+this.name;if(void 0===this.createInterpolant){if(t===this.DefaultInterpolation)throw new Error(i);this.setInterpolation(this.DefaultInterpolation)}}},getInterpolation:function(){switch(this.createInterpolant){case this.InterpolantFactoryMethodDiscrete:return 2300;case this.InterpolantFactoryMethodLinear:return 2301;case this.InterpolantFactoryMethodSmooth:return 2302}},getValueSize:function(){return this.values.length/this.times.length},shift:function(t){if(0!==t)for(var e=this.times,i=0,n=e.length;i!==n;++i)e[i]+=t;return this},scale:function(t){if(1!==t)for(var e=this.times,i=0,n=e.length;i!==n;++i)e[i]*=t;return this},trim:function(t,e){for(var i=this.times,n=i.length,r=0,a=n-1;r!==n&&i[r]<t;)++r;for(;-1!==a&&i[a]>e;)--a;if(++a,0!==r||a!==n){r>=a&&(a=Math.max(a,1),r=a-1);var o=this.getValueSize();this.times=os.arraySlice(i,r,a),this.values=os.arraySlice(this.values,r*o,a*o)}return this},validate:function(){var t=!0,e=this.getValueSize();e-Math.floor(e)!=0&&(t=!1);var i=this.times,n=this.values,r=i.length;0===r&&(t=!1);for(var a=null,o=0;o!==r;o++){var s=i[o];if("number"==typeof s&&isNaN(s)){t=!1;break}if(null!==a&&a>s){t=!1;break}a=s}if(void 0!==n&&os.isTypedArray(n)){o=0;for(var h=n.length;o!==h;++o){var c=n[o];if(isNaN(c)){t=!1;break}}}return t},optimize:function(){for(var t=this.times,e=this.values,i=this.getValueSize(),n=2302===this.getInterpolation(),r=1,a=t.length-1,o=1;o<a;++o){var s=!1,h=t[o];if(h!==t[o+1]&&(1!==o||h!==h[0]))if(n)s=!0;else for(var c=o*i,l=c-i,u=c+i,p=0;p!==i;++p){var d=e[c+p];if(d!==e[l+p]||d!==e[u+p]){s=!0;break}}if(s){if(o!==r){t[r]=t[o];var f=o*i,m=r*i;for(p=0;p!==i;++p)e[m+p]=e[f+p]}++r}}if(a>0){t[r]=t[a];for(f=a*i,m=r*i,p=0;p!==i;++p)e[m+p]=e[f+p];++r}return r!==t.length&&(this.times=os.arraySlice(t,0,r),this.values=os.arraySlice(e,0,r*i)),this}}),wn.prototype=Object.assign(Object.create(Mn.prototype),{constructor:wn,ValueTypeName:"vector"}),Object.assign(Sn,{parse:function(t){for(var e=[],i=t.tracks,n=1/(t.fps||1),r=0,a=i.length;r!==a;++r)e.push(Mn.parse(i[r]).scale(n));return new Sn(t.name,t.duration,e)},toJSON:function(t){for(var e=[],i=t.tracks,n={name:t.name,duration:t.duration,tracks:e},r=0,a=i.length;r!==a;++r)e.push(Mn.toJSON(i[r]));return n},CreateFromMorphTargetSequence:function(t,e,i,n){for(var r=e.length,a=[],o=0;o<r;o++){var s=[],h=[];s.push((o+r-1)%r,o,(o+1)%r),h.push(0,1,0);var c=os.getKeyframeOrder(s);s=os.sortedArray(s,1,c),h=os.sortedArray(h,1,c),n||0!==s[0]||(s.push(r),h.push(h[0])),a.push(new yn(".morphTargetInfluences["+e[o].name+"]",s,h).scale(1/i))}return new Sn(t,-1,a)},findByName:function(t,e){var i=t;if(!Array.isArray(t)){var n=t;i=n.geometry&&n.geometry.animations||n.animations}for(var r=0;r<i.length;r++)if(i[r].name===e)return i[r];return null},CreateClipsFromMorphTargetSequences:function(t,e,i){for(var n={},r=/^([\w-]*?)([\d]+)$/,a=0,o=t.length;a<o;a++){var s=t[a],h=s.name.match(r);if(h&&h.length>1){var c=n[u=h[1]];c||(n[u]=c=[]),c.push(s)}}var l=[];for(var u in n)l.push(Sn.CreateFromMorphTargetSequence(u,n[u],e,i));return l},parseAnimation:function(t,e){if(!t)return null;for(var i=function(t,e,i,n,r){if(0!==i.length){var a=[],o=[];os.flattenJSON(i,a,o,n),0!==a.length&&r.push(new t(e,a,o))}},n=[],r=t.name||"default",a=t.length||-1,o=t.fps||30,s=t.hierarchy||[],h=0;h<s.length;h++){var c=s[h].keys;if(c&&0!==c.length)if(c[0].morphTargets){for(var l={},u=0;u<c.length;u++)if(c[u].morphTargets)for(var p=0;p<c[u].morphTargets.length;p++)l[c[u].morphTargets[p]]=-1;for(var d in l){var f=[],m=[];for(p=0;p!==c[u].morphTargets.length;++p){var v=c[u];f.push(v.time),m.push(v.morphTarget===d?1:0)}n.push(new yn(".morphTargetInfluence["+d+"]",f,m))}a=l.length*(o||1)}else{var g=".bones["+e[h].name+"]";i(wn,g+".position",c,"pos",n),i(vn,g+".quaternion",c,"rot",n),i(wn,g+".scale",c,"scl",n)}}if(0===n.length)return null;return new Sn(r,a,n)}}),Object.assign(Sn.prototype,{resetDuration:function(){for(var t=0,e=0,i=this.tracks.length;e!==i;++e){var n=this.tracks[e];t=Math.max(t,n.times[n.times.length-1])}this.duration=t},trim:function(){for(var t=0;t<this.tracks.length;t++)this.tracks[t].trim(0,this.duration);return this},optimize:function(){for(var t=0;t<this.tracks.length;t++)this.tracks[t].optimize();return this}}),Object.assign(Tn.prototype,{load:function(t,e,i,n){var r=this;new Ii(r.manager).load(t,function(t){e(r.parse(JSON.parse(t)))},i,n)},setTextures:function(t){this.textures=t},parse:function(t){function e(t){return n[t],n[t]}var n=this.textures,r=new Qo[t.type];if(void 0!==t.uuid&&(r.uuid=t.uuid),void 0!==t.name&&(r.name=t.name),void 0!==t.color&&r.color.setHex(t.color),void 0!==t.roughness&&(r.roughness=t.roughness),void 0!==t.metalness&&(r.metalness=t.metalness),void 0!==t.emissive&&r.emissive.setHex(t.emissive),void 0!==t.specular&&r.specular.setHex(t.specular),void 0!==t.shininess&&(r.shininess=t.shininess),void 0!==t.clearCoat&&(r.clearCoat=t.clearCoat),void 0!==t.clearCoatRoughness&&(r.clearCoatRoughness=t.clearCoatRoughness),void 0!==t.uniforms&&(r.uniforms=t.uniforms),void 0!==t.vertexShader&&(r.vertexShader=t.vertexShader),void 0!==t.fragmentShader&&(r.fragmentShader=t.fragmentShader),void 0!==t.vertexColors&&(r.vertexColors=t.vertexColors),void 0!==t.fog&&(r.fog=t.fog),void 0!==t.flatShading&&(r.flatShading=t.flatShading),void 0!==t.blending&&(r.blending=t.blending),void 0!==t.side&&(r.side=t.side),void 0!==t.opacity&&(r.opacity=t.opacity),void 0!==t.transparent&&(r.transparent=t.transparent),void 0!==t.alphaTest&&(r.alphaTest=t.alphaTest),void 0!==t.depthTest&&(r.depthTest=t.depthTest),void 0!==t.depthWrite&&(r.depthWrite=t.depthWrite),void 0!==t.colorWrite&&(r.colorWrite=t.colorWrite),void 0!==t.wireframe&&(r.wireframe=t.wireframe),void 0!==t.wireframeLinewidth&&(r.wireframeLinewidth=t.wireframeLinewidth),void 0!==t.wireframeLinecap&&(r.wireframeLinecap=t.wireframeLinecap),void 0!==t.wireframeLinejoin&&(r.wireframeLinejoin=t.wireframeLinejoin),void 0!==t.rotation&&(r.rotation=t.rotation),1!==t.linewidth&&(r.linewidth=t.linewidth),void 0!==t.dashSize&&(r.dashSize=t.dashSize),void 0!==t.gapSize&&(r.gapSize=t.gapSize),void 0!==t.scale&&(r.scale=t.scale),void 0!==t.skinning&&(r.skinning=t.skinning),void 0!==t.morphTargets&&(r.morphTargets=t.morphTargets),void 0!==t.dithering&&(r.dithering=t.dithering),void 0!==t.visible&&(r.visible=t.visible),void 0!==t.userData&&(r.userData=t.userData),void 0!==t.shading&&(r.flatShading=1===t.shading),void 0!==t.size&&(r.size=t.size),void 0!==t.sizeAttenuation&&(r.sizeAttenuation=t.sizeAttenuation),void 0!==t.map&&(r.map=e(t.map)),void 0!==t.alphaMap&&(r.alphaMap=e(t.alphaMap),r.transparent=!0),void 0!==t.bumpMap&&(r.bumpMap=e(t.bumpMap)),void 0!==t.bumpScale&&(r.bumpScale=t.bumpScale),void 0!==t.normalMap&&(r.normalMap=e(t.normalMap)),void 0!==t.normalScale){var a=t.normalScale;!1===Array.isArray(a)&&(a=[a,a]),r.normalScale=(new i).fromArray(a)}return void 0!==t.displacementMap&&(r.displacementMap=e(t.displacementMap)),void 0!==t.displacementScale&&(r.displacementScale=t.displacementScale),void 0!==t.displacementBias&&(r.displacementBias=t.displacementBias),void 0!==t.roughnessMap&&(r.roughnessMap=e(t.roughnessMap)),void 0!==t.metalnessMap&&(r.metalnessMap=e(t.metalnessMap)),void 0!==t.emissiveMap&&(r.emissiveMap=e(t.emissiveMap)),void 0!==t.emissiveIntensity&&(r.emissiveIntensity=t.emissiveIntensity),void 0!==t.specularMap&&(r.specularMap=e(t.specularMap)),void 0!==t.envMap&&(r.envMap=e(t.envMap)),void 0!==t.reflectivity&&(r.reflectivity=t.reflectivity),void 0!==t.lightMap&&(r.lightMap=e(t.lightMap)),void 0!==t.lightMapIntensity&&(r.lightMapIntensity=t.lightMapIntensity),void 0!==t.aoMap&&(r.aoMap=e(t.aoMap)),void 0!==t.aoMapIntensity&&(r.aoMapIntensity=t.aoMapIntensity),void 0!==t.gradientMap&&(r.gradientMap=e(t.gradientMap)),r}}),Object.assign(An.prototype,{load:function(t,e,i,n){var r=this;new Ii(r.manager).load(t,function(t){e(r.parse(JSON.parse(t)))},i,n)},parse:function(t){var e=new St,i=t.data.index;if(void 0!==i){var n=new ss[i.type](i.array);e.setIndex(new pt(n,1))}var r=t.data.attributes;for(var o in r){var s=r[o];n=new ss[s.type](s.array);e.addAttribute(o,new pt(n,s.itemSize,s.normalized))}var h=t.data.groups||t.data.drawcalls||t.data.offsets;if(void 0!==h)for(var c=0,l=h.length;c!==l;++c){var u=h[c];e.addGroup(u.start,u.count,u.materialIndex)}var p=t.data.boundingSphere;if(void 0!==p){var d=new a;void 0!==p.center&&d.fromArray(p.center),e.boundingSphere=new tt(d,p.radius)}return e}});var ss={Int8Array:Int8Array,Uint8Array:Uint8Array,Uint8ClampedArray:"undefined"!=typeof Uint8ClampedArray?Uint8ClampedArray:Uint8Array,Int16Array:Int16Array,Uint16Array:Uint16Array,Int32Array:Int32Array,Uint32Array:Uint32Array,Float32Array:Float32Array,Float64Array:Float64Array};En.Handlers={handlers:[],add:function(t,e){this.handlers.push(t,e)},get:function(t){for(var e=this.handlers,i=0,n=e.length;i<n;i+=2){var r=e[i],a=e[i+1];if(r.test(t))return a}return null}},Object.assign(En.prototype,{crossOrigin:void 0,initMaterials:function(t,e,i){for(var n=[],r=0;r<t.length;++r)n[r]=this.createMaterial(t[r],e,i);return n},createMaterial:function(){var t={NoBlending:Br,NormalBlending:Gr,AdditiveBlending:Vr,SubtractiveBlending:kr,MultiplyBlending:jr,CustomBlending:Wr},e=new H,i=new Ui,n=new Tn;return function(r,a,o){function s(t,e,n,r,s){var c,l=a+t,u=En.Handlers.get(l);null!==u?c=u.load(l):(i.setCrossOrigin(o),c=i.load(l)),void 0!==e&&(c.repeat.fromArray(e),1!==e[0]&&(c.wrapS=Ca),1!==e[1]&&(c.wrapT=Ca)),void 0!==n&&c.offset.fromArray(n),void 0!==r&&("repeat"===r[0]&&(c.wrapS=Ca),"mirror"===r[0]&&(c.wrapS=Ra),"repeat"===r[1]&&(c.wrapT=Ca),"mirror"===r[1]&&(c.wrapT=Ra)),void 0!==s&&(c.anisotropy=s);var p=Po.generateUUID();return h[p]=c,p}var h={},c={uuid:Po.generateUUID(),type:"MeshLambertMaterial"};for(var l in r){var u=r[l];switch(l){case"DbgColor":case"DbgIndex":case"opticalDensity":case"illumination":break;case"DbgName":c.name=u;break;case"blending":c.blending=t[u];break;case"colorAmbient":case"mapAmbient":break;case"colorDiffuse":c.color=e.fromArray(u).getHex();break;case"colorSpecular":c.specular=e.fromArray(u).getHex();break;case"colorEmissive":c.emissive=e.fromArray(u).getHex();break;case"specularCoef":c.shininess=u;break;case"shading":"basic"===u.toLowerCase()&&(c.type="MeshBasicMaterial"),"phong"===u.toLowerCase()&&(c.type="MeshPhongMaterial"),"standard"===u.toLowerCase()&&(c.type="MeshStandardMaterial");break;case"mapDiffuse":c.map=s(u,r.mapDiffuseRepeat,r.mapDiffuseOffset,r.mapDiffuseWrap,r.mapDiffuseAnisotropy);break;case"mapDiffuseRepeat":case"mapDiffuseOffset":case"mapDiffuseWrap":case"mapDiffuseAnisotropy":break;case"mapEmissive":c.emissiveMap=s(u,r.mapEmissiveRepeat,r.mapEmissiveOffset,r.mapEmissiveWrap,r.mapEmissiveAnisotropy);break;case"mapEmissiveRepeat":case"mapEmissiveOffset":case"mapEmissiveWrap":case"mapEmissiveAnisotropy":break;case"mapLight":c.lightMap=s(u,r.mapLightRepeat,r.mapLightOffset,r.mapLightWrap,r.mapLightAnisotropy);break;case"mapLightRepeat":case"mapLightOffset":case"mapLightWrap":case"mapLightAnisotropy":break;case"mapAO":c.aoMap=s(u,r.mapAORepeat,r.mapAOOffset,r.mapAOWrap,r.mapAOAnisotropy);break;case"mapAORepeat":case"mapAOOffset":case"mapAOWrap":case"mapAOAnisotropy":break;case"mapBump":c.bumpMap=s(u,r.mapBumpRepeat,r.mapBumpOffset,r.mapBumpWrap,r.mapBumpAnisotropy);break;case"mapBumpScale":c.bumpScale=u;break;case"mapBumpRepeat":case"mapBumpOffset":case"mapBumpWrap":case"mapBumpAnisotropy":break;case"mapNormal":c.normalMap=s(u,r.mapNormalRepeat,r.mapNormalOffset,r.mapNormalWrap,r.mapNormalAnisotropy);break;case"mapNormalFactor":c.normalScale=[u,u];break;case"mapNormalRepeat":case"mapNormalOffset":case"mapNormalWrap":case"mapNormalAnisotropy":break;case"mapSpecular":c.specularMap=s(u,r.mapSpecularRepeat,r.mapSpecularOffset,r.mapSpecularWrap,r.mapSpecularAnisotropy);break;case"mapSpecularRepeat":case"mapSpecularOffset":case"mapSpecularWrap":case"mapSpecularAnisotropy":break;case"mapMetalness":c.metalnessMap=s(u,r.mapMetalnessRepeat,r.mapMetalnessOffset,r.mapMetalnessWrap,r.mapMetalnessAnisotropy);break;case"mapMetalnessRepeat":case"mapMetalnessOffset":case"mapMetalnessWrap":case"mapMetalnessAnisotropy":break;case"mapRoughness":c.roughnessMap=s(u,r.mapRoughnessRepeat,r.mapRoughnessOffset,r.mapRoughnessWrap,r.mapRoughnessAnisotropy);break;case"mapRoughnessRepeat":case"mapRoughnessOffset":case"mapRoughnessWrap":case"mapRoughnessAnisotropy":break;case"mapAlpha":c.alphaMap=s(u,r.mapAlphaRepeat,r.mapAlphaOffset,r.mapAlphaWrap,r.mapAlphaAnisotropy);break;case"mapAlphaRepeat":case"mapAlphaOffset":case"mapAlphaWrap":case"mapAlphaAnisotropy":break;case"flipSided":c.side=Or;break;case"doubleSided":c.side=Dr;break;case"transparency":c.opacity=u;break;case"depthTest":case"depthWrite":case"colorWrite":case"opacity":case"reflectivity":case"transparent":case"visible":case"wireframe":c[l]=u;break;case"vertexColors":!0===u&&(c.vertexColors=zr),"face"===u&&(c.vertexColors=Fr)}}return"MeshBasicMaterial"===c.type&&delete c.emissive,"MeshPhongMaterial"!==c.type&&delete c.specular,c.opacity<1&&(c.transparent=!0),n.setTextures(h),n.parse(c)}}()});var hs={decodeText:function(t){if("undefined"!=typeof TextDecoder)return(new TextDecoder).decode(t);for(var e="",i=0,n=t.length;i<n;i++)e+=String.fromCharCode(t[i]);return e},extractUrlBase:function(t){var e=t.split("/");return 1===e.length?"./":(e.pop(),e.join("/")+"/")}};Object.assign(Ln.prototype,{load:function(t,e,i,n){var r=this,a=this.texturePath&&"string"==typeof this.texturePath?this.texturePath:hs.extractUrlBase(t),o=new Ii(this.manager);o.setWithCredentials(this.withCredentials),o.load(t,function(t){var i=JSON.parse(t),n=i.metadata;if(void 0!==n){var o=n.type;if(void 0!==o){if("object"===o.toLowerCase())return;if("scene"===o.toLowerCase())return}}var s=r.parse(i,a);e(s.geometry,s.materials)},i,n)},setTexturePath:function(t){this.texturePath=t},parse:function(){return function(t,e){void 0!==t.data&&(t=t.data),void 0!==t.scale?t.scale=1/t.scale:t.scale=1;var n=new ut;if(function(t,e){function n(t,e){return t&1<<e}var r,o,s,h,c,l,u,p,d,f,m,v,g,y,x,_,b,M,w,S,T,A,E,L,P,C=t.faces,I=t.vertices,R=t.normals,N=t.colors,O=t.scale,D=0;if(void 0!==t.uvs){for(r=0;r<t.uvs.length;r++)t.uvs[r].length&&D++;for(r=0;r<D;r++)e.faceVertexUvs[r]=[]}for(h=0,c=I.length;h<c;)(M=new a).x=I[h++]*O,M.y=I[h++]*O,M.z=I[h++]*O,e.vertices.push(M);for(h=0,c=C.length;h<c;)if(f=C[h++],m=n(f,0),v=n(f,1),g=n(f,3),y=n(f,4),x=n(f,5),_=n(f,6),b=n(f,7),m){if(S=new lt,S.a=C[h],S.b=C[h+1],S.c=C[h+3],T=new lt,T.a=C[h+1],T.b=C[h+2],T.c=C[h+3],h+=4,v&&(d=C[h++],S.materialIndex=d,T.materialIndex=d),s=e.faces.length,g)for(r=0;r<D;r++)for(L=t.uvs[r],e.faceVertexUvs[r][s]=[],e.faceVertexUvs[r][s+1]=[],o=0;o<4;o++)P=new i(L[2*(p=C[h++])],L[2*p+1]),2!==o&&e.faceVertexUvs[r][s].push(P),0!==o&&e.faceVertexUvs[r][s+1].push(P);if(y&&(u=3*C[h++],S.normal.set(R[u++],R[u++],R[u]),T.normal.copy(S.normal)),x)for(r=0;r<4;r++)u=3*C[h++],E=new a(R[u++],R[u++],R[u]),2!==r&&S.vertexNormals.push(E),0!==r&&T.vertexNormals.push(E);if(_&&(A=N[l=C[h++]],S.color.setHex(A),T.color.setHex(A)),b)for(r=0;r<4;r++)A=N[l=C[h++]],2!==r&&S.vertexColors.push(new H(A)),0!==r&&T.vertexColors.push(new H(A));e.faces.push(S),e.faces.push(T)}else{if(w=new lt,w.a=C[h++],w.b=C[h++],w.c=C[h++],v&&(d=C[h++],w.materialIndex=d),s=e.faces.length,g)for(r=0;r<D;r++)for(L=t.uvs[r],e.faceVertexUvs[r][s]=[],o=0;o<3;o++)P=new i(L[2*(p=C[h++])],L[2*p+1]),e.faceVertexUvs[r][s].push(P);if(y&&(u=3*C[h++],w.normal.set(R[u++],R[u++],R[u])),x)for(r=0;r<3;r++)u=3*C[h++],E=new a(R[u++],R[u++],R[u]),w.vertexNormals.push(E);if(_&&(l=C[h++],w.color.setHex(N[l])),b)for(r=0;r<3;r++)l=C[h++],w.vertexColors.push(new H(N[l]));e.faces.push(w)}}(t,n),function(t,e){var i=void 0!==t.influencesPerVertex?t.influencesPerVertex:2;if(t.skinWeights)for(var n=0,r=t.skinWeights.length;n<r;n+=i){var a=t.skinWeights[n],o=i>1?t.skinWeights[n+1]:0,s=i>2?t.skinWeights[n+2]:0,c=i>3?t.skinWeights[n+3]:0;e.skinWeights.push(new h(a,o,s,c))}if(t.skinIndices)for(n=0,r=t.skinIndices.length;n<r;n+=i){var l=t.skinIndices[n],u=i>1?t.skinIndices[n+1]:0,p=i>2?t.skinIndices[n+2]:0,d=i>3?t.skinIndices[n+3]:0;e.skinIndices.push(new h(l,u,p,d))}e.bones=t.bones,e.bones&&e.bones.length>0&&(e.skinWeights.length!==e.skinIndices.length||(e.skinIndices.length,e.vertices.length))}(t,n),function(t,e){var i=t.scale;if(void 0!==t.morphTargets)for(var n=0,r=t.morphTargets.length;n<r;n++){e.morphTargets[n]={},e.morphTargets[n].name=t.morphTargets[n].name,e.morphTargets[n].vertices=[];for(var o=e.morphTargets[n].vertices,s=t.morphTargets[n].vertices,h=0,c=s.length;h<c;h+=3){var l=new a;l.x=s[h]*i,l.y=s[h+1]*i,l.z=s[h+2]*i,o.push(l)}}if(void 0!==t.morphColors&&t.morphColors.length>0){var u=e.faces,p=t.morphColors[0].colors;for(n=0,r=u.length;n<r;n++)u[n].color.fromArray(p,3*n)}}(t,n),function(t,e){var i=[],n=[];void 0!==t.animation&&n.push(t.animation),void 0!==t.animations&&(t.animations.length?n=n.concat(t.animations):n.push(t.animations));for(var r=0;r<n.length;r++){var a=Sn.parseAnimation(n[r],e.bones);a&&i.push(a)}if(e.morphTargets){var o=Sn.CreateClipsFromMorphTargetSequences(e.morphTargets,10);i=i.concat(o)}i.length>0&&(e.animations=i)}(t,n),n.computeFaceNormals(),n.computeBoundingSphere(),void 0===t.materials||0===t.materials.length)return{geometry:n};return{geometry:n,materials:En.prototype.initMaterials(t.materials,e,this.crossOrigin)}}}()}),Object.assign(Pn.prototype,{load:function(t,e,i,n){""===this.texturePath&&(this.texturePath=t.substring(0,t.lastIndexOf("/")+1));var r=this;new Ii(r.manager).load(t,function(t){var i=null;try{i=JSON.parse(t)}catch(t){return void(void 0!==n&&n(t))}var a=i.metadata;void 0!==a&&void 0!==a.type&&"geometry"!==a.type.toLowerCase()&&r.parse(i,e)},i,n)},setTexturePath:function(t){this.texturePath=t},setCrossOrigin:function(t){this.crossOrigin=t},parse:function(t,e){var i=this.parseShape(t.shapes),n=this.parseGeometries(t.geometries,i),r=this.parseImages(t.images,function(){void 0!==e&&e(s)}),a=this.parseTextures(t.textures,r),o=this.parseMaterials(t.materials,a),s=this.parseObject(t.object,n,o);return t.animations&&(s.animations=this.parseAnimations(t.animations)),void 0!==t.images&&0!==t.images.length||void 0!==e&&e(s),s},parseShape:function(t){var e={};if(void 0!==t)for(var i=0,n=t.length;i<n;i++){var r=(new tn).fromJSON(t[i]);e[r.uuid]=r}return e},parseGeometries:function(t,e){var i={};if(void 0!==t)for(var n=new Ln,r=new An,a=0,o=t.length;a<o;a++){var s,h=t[a];switch(h.type){case"PlaneGeometry":case"PlaneBufferGeometry":s=new Jo[h.type](h.width,h.height,h.widthSegments,h.heightSegments);break;case"BoxGeometry":case"BoxBufferGeometry":case"CubeGeometry":s=new Jo[h.type](h.width,h.height,h.depth,h.widthSegments,h.heightSegments,h.depthSegments);break;case"CircleGeometry":case"CircleBufferGeometry":s=new Jo[h.type](h.radius,h.segments,h.thetaStart,h.thetaLength);break;case"CylinderGeometry":case"CylinderBufferGeometry":s=new Jo[h.type](h.radiusTop,h.radiusBottom,h.height,h.radialSegments,h.heightSegments,h.openEnded,h.thetaStart,h.thetaLength);break;case"ConeGeometry":case"ConeBufferGeometry":s=new Jo[h.type](h.radius,h.height,h.radialSegments,h.heightSegments,h.openEnded,h.thetaStart,h.thetaLength);break;case"SphereGeometry":case"SphereBufferGeometry":s=new Jo[h.type](h.radius,h.widthSegments,h.heightSegments,h.phiStart,h.phiLength,h.thetaStart,h.thetaLength);break;case"DodecahedronGeometry":case"DodecahedronBufferGeometry":case"IcosahedronGeometry":case"IcosahedronBufferGeometry":case"OctahedronGeometry":case"OctahedronBufferGeometry":case"TetrahedronGeometry":case"TetrahedronBufferGeometry":s=new Jo[h.type](h.radius,h.detail);break;case"RingGeometry":case"RingBufferGeometry":s=new Jo[h.type](h.innerRadius,h.outerRadius,h.thetaSegments,h.phiSegments,h.thetaStart,h.thetaLength);break;case"TorusGeometry":case"TorusBufferGeometry":s=new Jo[h.type](h.radius,h.tube,h.radialSegments,h.tubularSegments,h.arc);break;case"TorusKnotGeometry":case"TorusKnotBufferGeometry":s=new Jo[h.type](h.radius,h.tube,h.tubularSegments,h.radialSegments,h.p,h.q);break;case"LatheGeometry":case"LatheBufferGeometry":s=new Jo[h.type](h.points,h.segments,h.phiStart,h.phiLength);break;case"PolyhedronGeometry":case"PolyhedronBufferGeometry":s=new Jo[h.type](h.vertices,h.indices,h.radius,h.details);break;case"ShapeGeometry":case"ShapeBufferGeometry":var c=[];for(a=0,o=h.shapes.length;a<o;a++){var l=e[h.shapes[a]];c.push(l)}s=new Jo[h.type](c,h.curveSegments);break;case"BufferGeometry":s=r.parse(h);break;case"Geometry":s=n.parse(h,this.texturePath).geometry;break;default:continue}s.uuid=h.uuid,void 0!==h.name&&(s.name=h.name),i[h.uuid]=s}return i},parseMaterials:function(t,e){var i={};if(void 0!==t){var n=new Tn;n.setTextures(e);for(var r=0,a=t.length;r<a;r++){var o=t[r];if("MultiMaterial"===o.type){for(var s=[],h=0;h<o.materials.length;h++)s.push(n.parse(o.materials[h]));i[o.uuid]=s}else i[o.uuid]=n.parse(o)}}return i},parseAnimations:function(t){for(var e=[],i=0;i<t.length;i++){var n=Sn.parse(t[i]);e.push(n)}return e},parseImages:function(t,e){function i(t){return n.manager.itemStart(t),a.load(t,function(){n.manager.itemEnd(t)},void 0,function(){n.manager.itemEnd(t),n.manager.itemError(t)})}var n=this,r={};if(void 0!==t&&t.length>0){var a=new Oi(new Ci(e));a.setCrossOrigin(this.crossOrigin);for(var o=0,s=t.length;o<s;o++){var h=t[o],c=/^(\/\/)|([a-z]+:(\/\/)?)/i.test(h.url)?h.url:n.texturePath+h.url;r[h.uuid]=i(c)}}return r},parseTextures:function(t,e){function i(t,e){return"number"==typeof t?t:e[t]}var n={};if(void 0!==t)for(var r=0,a=t.length;r<a;r++){var o=t[r];o.image,e[o.image];var h=new s(e[o.image]);h.needsUpdate=!0,h.uuid=o.uuid,void 0!==o.name&&(h.name=o.name),void 0!==o.mapping&&(h.mapping=i(o.mapping,cs)),void 0!==o.offset&&h.offset.fromArray(o.offset),void 0!==o.repeat&&h.repeat.fromArray(o.repeat),void 0!==o.center&&h.center.fromArray(o.center),void 0!==o.rotation&&(h.rotation=o.rotation),void 0!==o.wrap&&(h.wrapS=i(o.wrap[0],ls),h.wrapT=i(o.wrap[1],ls)),void 0!==o.minFilter&&(h.minFilter=i(o.minFilter,us)),void 0!==o.magFilter&&(h.magFilter=i(o.magFilter,us)),void 0!==o.anisotropy&&(h.anisotropy=o.anisotropy),void 0!==o.flipY&&(h.flipY=o.flipY),n[o.uuid]=h}return n},parseObject:function(){var t=new n;return function(e,i,n){function r(t){return i[t],i[t]}function a(t){if(void 0!==t){if(Array.isArray(t)){for(var e=[],i=0,r=t.length;i<r;i++){var a=t[i];n[a],e.push(n[a])}return e}return n[t],n[t]}}var o;switch(e.type){case"Scene":o=new ne,void 0!==e.background&&Number.isInteger(e.background)&&(o.background=new H(e.background)),void 0!==e.fog&&("Fog"===e.fog.type?o.fog=new ie(e.fog.color,e.fog.near,e.fog.far):"FogExp2"===e.fog.type&&(o.fog=new ee(e.fog.color,e.fog.density)));break;case"PerspectiveCamera":o=new Jt(e.fov,e.aspect,e.near,e.far),void 0!==e.focus&&(o.focus=e.focus),void 0!==e.zoom&&(o.zoom=e.zoom),void 0!==e.filmGauge&&(o.filmGauge=e.filmGauge),void 0!==e.filmOffset&&(o.filmOffset=e.filmOffset),void 0!==e.view&&(o.view=Object.assign({},e.view));break;case"OrthographicCamera":o=new ct(e.left,e.right,e.top,e.bottom,e.near,e.far);break;case"AmbientLight":o=new ln(e.color,e.intensity);break;case"DirectionalLight":o=new cn(e.color,e.intensity);break;case"PointLight":o=new sn(e.color,e.intensity,e.distance,e.decay);break;case"RectAreaLight":o=new un(e.color,e.intensity,e.width,e.height);break;case"SpotLight":o=new on(e.color,e.intensity,e.distance,e.angle,e.penumbra,e.decay);break;case"HemisphereLight":o=new nn(e.color,e.groundColor,e.intensity);break;case"SkinnedMesh":case"Mesh":var s=r(e.geometry),h=a(e.material);o=s.bones&&s.bones.length>0?new le(s,h):new Ot(s,h);break;case"LOD":o=new se;break;case"Line":o=new pe(r(e.geometry),a(e.material),e.mode);break;case"LineLoop":o=new fe(r(e.geometry),a(e.material));break;case"LineSegments":o=new de(r(e.geometry),a(e.material));break;case"PointCloud":case"Points":o=new ve(r(e.geometry),a(e.material));break;case"Sprite":o=new oe(a(e.material));break;case"Group":o=new ge;break;default:o=new st}if(o.uuid=e.uuid,void 0!==e.name&&(o.name=e.name),void 0!==e.matrix?(t.fromArray(e.matrix),t.decompose(o.position,o.quaternion,o.scale)):(void 0!==e.position&&o.position.fromArray(e.position),void 0!==e.rotation&&o.rotation.fromArray(e.rotation),void 0!==e.quaternion&&o.quaternion.fromArray(e.quaternion),void 0!==e.scale&&o.scale.fromArray(e.scale)),void 0!==e.castShadow&&(o.castShadow=e.castShadow),void 0!==e.receiveShadow&&(o.receiveShadow=e.receiveShadow),e.shadow&&(void 0!==e.shadow.bias&&(o.shadow.bias=e.shadow.bias),void 0!==e.shadow.radius&&(o.shadow.radius=e.shadow.radius),void 0!==e.shadow.mapSize&&o.shadow.mapSize.fromArray(e.shadow.mapSize),void 0!==e.shadow.camera&&(o.shadow.camera=this.parseObject(e.shadow.camera))),void 0!==e.visible&&(o.visible=e.visible),void 0!==e.userData&&(o.userData=e.userData),void 0!==e.children)for(var c=e.children,l=0;l<c.length;l++)o.add(this.parseObject(c[l],i,n));if("LOD"===e.type)for(var u=e.levels,p=0;p<u.length;p++){var d=u[p],f=o.getObjectByProperty("uuid",d.object);void 0!==f&&o.addLevel(f,d.distance)}return o}}()});var cs={UVMapping:300,CubeReflectionMapping:wa,CubeRefractionMapping:Sa,EquirectangularReflectionMapping:Ta,EquirectangularRefractionMapping:Aa,SphericalReflectionMapping:Ea,CubeUVReflectionMapping:La,CubeUVRefractionMapping:Pa},ls={RepeatWrapping:Ca,ClampToEdgeWrapping:Ia,MirroredRepeatWrapping:Ra},us={NearestFilter:Na,NearestMipMapNearestFilter:Oa,NearestMipMapLinearFilter:Da,LinearFilter:Ua,LinearMipMapNearestFilter:Fa,LinearMipMapLinearFilter:za};Cn.prototype={constructor:Cn,setOptions:function(t){return this.options=t,this},load:function(t,e,i,n){void 0===t&&(t=""),void 0!==this.path&&(t=this.path+t);var r=this,a=Ko.get(t);if(void 0!==a)return r.manager.itemStart(t),setTimeout(function(){e&&e(a),r.manager.itemEnd(t)},0),a;fetch(t).then(function(t){return t.blob()}).then(function(t){return createImageBitmap(t,r.options)}).then(function(i){Ko.add(t,i),e&&e(i),r.manager.itemEnd(t)}).catch(function(e){n&&n(e),r.manager.itemEnd(t),r.manager.itemError(t)})},setCrossOrigin:function(){return this},setPath:function(t){return this.path=t,this}},Object.assign(In.prototype,{moveTo:function(t,e){this.currentPath=new $i,this.subPaths.push(this.currentPath),this.currentPath.moveTo(t,e)},lineTo:function(t,e){this.currentPath.lineTo(t,e)},quadraticCurveTo:function(t,e,i,n){this.currentPath.quadraticCurveTo(t,e,i,n)},bezierCurveTo:function(t,e,i,n,r,a){this.currentPath.bezierCurveTo(t,e,i,n,r,a)},splineThru:function(t){this.currentPath.splineThru(t)},toShapes:function(t,e){function i(t){for(var e=[],i=0,n=t.length;i<n;i++){var r=t[i],a=new tn;a.curves=r.curves,e.push(a)}return e}function n(t,e){for(var i=e.length,n=!1,r=i-1,a=0;a<i;r=a++){var o=e[r],s=e[a],h=s.x-o.x,c=s.y-o.y;if(Math.abs(c)>Number.EPSILON){if(c<0&&(o=e[a],h=-h,s=e[r],c=-c),t.y<o.y||t.y>s.y)continue;if(t.y===o.y){if(t.x===o.x)return!0}else{var l=c*(t.x-o.x)-h*(t.y-o.y);if(0===l)return!0;if(l<0)continue;n=!n}}else{if(t.y!==o.y)continue;if(s.x<=t.x&&t.x<=o.x||o.x<=t.x&&t.x<=s.x)return!0}}return n}var r=Zo.isClockWise,a=this.subPaths;if(0===a.length)return[];if(!0===e)return i(a);var o,s,h,c=[];if(1===a.length)return s=a[0],h=new tn,h.curves=s.curves,c.push(h),c;var l=!r(a[0].getPoints());l=t?!l:l;var u,p=[],d=[],f=[],m=0;d[m]=void 0,f[m]=[];for(var v=0,g=a.length;v<g;v++)o=r(u=(s=a[v]).getPoints()),(o=t?!o:o)?(!l&&d[m]&&m++,d[m]={s:new tn,p:u},d[m].s.curves=s.curves,l&&m++,f[m]=[]):f[m].push({h:s,p:u[0]});if(!d[0])return i(a);if(d.length>1){for(var y=!1,x=[],_=0,b=d.length;_<b;_++)p[_]=[];for(_=0,b=d.length;_<b;_++)for(var M=f[_],w=0;w<M.length;w++){for(var S=M[w],T=!0,A=0;A<d.length;A++)n(S.p,d[A].p)&&(_!==A&&x.push({froms:_,tos:A,hole:w}),T?(T=!1,p[A].push(S)):y=!0);T&&p[_].push(S)}x.length>0&&(y||(f=p))}v=0;for(var E,L=d.length;v<L;v++){h=d[v].s,c.push(h);for(var P=0,C=(E=f[v]).length;P<C;P++)h.holes.push(E[P].h)}return c}}),Object.assign(Rn.prototype,{isFont:!0,generateShapes:function(t,e,i){void 0===e&&(e=100),void 0===i&&(i=4);for(var n=this.data,r=function(t){for(var i=String(t).split(""),r=e/n.resolution,a=(n.boundingBox.yMax-n.boundingBox.yMin+n.underlineThickness)*r,o=0,s=0,h=[],c=0;c<i.length;c++){var l=i[c];if("\n"===l)o=0,s-=a;else{var u=function(t,e,i,r){var a=n.glyphs[t]||n.glyphs["?"];if(a){var o,s,h,c,l,u,p,d,f,m=new In,v=[];if(a.o)for(var g=a._cachedOutline||(a._cachedOutline=a.o.split(" ")),y=0,x=g.length;y<x;){var _=g[y++];switch(_){case"m":o=g[y++]*e+i,s=g[y++]*e+r,m.moveTo(o,s);break;case"l":o=g[y++]*e+i,s=g[y++]*e+r,m.lineTo(o,s);break;case"q":h=g[y++]*e+i,c=g[y++]*e+r,l=g[y++]*e+i,u=g[y++]*e+r,m.quadraticCurveTo(l,u,h,c),(f=v[v.length-1])&&(f.x,f.y);break;case"b":h=g[y++]*e+i,c=g[y++]*e+r,l=g[y++]*e+i,u=g[y++]*e+r,p=g[y++]*e+i,d=g[y++]*e+r,m.bezierCurveTo(l,u,p,d,h,c),(f=v[v.length-1])&&(f.x,f.y)}}return{offsetX:a.ha*e,path:m}}}(l,r,o,s);o+=u.offsetX,h.push(u.path)}}return h}(t),a=[],o=0,s=r.length;o<s;o++)Array.prototype.push.apply(a,r[o].toShapes());return a}}),Object.assign(Nn.prototype,{load:function(t,e,i,n){var r=this,a=new Ii(this.manager);a.setPath(this.path),a.load(t,function(t){var i;try{i=JSON.parse(t)}catch(e){i=JSON.parse(t.substring(65,t.length-2))}var n=r.parse(i);e&&e(n)},i,n)},parse:function(t){return new Rn(t)},setPath:function(t){return this.path=t,this}});var ps,ds={getContext:function(){return void 0===ps&&(ps=new(window.AudioContext||window.webkitAudioContext)),ps},setContext:function(t){ps=t}};Object.assign(On.prototype,{load:function(t,e,i,n){var r=new Ii(this.manager);r.setResponseType("arraybuffer"),r.load(t,function(t){ds.getContext().decodeAudioData(t,function(t){e(t)})},i,n)}}),Object.assign(Dn.prototype,{update:function(){var t,e,i,r,a,o,s,h,c=new n,l=new n;return function(n){if(t!==this||e!==n.focus||i!==n.fov||r!==n.aspect*this.aspect||a!==n.near||o!==n.far||s!==n.zoom||h!==this.eyeSep){t=this,e=n.focus,i=n.fov,r=n.aspect*this.aspect,a=n.near,o=n.far,s=n.zoom;var u,p,d=n.projectionMatrix.clone(),f=(h=this.eyeSep/2)*a/e,m=a*Math.tan(Po.DEG2RAD*i*.5)/s;l.elements[12]=-h,c.elements[12]=h,u=-m*r+f,p=m*r+f,d.elements[0]=2*a/(p-u),d.elements[8]=(p+u)/(p-u),this.cameraL.projectionMatrix.copy(d),u=-m*r-f,p=m*r-f,d.elements[0]=2*a/(p-u),d.elements[8]=(p+u)/(p-u),this.cameraR.projectionMatrix.copy(d)}this.cameraL.matrixWorld.copy(n.matrixWorld).multiply(l),this.cameraR.matrixWorld.copy(n.matrixWorld).multiply(c)}}()}),(Un.prototype=Object.create(st.prototype)).constructor=Un,Fn.prototype=Object.assign(Object.create(st.prototype),{constructor:Fn,getInput:function(){return this.gain},removeFilter:function(){null!==this.filter&&(this.gain.disconnect(this.filter),this.filter.disconnect(this.context.destination),this.gain.connect(this.context.destination),this.filter=null)},getFilter:function(){return this.filter},setFilter:function(t){null!==this.filter?(this.gain.disconnect(this.filter),this.filter.disconnect(this.context.destination)):this.gain.disconnect(this.context.destination),this.filter=t,this.gain.connect(this.filter),this.filter.connect(this.context.destination)},getMasterVolume:function(){return this.gain.gain.value},setMasterVolume:function(t){this.gain.gain.value=t},updateMatrixWorld:function(){var t=new a,e=new r,i=new a,n=new a;return function(r){st.prototype.updateMatrixWorld.call(this,r);var a=this.context.listener,o=this.up;this.matrixWorld.decompose(t,e,i),n.set(0,0,-1).applyQuaternion(e),a.positionX?(a.positionX.setValueAtTime(t.x,this.context.currentTime),a.positionY.setValueAtTime(t.y,this.context.currentTime),a.positionZ.setValueAtTime(t.z,this.context.currentTime),a.forwardX.setValueAtTime(n.x,this.context.currentTime),a.forwardY.setValueAtTime(n.y,this.context.currentTime),a.forwardZ.setValueAtTime(n.z,this.context.currentTime),a.upX.setValueAtTime(o.x,this.context.currentTime),a.upY.setValueAtTime(o.y,this.context.currentTime),a.upZ.setValueAtTime(o.z,this.context.currentTime)):(a.setPosition(t.x,t.y,t.z),a.setOrientation(n.x,n.y,n.z,o.x,o.y,o.z))}}()}),zn.prototype=Object.assign(Object.create(st.prototype),{constructor:zn,getOutput:function(){return this.gain},setNodeSource:function(t){return this.hasPlaybackControl=!1,this.sourceType="audioNode",this.source=t,this.connect(),this},setBuffer:function(t){return this.buffer=t,this.sourceType="buffer",this.autoplay&&this.play(),this},play:function(){if(!0!==this.isPlaying&&!1!==this.hasPlaybackControl){var t=this.context.createBufferSource();return t.buffer=this.buffer,t.loop=this.loop,t.onended=this.onEnded.bind(this),t.playbackRate.setValueAtTime(this.playbackRate,this.startTime),this.startTime=this.context.currentTime,t.start(this.startTime,this.offset),this.isPlaying=!0,this.source=t,this.connect()}},pause:function(){if(!1!==this.hasPlaybackControl)return!0===this.isPlaying&&(this.source.stop(),this.offset+=(this.context.currentTime-this.startTime)*this.playbackRate,this.isPlaying=!1),this},stop:function(){if(!1!==this.hasPlaybackControl)return this.source.stop(),this.offset=0,this.isPlaying=!1,this},connect:function(){if(this.filters.length>0){this.source.connect(this.filters[0]);for(var t=1,e=this.filters.length;t<e;t++)this.filters[t-1].connect(this.filters[t]);this.filters[this.filters.length-1].connect(this.getOutput())}else this.source.connect(this.getOutput());return this},disconnect:function(){if(this.filters.length>0){this.source.disconnect(this.filters[0]);for(var t=1,e=this.filters.length;t<e;t++)this.filters[t-1].disconnect(this.filters[t]);this.filters[this.filters.length-1].disconnect(this.getOutput())}else this.source.disconnect(this.getOutput());return this},getFilters:function(){return this.filters},setFilters:function(t){return t||(t=[]),!0===this.isPlaying?(this.disconnect(),this.filters=t,this.connect()):this.filters=t,this},getFilter:function(){return this.getFilters()[0]},setFilter:function(t){return this.setFilters(t?[t]:[])},setPlaybackRate:function(t){if(!1!==this.hasPlaybackControl)return this.playbackRate=t,!0===this.isPlaying&&this.source.playbackRate.setValueAtTime(this.playbackRate,this.context.currentTime),this},getPlaybackRate:function(){return this.playbackRate},onEnded:function(){this.isPlaying=!1},getLoop:function(){return!1!==this.hasPlaybackControl&&this.loop},setLoop:function(t){if(!1!==this.hasPlaybackControl)return this.loop=t,!0===this.isPlaying&&(this.source.loop=this.loop),this},getVolume:function(){return this.gain.gain.value},setVolume:function(t){return this.gain.gain.value=t,this}}),Bn.prototype=Object.assign(Object.create(zn.prototype),{constructor:Bn,getOutput:function(){return this.panner},getRefDistance:function(){return this.panner.refDistance},setRefDistance:function(t){this.panner.refDistance=t},getRolloffFactor:function(){return this.panner.rolloffFactor},setRolloffFactor:function(t){this.panner.rolloffFactor=t},getDistanceModel:function(){return this.panner.distanceModel},setDistanceModel:function(t){this.panner.distanceModel=t},getMaxDistance:function(){return this.panner.maxDistance},setMaxDistance:function(t){this.panner.maxDistance=t},updateMatrixWorld:function(){var t=new a;return function(e){st.prototype.updateMatrixWorld.call(this,e),t.setFromMatrixPosition(this.matrixWorld),this.panner.setPosition(t.x,t.y,t.z)}}()}),Object.assign(Gn.prototype,{getFrequencyData:function(){return this.analyser.getByteFrequencyData(this.data),this.data},getAverageFrequency:function(){for(var t=0,e=this.getFrequencyData(),i=0;i<e.length;i++)t+=e[i];return t/e.length}}),Object.assign(Vn.prototype,{accumulate:function(t,e){var i=this.buffer,n=this.valueSize,r=t*n+n,a=this.cumulativeWeight;if(0===a){for(var o=0;o!==n;++o)i[r+o]=i[o];a=e}else{var s=e/(a+=e);this._mixBufferRegion(i,r,0,s,n)}this.cumulativeWeight=a},apply:function(t){var e=this.valueSize,i=this.buffer,n=t*e+e,r=this.cumulativeWeight,a=this.binding;if(this.cumulativeWeight=0,r<1){var o=3*e;this._mixBufferRegion(i,n,o,1-r,e)}for(var s=e,h=e+e;s!==h;++s)if(i[s]!==i[s+e]){a.setValue(i,n);break}},saveOriginalState:function(){var t=this.binding,e=this.buffer,i=this.valueSize,n=3*i;t.getValue(e,n);for(var r=i,a=n;r!==a;++r)e[r]=e[n+r%i];this.cumulativeWeight=0},restoreOriginalState:function(){var t=3*this.valueSize;this.binding.setValue(this.buffer,t)},_select:function(t,e,i,n,r){if(n>=.5)for(var a=0;a!==r;++a)t[e+a]=t[i+a]},_slerp:function(t,e,i,n){r.slerpFlat(t,e,t,e,t,i,n)},_lerp:function(t,e,i,n,r){for(var a=1-n,o=0;o!==r;++o){var s=e+o;t[s]=t[s]*a+t[i+o]*n}}}),Object.assign(kn.prototype,{getValue:function(t,e){this.bind();var i=this._targetGroup.nCachedObjects_,n=this._bindings[i];void 0!==n&&n.getValue(t,e)},setValue:function(t,e){for(var i=this._bindings,n=this._targetGroup.nCachedObjects_,r=i.length;n!==r;++n)i[n].setValue(t,e)},bind:function(){for(var t=this._bindings,e=this._targetGroup.nCachedObjects_,i=t.length;e!==i;++e)t[e].bind()},unbind:function(){for(var t=this._bindings,e=this._targetGroup.nCachedObjects_,i=t.length;e!==i;++e)t[e].unbind()}}),Object.assign(jn,{Composite:kn,create:function(t,e,i){return t&&t.isAnimationObjectGroup?new jn.Composite(t,e,i):new jn(t,e,i)},sanitizeNodeName:function(t){return t.replace(/\s/g,"_").replace(/[^\w-]/g,"")},parseTrackName:function(){var t=new RegExp("^"+/((?:[\w-]+[\/:])*)/.source+/([\w-\.]+)?/.source+/(?:\.([\w-]+)(?:\[(.+)\])?)?/.source+/\.([\w-]+)(?:\[(.+)\])?/.source+"$"),e=["material","materials","bones"];return function(i){var n=t.exec(i);if(!n)throw new Error("PropertyBinding: Cannot parse trackName: "+i);var r={nodeName:n[2],objectName:n[3],objectIndex:n[4],propertyName:n[5],propertyIndex:n[6]},a=r.nodeName&&r.nodeName.lastIndexOf(".");if(void 0!==a&&-1!==a){var o=r.nodeName.substring(a+1);-1!==e.indexOf(o)&&(r.nodeName=r.nodeName.substring(0,a),r.objectName=o)}if(null===r.propertyName||0===r.propertyName.length)throw new Error("PropertyBinding: can not parse propertyName from trackName: "+i);return r}}(),findNode:function(t,e){if(!e||""===e||"root"===e||"."===e||-1===e||e===t.name||e===t.uuid)return t;if(t.skeleton){var i=function(t){for(var i=0;i<t.bones.length;i++){var n=t.bones[i];if(n.name===e)return n}return null}(t.skeleton);if(i)return i}if(t.children){var n=function(t){for(var i=0;i<t.length;i++){var r=t[i];if(r.name===e||r.uuid===e)return r;var a=n(r.children);if(a)return a}return null},r=n(t.children);if(r)return r}return null}}),Object.assign(jn.prototype,{_getValue_unavailable:function(){},_setValue_unavailable:function(){},BindingType:{Direct:0,EntireArray:1,ArrayElement:2,HasFromToArray:3},Versioning:{None:0,NeedsUpdate:1,MatrixWorldNeedsUpdate:2},GetterByBindingType:[function(t,e){t[e]=this.node[this.propertyName]},function(t,e){for(var i=this.resolvedProperty,n=0,r=i.length;n!==r;++n)t[e++]=i[n]},function(t,e){t[e]=this.resolvedProperty[this.propertyIndex]},function(t,e){this.resolvedProperty.toArray(t,e)}],SetterByBindingTypeAndVersioning:[[function(t,e){this.targetObject[this.propertyName]=t[e]},function(t,e){this.targetObject[this.propertyName]=t[e],this.targetObject.needsUpdate=!0},function(t,e){this.targetObject[this.propertyName]=t[e],this.targetObject.matrixWorldNeedsUpdate=!0}],[function(t,e){for(var i=this.resolvedProperty,n=0,r=i.length;n!==r;++n)i[n]=t[e++]},function(t,e){for(var i=this.resolvedProperty,n=0,r=i.length;n!==r;++n)i[n]=t[e++];this.targetObject.needsUpdate=!0},function(t,e){for(var i=this.resolvedProperty,n=0,r=i.length;n!==r;++n)i[n]=t[e++];this.targetObject.matrixWorldNeedsUpdate=!0}],[function(t,e){this.resolvedProperty[this.propertyIndex]=t[e]},function(t,e){this.resolvedProperty[this.propertyIndex]=t[e],this.targetObject.needsUpdate=!0},function(t,e){this.resolvedProperty[this.propertyIndex]=t[e],this.targetObject.matrixWorldNeedsUpdate=!0}],[function(t,e){this.resolvedProperty.fromArray(t,e)},function(t,e){this.resolvedProperty.fromArray(t,e),this.targetObject.needsUpdate=!0},function(t,e){this.resolvedProperty.fromArray(t,e),this.targetObject.matrixWorldNeedsUpdate=!0}]],getValue:function(t,e){this.bind(),this.getValue(t,e)},setValue:function(t,e){this.bind(),this.setValue(t,e)},bind:function(){var t=this.node,e=this.parsedPath,i=e.objectName,n=e.propertyName,r=e.propertyIndex;if(t||(t=jn.findNode(this.rootNode,e.nodeName)||this.rootNode,this.node=t),this.getValue=this._getValue_unavailable,this.setValue=this._setValue_unavailable,t){if(i){var a=e.objectIndex;switch(i){case"materials":if(!t.material)return;if(!t.material.materials)return;t=t.material.materials;break;case"bones":if(!t.skeleton)return;t=t.skeleton.bones;for(var o=0;o<t.length;o++)if(t[o].name===a){a=o;break}break;default:if(void 0===t[i])return;t=t[i]}if(void 0!==a){if(void 0===t[a])return;t=t[a]}}var s=t[n];if(void 0!==s){var h=this.Versioning.None;void 0!==t.needsUpdate?(h=this.Versioning.NeedsUpdate,this.targetObject=t):void 0!==t.matrixWorldNeedsUpdate&&(h=this.Versioning.MatrixWorldNeedsUpdate,this.targetObject=t);var c=this.BindingType.Direct;if(void 0!==r){if("morphTargetInfluences"===n){if(!t.geometry)return;if(t.geometry.isBufferGeometry){if(!t.geometry.morphAttributes)return;for(o=0;o<this.node.geometry.morphAttributes.position.length;o++)if(t.geometry.morphAttributes.position[o].name===r){r=o;break}}else{if(!t.geometry.morphTargets)return;for(o=0;o<this.node.geometry.morphTargets.length;o++)if(t.geometry.morphTargets[o].name===r){r=o;break}}}c=this.BindingType.ArrayElement,this.resolvedProperty=s,this.propertyIndex=r}else void 0!==s.fromArray&&void 0!==s.toArray?(c=this.BindingType.HasFromToArray,this.resolvedProperty=s):Array.isArray(s)?(c=this.BindingType.EntireArray,this.resolvedProperty=s):this.propertyName=n;this.getValue=this.GetterByBindingType[c],this.setValue=this.SetterByBindingTypeAndVersioning[c][h]}else e.nodeName}},unbind:function(){this.node=null,this.getValue=this._getValue_unbound,this.setValue=this._setValue_unbound}}),Object.assign(jn.prototype,{_getValue_unbound:jn.prototype.getValue,_setValue_unbound:jn.prototype.setValue}),Object.assign(Wn.prototype,{isAnimationObjectGroup:!0,add:function(){for(var t=this._objects,e=t.length,i=this.nCachedObjects_,n=this._indicesByUUID,r=this._paths,a=this._parsedPaths,o=this._bindings,s=o.length,h=0,c=arguments.length;h!==c;++h){var l=arguments[h],u=l.uuid,p=n[u];if(void 0===p){p=e++,n[u]=p,t.push(l);for(var d=0,f=s;d!==f;++d)o[d].push(new jn(l,r[d],a[d]))}else if(p<i){t[p];var m=--i,v=t[m];n[v.uuid]=p,t[p]=v,n[u]=m,t[m]=l;for(d=0,f=s;d!==f;++d){var g=o[d],y=g[m],x=g[p];g[p]=y,void 0===x&&(x=new jn(l,r[d],a[d])),g[m]=x}}else t[p]}this.nCachedObjects_=i},remove:function(){for(var t=this._objects,e=this.nCachedObjects_,i=this._indicesByUUID,n=this._bindings,r=n.length,a=0,o=arguments.length;a!==o;++a){var s=arguments[a],h=s.uuid,c=i[h];if(void 0!==c&&c>=e){var l=e++,u=t[l];i[u.uuid]=c,t[c]=u,i[h]=l,t[l]=s;for(var p=0,d=r;p!==d;++p){var f=n[p],m=f[l],v=f[c];f[c]=m,f[l]=v}}}this.nCachedObjects_=e},uncache:function(){for(var t=this._objects,e=t.length,i=this.nCachedObjects_,n=this._indicesByUUID,r=this._bindings,a=r.length,o=0,s=arguments.length;o!==s;++o){var h=arguments[o].uuid,c=n[h];if(void 0!==c)if(delete n[h],c<i){var l=--i,u=t[l],p=t[g=--e];n[u.uuid]=c,t[c]=u,n[p.uuid]=l,t[l]=p,t.pop();for(var d=0,f=a;d!==f;++d){var m=(y=r[d])[l],v=y[g];y[c]=m,y[l]=v,y.pop()}}else{var g;n[(p=t[g=--e]).uuid]=c,t[c]=p,t.pop();for(d=0,f=a;d!==f;++d){var y;(y=r[d])[c]=y[g],y.pop()}}}this.nCachedObjects_=i},subscribe_:function(t,e){var i=this._bindingsIndicesByPath,n=i[t],r=this._bindings;if(void 0!==n)return r[n];var a=this._paths,o=this._parsedPaths,s=this._objects,h=s.length,c=this.nCachedObjects_,l=new Array(h);n=r.length,i[t]=n,a.push(t),o.push(e),r.push(l);for(var u=c,p=s.length;u!==p;++u){var d=s[u];l[u]=new jn(d,t,e)}return l},unsubscribe_:function(t){var e=this._bindingsIndicesByPath,i=e[t];if(void 0!==i){var n=this._paths,r=this._parsedPaths,a=this._bindings,o=a.length-1,s=a[o];e[t[o]]=i,a[i]=s,a.pop(),r[i]=r[o],r.pop(),n[i]=n[o],n.pop()}}}),Object.assign(Hn.prototype,{play:function(){return this._mixer._activateAction(this),this},stop:function(){return this._mixer._deactivateAction(this),this.reset()},reset:function(){return this.paused=!1,this.enabled=!0,this.time=0,this._loopCount=-1,this._startTime=null,this.stopFading().stopWarping()},isRunning:function(){return this.enabled&&!this.paused&&0!==this.timeScale&&null===this._startTime&&this._mixer._isActiveAction(this)},isScheduled:function(){return this._mixer._isActiveAction(this)},startAt:function(t){return this._startTime=t,this},setLoop:function(t,e){return this.loop=t,this.repetitions=e,this},setEffectiveWeight:function(t){return this.weight=t,this._effectiveWeight=this.enabled?t:0,this.stopFading()},getEffectiveWeight:function(){return this._effectiveWeight},fadeIn:function(t){return this._scheduleFading(t,0,1)},fadeOut:function(t){return this._scheduleFading(t,1,0)},crossFadeFrom:function(t,e,i){if(t.fadeOut(e),this.fadeIn(e),i){var n=this._clip.duration,r=t._clip.duration,a=r/n,o=n/r;t.warp(1,a,e),this.warp(o,1,e)}return this},crossFadeTo:function(t,e,i){return t.crossFadeFrom(this,e,i)},stopFading:function(){var t=this._weightInterpolant;return null!==t&&(this._weightInterpolant=null,this._mixer._takeBackControlInterpolant(t)),this},setEffectiveTimeScale:function(t){return this.timeScale=t,this._effectiveTimeScale=this.paused?0:t,this.stopWarping()},getEffectiveTimeScale:function(){return this._effectiveTimeScale},setDuration:function(t){return this.timeScale=this._clip.duration/t,this.stopWarping()},syncWith:function(t){return this.time=t.time,this.timeScale=t.timeScale,this.stopWarping()},halt:function(t){return this.warp(this._effectiveTimeScale,0,t)},warp:function(t,e,i){var n=this._mixer,r=n.time,a=this._timeScaleInterpolant,o=this.timeScale;null===a&&(a=n._lendControlInterpolant(),this._timeScaleInterpolant=a);var s=a.parameterPositions,h=a.sampleValues;return s[0]=r,s[1]=r+i,h[0]=t/o,h[1]=e/o,this},stopWarping:function(){var t=this._timeScaleInterpolant;return null!==t&&(this._timeScaleInterpolant=null,this._mixer._takeBackControlInterpolant(t)),this},getMixer:function(){return this._mixer},getClip:function(){return this._clip},getRoot:function(){return this._localRoot||this._mixer._root},_update:function(t,e,i,n){if(this.enabled){var r=this._startTime;if(null!==r){var a=(t-r)*i;if(a<0||0===i)return;this._startTime=null,e=i*a}e*=this._updateTimeScale(t);var o=this._updateTime(e),s=this._updateWeight(t);if(s>0)for(var h=this._interpolants,c=this._propertyBindings,l=0,u=h.length;l!==u;++l)h[l].evaluate(o),c[l].accumulate(n,s)}else this._updateWeight(t)},_updateWeight:function(t){var e=0;if(this.enabled){e=this.weight;var i=this._weightInterpolant;if(null!==i){var n=i.evaluate(t)[0];e*=n,t>i.parameterPositions[1]&&(this.stopFading(),0===n&&(this.enabled=!1))}}return this._effectiveWeight=e,e},_updateTimeScale:function(t){var e=0;if(!this.paused){e=this.timeScale;var i=this._timeScaleInterpolant;if(null!==i){e*=i.evaluate(t)[0],t>i.parameterPositions[1]&&(this.stopWarping(),0===e?this.paused=!0:this.timeScale=e)}}return this._effectiveTimeScale=e,e},_updateTime:function(t){var e=this.time+t;if(0===t)return e;var i=this._clip.duration,n=this.loop,r=this._loopCount;if(2200===n){-1===r&&(this._loopCount=0,this._setEndings(!0,!0,!1));t:{if(e>=i)e=i;else{if(!(e<0))break t;e=0}this.clampWhenFinished?this.paused=!0:this.enabled=!1,this._mixer.dispatchEvent({type:"finished",action:this,direction:t<0?-1:1})}}else{var a=2202===n;if(-1===r&&(t>=0?(r=0,this._setEndings(!0,0===this.repetitions,a)):this._setEndings(0===this.repetitions,!0,a)),e>=i||e<0){var o=Math.floor(e/i);e-=i*o,r+=Math.abs(o);var s=this.repetitions-r;if(s<0)this.clampWhenFinished?this.paused=!0:this.enabled=!1,e=t>0?i:0,this._mixer.dispatchEvent({type:"finished",action:this,direction:t>0?1:-1});else{if(0===s){var h=t<0;this._setEndings(h,!h,a)}else this._setEndings(!1,!1,a);this._loopCount=r,this._mixer.dispatchEvent({type:"loop",action:this,loopDelta:o})}}if(a&&1==(1&r))return this.time=e,i-e}return this.time=e,e},_setEndings:function(t,e,i){var n=this._interpolantSettings;i?(n.endingStart=2401,n.endingEnd=2401):(n.endingStart=t?this.zeroSlopeAtStart?2401:vo:2402,n.endingEnd=e?this.zeroSlopeAtEnd?2401:vo:2402)},_scheduleFading:function(t,e,i){var n=this._mixer,r=n.time,a=this._weightInterpolant;null===a&&(a=n._lendControlInterpolant(),this._weightInterpolant=a);var o=a.parameterPositions,s=a.sampleValues;return o[0]=r,s[0]=e,o[1]=r+t,s[1]=i,this}}),Xn.prototype=Object.assign(Object.create(e.prototype),{constructor:Xn,_bindAction:function(t,e){var i=t._localRoot||this._root,n=t._clip.tracks,r=n.length,a=t._propertyBindings,o=t._interpolants,s=i.uuid,h=this._bindingsByRootAndName,c=h[s];void 0===c&&(c={},h[s]=c);for(var l=0;l!==r;++l){var u=n[l],p=u.name,d=c[p];if(void 0!==d)a[l]=d;else{if(void 0!==(d=a[l])){null===d._cacheIndex&&(++d.referenceCount,this._addInactiveBinding(d,s,p));continue}var f=e&&e._propertyBindings[l].binding.parsedPath;++(d=new Vn(jn.create(i,p,f),u.ValueTypeName,u.getValueSize())).referenceCount,this._addInactiveBinding(d,s,p),a[l]=d}o[l].resultBuffer=d.buffer}},_activateAction:function(t){if(!this._isActiveAction(t)){if(null===t._cacheIndex){var e=(t._localRoot||this._root).uuid,i=t._clip.uuid,n=this._actionsByClip[i];this._bindAction(t,n&&n.knownActions[0]),this._addInactiveAction(t,i,e)}for(var r=t._propertyBindings,a=0,o=r.length;a!==o;++a){var s=r[a];0==s.useCount++&&(this._lendBinding(s),s.saveOriginalState())}this._lendAction(t)}},_deactivateAction:function(t){if(this._isActiveAction(t)){for(var e=t._propertyBindings,i=0,n=e.length;i!==n;++i){var r=e[i];0==--r.useCount&&(r.restoreOriginalState(),this._takeBackBinding(r))}this._takeBackAction(t)}},_initMemoryManager:function(){this._actions=[],this._nActiveActions=0,this._actionsByClip={},this._bindings=[],this._nActiveBindings=0,this._bindingsByRootAndName={},this._controlInterpolants=[],this._nActiveControlInterpolants=0;var t=this;this.stats={actions:{get total(){return t._actions.length},get inUse(){return t._nActiveActions}},bindings:{get total(){return t._bindings.length},get inUse(){return t._nActiveBindings}},controlInterpolants:{get total(){return t._controlInterpolants.length},get inUse(){return t._nActiveControlInterpolants}}}},_isActiveAction:function(t){var e=t._cacheIndex;return null!==e&&e<this._nActiveActions},_addInactiveAction:function(t,e,i){var n=this._actions,r=this._actionsByClip,a=r[e];if(void 0===a)a={knownActions:[t],actionByRoot:{}},t._byClipCacheIndex=0,r[e]=a;else{var o=a.knownActions;t._byClipCacheIndex=o.length,o.push(t)}t._cacheIndex=n.length,n.push(t),a.actionByRoot[i]=t},_removeInactiveAction:function(t){var e=this._actions,i=e[e.length-1],n=t._cacheIndex;i._cacheIndex=n,e[n]=i,e.pop(),t._cacheIndex=null;var r=t._clip.uuid,a=this._actionsByClip,o=a[r],s=o.knownActions,h=s[s.length-1],c=t._byClipCacheIndex;h._byClipCacheIndex=c,s[c]=h,s.pop(),t._byClipCacheIndex=null;delete o.actionByRoot[(t._localRoot||this._root).uuid],0===s.length&&delete a[r],this._removeInactiveBindingsForAction(t)},_removeInactiveBindingsForAction:function(t){for(var e=t._propertyBindings,i=0,n=e.length;i!==n;++i){var r=e[i];0==--r.referenceCount&&this._removeInactiveBinding(r)}},_lendAction:function(t){var e=this._actions,i=t._cacheIndex,n=this._nActiveActions++,r=e[n];t._cacheIndex=n,e[n]=t,r._cacheIndex=i,e[i]=r},_takeBackAction:function(t){var e=this._actions,i=t._cacheIndex,n=--this._nActiveActions,r=e[n];t._cacheIndex=n,e[n]=t,r._cacheIndex=i,e[i]=r},_addInactiveBinding:function(t,e,i){var n=this._bindingsByRootAndName,r=n[e],a=this._bindings;void 0===r&&(r={},n[e]=r),r[i]=t,t._cacheIndex=a.length,a.push(t)},_removeInactiveBinding:function(t){var e=this._bindings,i=t.binding,n=i.rootNode.uuid,r=i.path,a=this._bindingsByRootAndName,o=a[n],s=e[e.length-1],h=t._cacheIndex;s._cacheIndex=h,e[h]=s,e.pop(),delete o[r];t:{for(var c in o)break t;delete a[n]}},_lendBinding:function(t){var e=this._bindings,i=t._cacheIndex,n=this._nActiveBindings++,r=e[n];t._cacheIndex=n,e[n]=t,r._cacheIndex=i,e[i]=r},_takeBackBinding:function(t){var e=this._bindings,i=t._cacheIndex,n=--this._nActiveBindings,r=e[n];t._cacheIndex=n,e[n]=t,r._cacheIndex=i,e[i]=r},_lendControlInterpolant:function(){var t=this._controlInterpolants,e=this._nActiveControlInterpolants++,i=t[e];return void 0===i&&((i=new _n(new Float32Array(2),new Float32Array(2),1,this._controlInterpolantsResultBuffer)).__cacheIndex=e,t[e]=i),i},_takeBackControlInterpolant:function(t){var e=this._controlInterpolants,i=t.__cacheIndex,n=--this._nActiveControlInterpolants,r=e[n];t.__cacheIndex=n,e[n]=t,r.__cacheIndex=i,e[i]=r},_controlInterpolantsResultBuffer:new Float32Array(1),clipAction:function(t,e){var i=e||this._root,n=i.uuid,r="string"==typeof t?Sn.findByName(i,t):t,a=null!==r?r.uuid:t,o=this._actionsByClip[a],s=null;if(void 0!==o){var h=o.actionByRoot[n];if(void 0!==h)return h;s=o.knownActions[0],null===r&&(r=s._clip)}if(null===r)return null;var c=new Hn(this,r,e);return this._bindAction(c,s),this._addInactiveAction(c,a,n),c},existingAction:function(t,e){var i=e||this._root,n=i.uuid,r="string"==typeof t?Sn.findByName(i,t):t,a=r?r.uuid:t,o=this._actionsByClip[a];return void 0!==o?o.actionByRoot[n]||null:null},stopAllAction:function(){var t=this._actions,e=this._nActiveActions,i=this._bindings,n=this._nActiveBindings;this._nActiveActions=0,this._nActiveBindings=0;for(var r=0;r!==e;++r)t[r].reset();for(r=0;r!==n;++r)i[r].useCount=0;return this},update:function(t){t*=this.timeScale;for(var e=this._actions,i=this._nActiveActions,n=this.time+=t,r=Math.sign(t),a=this._accuIndex^=1,o=0;o!==i;++o){e[o]._update(n,t,r,a)}var s=this._bindings,h=this._nActiveBindings;for(o=0;o!==h;++o)s[o].apply(a);return this},getRoot:function(){return this._root},uncacheClip:function(t){var e=this._actions,i=t.uuid,n=this._actionsByClip,r=n[i];if(void 0!==r){for(var a=r.knownActions,o=0,s=a.length;o!==s;++o){var h=a[o];this._deactivateAction(h);var c=h._cacheIndex,l=e[e.length-1];h._cacheIndex=null,h._byClipCacheIndex=null,l._cacheIndex=c,e[c]=l,e.pop(),this._removeInactiveBindingsForAction(h)}delete n[i]}},uncacheRoot:function(t){var e=t.uuid,i=this._actionsByClip;for(var n in i){var r=i[n].actionByRoot[e];void 0!==r&&(this._deactivateAction(r),this._removeInactiveAction(r))}var a=this._bindingsByRootAndName[e];if(void 0!==a)for(var o in a){var s=a[o];s.restoreOriginalState(),this._removeInactiveBinding(s)}},uncacheAction:function(t,e){var i=this.existingAction(t,e);null!==i&&(this._deactivateAction(i),this._removeInactiveAction(i))}}),qn.prototype.clone=function(){return new qn(void 0===this.value.clone?this.value:this.value.clone())},Yn.prototype=Object.assign(Object.create(St.prototype),{constructor:Yn,isInstancedBufferGeometry:!0,copy:function(t){return St.prototype.copy.call(this,t),this.maxInstancedCount=t.maxInstancedCount,this},clone:function(){return(new this.constructor).copy(this)}}),Object.defineProperties(Zn.prototype,{count:{get:function(){return this.data.count}},array:{get:function(){return this.data.array}}}),Object.assign(Zn.prototype,{isInterleavedBufferAttribute:!0,setX:function(t,e){return this.data.array[t*this.data.stride+this.offset]=e,this},setY:function(t,e){return this.data.array[t*this.data.stride+this.offset+1]=e,this},setZ:function(t,e){return this.data.array[t*this.data.stride+this.offset+2]=e,this},setW:function(t,e){return this.data.array[t*this.data.stride+this.offset+3]=e,this},getX:function(t){return this.data.array[t*this.data.stride+this.offset]},getY:function(t){return this.data.array[t*this.data.stride+this.offset+1]},getZ:function(t){return this.data.array[t*this.data.stride+this.offset+2]},getW:function(t){return this.data.array[t*this.data.stride+this.offset+3]},setXY:function(t,e,i){return t=t*this.data.stride+this.offset,this.data.array[t+0]=e,this.data.array[t+1]=i,this},setXYZ:function(t,e,i,n){return t=t*this.data.stride+this.offset,this.data.array[t+0]=e,this.data.array[t+1]=i,this.data.array[t+2]=n,this},setXYZW:function(t,e,i,n,r){return t=t*this.data.stride+this.offset,this.data.array[t+0]=e,this.data.array[t+1]=i,this.data.array[t+2]=n,this.data.array[t+3]=r,this}}),Object.defineProperty(Jn.prototype,"needsUpdate",{set:function(t){!0===t&&this.version++}}),Object.assign(Jn.prototype,{isInterleavedBuffer:!0,setArray:function(t){if(Array.isArray(t))throw new TypeError("THREE.BufferAttribute: array should be a Typed Array.");this.count=void 0!==t?t.length/this.stride:0,this.array=t},setDynamic:function(t){return this.dynamic=t,this},copy:function(t){return this.array=new t.array.constructor(t.array),this.count=t.count,this.stride=t.stride,this.dynamic=t.dynamic,this},copyAt:function(t,e,i){t*=this.stride,i*=e.stride;for(var n=0,r=this.stride;n<r;n++)this.array[t+n]=e.array[i+n];return this},set:function(t,e){return void 0===e&&(e=0),this.array.set(t,e),this},clone:function(){return(new this.constructor).copy(this)},onUpload:function(t){return this.onUploadCallback=t,this}}),Qn.prototype=Object.assign(Object.create(Jn.prototype),{constructor:Qn,isInstancedInterleavedBuffer:!0,copy:function(t){return Jn.prototype.copy.call(this,t),this.meshPerAttribute=t.meshPerAttribute,this}}),Kn.prototype=Object.assign(Object.create(pt.prototype),{constructor:Kn,isInstancedBufferAttribute:!0,copy:function(t){return pt.prototype.copy.call(this,t),this.meshPerAttribute=t.meshPerAttribute,this}}),Object.assign($n.prototype,{linePrecision:1,set:function(t,e){this.ray.set(t,e)},setFromCamera:function(t,e){e&&e.isPerspectiveCamera?(this.ray.origin.setFromMatrixPosition(e.matrixWorld),this.ray.direction.set(t.x,t.y,.5).unproject(e).sub(this.ray.origin).normalize()):e&&e.isOrthographicCamera&&(this.ray.origin.set(t.x,t.y,(e.near+e.far)/(e.near-e.far)).unproject(e),this.ray.direction.set(0,0,-1).transformDirection(e.matrixWorld))},intersectObject:function(t,e){var i=[];return er(t,this,i,e),i.sort(tr),i},intersectObjects:function(t,e){var i=[];if(!1===Array.isArray(t))return i;for(var n=0,r=t.length;n<r;n++)er(t[n],this,i,e);return i.sort(tr),i}}),Object.assign(ir.prototype,{start:function(){this.startTime=("undefined"==typeof performance?Date:performance).now(),this.oldTime=this.startTime,this.elapsedTime=0,this.running=!0},stop:function(){this.getElapsedTime(),this.running=!1,this.autoStart=!1},getElapsedTime:function(){return this.getDelta(),this.elapsedTime},getDelta:function(){var t=0;if(this.autoStart&&!this.running)return this.start(),0;if(this.running){var e=("undefined"==typeof performance?Date:performance).now();t=(e-this.oldTime)/1e3,this.oldTime=e,this.elapsedTime+=t}return t}}),Object.assign(nr.prototype,{set:function(t,e,i){return this.radius=t,this.phi=e,this.theta=i,this},clone:function(){return(new this.constructor).copy(this)},copy:function(t){return this.radius=t.radius,this.phi=t.phi,this.theta=t.theta,this},makeSafe:function(){return this.phi=Math.max(1e-6,Math.min(Math.PI-1e-6,this.phi)),this},setFromVector3:function(t){return this.radius=t.length(),0===this.radius?(this.theta=0,this.phi=0):(this.theta=Math.atan2(t.x,t.z),this.phi=Math.acos(Po.clamp(t.y/this.radius,-1,1))),this}}),Object.assign(rr.prototype,{set:function(t,e,i){return this.radius=t,this.theta=e,this.y=i,this},clone:function(){return(new this.constructor).copy(this)},copy:function(t){return this.radius=t.radius,this.theta=t.theta,this.y=t.y,this},setFromVector3:function(t){return this.radius=Math.sqrt(t.x*t.x+t.z*t.z),this.theta=Math.atan2(t.x,t.z),this.y=t.y,this}}),(ar.prototype=Object.create(st.prototype)).constructor=ar,ar.prototype.isImmediateRenderObject=!0,(or.prototype=Object.create(de.prototype)).constructor=or,or.prototype.update=function(){var t=new a,e=new a,i=new o;return function(){var n=["a","b","c"];this.object.updateMatrixWorld(!0),i.getNormalMatrix(this.object.matrixWorld);var r=this.object.matrixWorld,a=this.geometry.attributes.position,o=this.object.geometry;if(o&&o.isGeometry)for(var s=o.vertices,h=o.faces,c=0,l=0,u=h.length;l<u;l++)for(var p=h[l],d=0,f=p.vertexNormals.length;d<f;d++){var m=s[p[n[d]]],v=p.vertexNormals[d];t.copy(m).applyMatrix4(r),e.copy(v).applyMatrix3(i).normalize().multiplyScalar(this.size).add(t),a.setXYZ(c,t.x,t.y,t.z),c+=1,a.setXYZ(c,e.x,e.y,e.z),c+=1}else if(o&&o.isBufferGeometry){var g=o.attributes.position,y=o.attributes.normal;for(c=0,d=0,f=g.count;d<f;d++)t.set(g.getX(d),g.getY(d),g.getZ(d)).applyMatrix4(r),e.set(y.getX(d),y.getY(d),y.getZ(d)),e.applyMatrix3(i).normalize().multiplyScalar(this.size).add(t),a.setXYZ(c,t.x,t.y,t.z),c+=1,a.setXYZ(c,e.x,e.y,e.z),c+=1}a.needsUpdate=!0}}(),(sr.prototype=Object.create(st.prototype)).constructor=sr,sr.prototype.dispose=function(){this.cone.geometry.dispose(),this.cone.material.dispose()},sr.prototype.update=function(){var t=new a,e=new a;return function(){this.light.updateMatrixWorld();var i=this.light.distance?this.light.distance:1e3,n=i*Math.tan(this.light.angle);this.cone.scale.set(n,n,i),t.setFromMatrixPosition(this.light.matrixWorld),e.setFromMatrixPosition(this.light.target.matrixWorld),this.cone.lookAt(e.sub(t)),void 0!==this.color?this.cone.material.color.set(this.color):this.cone.material.color.copy(this.light.color)}}(),(cr.prototype=Object.create(de.prototype)).constructor=cr,cr.prototype.updateMatrixWorld=function(){var t=new a,e=new n,i=new n;return function(n){var r=this.bones,a=this.geometry,o=a.getAttribute("position");i.getInverse(this.root.matrixWorld);for(var s=0,h=0;s<r.length;s++){var c=r[s];c.parent&&c.parent.isBone&&(e.multiplyMatrices(i,c.matrixWorld),t.setFromMatrixPosition(e),o.setXYZ(h,t.x,t.y,t.z),e.multiplyMatrices(i,c.parent.matrixWorld),t.setFromMatrixPosition(e),o.setXYZ(h+1,t.x,t.y,t.z),h+=2)}a.getAttribute("position").needsUpdate=!0,st.prototype.updateMatrixWorld.call(this,n)}}(),(lr.prototype=Object.create(Ot.prototype)).constructor=lr,lr.prototype.dispose=function(){this.geometry.dispose(),this.material.dispose()},lr.prototype.update=function(){void 0!==this.color?this.material.color.set(this.color):this.material.color.copy(this.light.color)},(ur.prototype=Object.create(st.prototype)).constructor=ur,ur.prototype.dispose=function(){this.children[0].geometry.dispose(),this.children[0].material.dispose()},ur.prototype.update=function(){var t=.5*this.light.width,e=.5*this.light.height,i=this.line.geometry.attributes.position,n=i.array;n[0]=t,n[1]=-e,n[2]=0,n[3]=t,n[4]=e,n[5]=0,n[6]=-t,n[7]=e,n[8]=0,n[9]=-t,n[10]=-e,n[11]=0,n[12]=t,n[13]=-e,n[14]=0,i.needsUpdate=!0,void 0!==this.color?this.line.material.color.set(this.color):this.line.material.color.copy(this.light.color)},(pr.prototype=Object.create(st.prototype)).constructor=pr,pr.prototype.dispose=function(){this.children[0].geometry.dispose(),this.children[0].material.dispose()},pr.prototype.update=function(){var t=new a,e=new H,i=new H;return function(){var n=this.children[0];if(void 0!==this.color)this.material.color.set(this.color);else{var r=n.geometry.getAttribute("color");e.copy(this.light.color),i.copy(this.light.groundColor);for(var a=0,o=r.count;a<o;a++){var s=a<o/2?e:i;r.setXYZ(a,s.r,s.g,s.b)}r.needsUpdate=!0}n.lookAt(t.setFromMatrixPosition(this.light.matrixWorld).negate())}}(),(dr.prototype=Object.create(de.prototype)).constructor=dr,(fr.prototype=Object.create(de.prototype)).constructor=fr,(mr.prototype=Object.create(de.prototype)).constructor=mr,mr.prototype.update=function(){var t=new a,e=new a,i=new o;return function(){this.object.updateMatrixWorld(!0),i.getNormalMatrix(this.object.matrixWorld);for(var n=this.object.matrixWorld,r=this.geometry.attributes.position,a=this.object.geometry,o=a.vertices,s=a.faces,h=0,c=0,l=s.length;c<l;c++){var u=s[c],p=u.normal;t.copy(o[u.a]).add(o[u.b]).add(o[u.c]).divideScalar(3).applyMatrix4(n),e.copy(p).applyMatrix3(i).normalize().multiplyScalar(this.size).add(t),r.setXYZ(h,t.x,t.y,t.z),h+=1,r.setXYZ(h,e.x,e.y,e.z),h+=1}r.needsUpdate=!0}}(),(vr.prototype=Object.create(st.prototype)).constructor=vr,vr.prototype.dispose=function(){this.lightPlane.geometry.dispose(),this.lightPlane.material.dispose(),this.targetLine.geometry.dispose(),this.targetLine.material.dispose()},vr.prototype.update=function(){var t=new a,e=new a,i=new a;return function(){t.setFromMatrixPosition(this.light.matrixWorld),e.setFromMatrixPosition(this.light.target.matrixWorld),i.subVectors(e,t),this.lightPlane.lookAt(i),void 0!==this.color?(this.lightPlane.material.color.set(this.color),this.targetLine.material.color.set(this.color)):(this.lightPlane.material.color.copy(this.light.color),this.targetLine.material.color.copy(this.light.color)),this.targetLine.lookAt(i),this.targetLine.scale.z=i.length()}}(),(gr.prototype=Object.create(de.prototype)).constructor=gr,gr.prototype.update=function(){function t(t,a,o,s){n.set(a,o,s).unproject(r);var h=i[t];if(void 0!==h)for(var c=e.getAttribute("position"),l=0,u=h.length;l<u;l++)c.setXYZ(h[l],n.x,n.y,n.z)}var e,i,n=new a,r=new ht;return function(){e=this.geometry,i=this.pointMap;r.projectionMatrix.copy(this.camera.projectionMatrix),t("c",0,0,-1),t("t",0,0,1),t("n1",-1,-1,-1),t("n2",1,-1,-1),t("n3",-1,1,-1),t("n4",1,1,-1),t("f1",-1,-1,1),t("f2",1,-1,1),t("f3",-1,1,1),t("f4",1,1,1),t("u1",.7,1.1,-1),t("u2",-.7,1.1,-1),t("u3",0,2,-1),t("cf1",-1,0,1),t("cf2",1,0,1),t("cf3",0,-1,1),t("cf4",0,1,1),t("cn1",-1,0,-1),t("cn2",1,0,-1),t("cn3",0,-1,-1),t("cn4",0,1,-1),e.getAttribute("position").needsUpdate=!0}}(),(yr.prototype=Object.create(de.prototype)).constructor=yr,yr.prototype.update=function(){var t=new $;return function(e){if(void 0!==this.object&&t.setFromObject(this.object),!t.isEmpty()){var i=t.min,n=t.max,r=this.geometry.attributes.position,a=r.array;a[0]=n.x,a[1]=n.y,a[2]=n.z,a[3]=i.x,a[4]=n.y,a[5]=n.z,a[6]=i.x,a[7]=i.y,a[8]=n.z,a[9]=n.x,a[10]=i.y,a[11]=n.z,a[12]=n.x,a[13]=n.y,a[14]=i.z,a[15]=i.x,a[16]=n.y,a[17]=i.z,a[18]=i.x,a[19]=i.y,a[20]=i.z,a[21]=n.x,a[22]=i.y,a[23]=i.z,r.needsUpdate=!0,this.geometry.computeBoundingSphere()}}}(),yr.prototype.setFromObject=function(t){return this.object=t,this.update(),this},(xr.prototype=Object.create(de.prototype)).constructor=xr,xr.prototype.updateMatrixWorld=function(t){var e=this.box;e.isEmpty()||(e.getCenter(this.position),e.getSize(this.scale),this.scale.multiplyScalar(.5),st.prototype.updateMatrixWorld.call(this,t))},(_r.prototype=Object.create(pe.prototype)).constructor=_r,_r.prototype.updateMatrixWorld=function(t){var e=-this.plane.constant;Math.abs(e)<1e-8&&(e=1e-8),this.scale.set(.5*this.size,.5*this.size,e),this.lookAt(this.plane.normal),st.prototype.updateMatrixWorld.call(this,t)};var fs,ms;(br.prototype=Object.create(st.prototype)).constructor=br,br.prototype.setDirection=function(){var t,e=new a;return function(i){i.y>.99999?this.quaternion.set(0,0,0,1):i.y<-.99999?this.quaternion.set(1,0,0,0):(e.set(i.z,0,-i.x).normalize(),t=Math.acos(i.y),this.quaternion.setFromAxisAngle(e,t))}}(),br.prototype.setLength=function(t,e,i){void 0===e&&(e=.2*t),void 0===i&&(i=.2*e),this.line.scale.set(1,Math.max(0,t-e),1),this.line.updateMatrix(),this.cone.scale.set(i,e,i),this.cone.position.y=t,this.cone.updateMatrix()},br.prototype.setColor=function(t){this.line.material.color.copy(t),this.cone.material.color.copy(t)},(Mr.prototype=Object.create(de.prototype)).constructor=Mr;var vs={createMultiMaterialObject:function(t,e){for(var i=new ge,n=0,r=e.length;n<r;n++)i.add(new Ot(t,e[n]));return i},detach:function(t,e,i){t.applyMatrix(e.matrixWorld),e.remove(t),i.add(t)},attach:function(t,e,i){t.applyMatrix((new n).getInverse(i.matrixWorld)),e.remove(t),i.add(t)}};Fi.create=function(t,e){return t.prototype=Object.create(Fi.prototype),t.prototype.constructor=t,t.prototype.getPoint=e,t},Object.assign(Ki.prototype,{createPointsGeometry:function(t){var e=this.getPoints(t);return this.createGeometry(e)},createSpacedPointsGeometry:function(t){var e=this.getSpacedPoints(t);return this.createGeometry(e)},createGeometry:function(t){for(var e=new ut,i=0,n=t.length;i<n;i++){var r=t[i];e.vertices.push(new a(r.x,r.y,r.z||0))}return e}}),Object.assign($i.prototype,{fromPoints:function(t){this.setFromPoints(t)}}),wr.prototype=Object.create(Vi.prototype),Sr.prototype=Object.create(Vi.prototype),Tr.prototype=Object.create(Vi.prototype),Object.assign(Tr.prototype,{initFromArray:function(){},getControlPointsArray:function(){},reparametrizeByArcLength:function(){}}),dr.prototype.setColors=function(){},cr.prototype.update=function(){},Object.assign(En.prototype,{extractUrlBase:function(t){return hs.extractUrlBase(t)}}),Object.assign(X.prototype,{center:function(t){return this.getCenter(t)},empty:function(){return this.isEmpty()},isIntersectionBox:function(t){return this.intersectsBox(t)},size:function(t){return this.getSize(t)}}),Object.assign($.prototype,{center:function(t){return this.getCenter(t)},empty:function(){return this.isEmpty()},isIntersectionBox:function(t){return this.intersectsBox(t)},isIntersectionSphere:function(t){return this.intersectsSphere(t)},size:function(t){return this.getSize(t)}}),Rt.prototype.center=function(t){return this.getCenter(t)},Object.assign(Po,{random16:function(){return Math.random()},nearestPowerOfTwo:function(t){return Po.floorPowerOfTwo(t)},nextPowerOfTwo:function(t){return Po.ceilPowerOfTwo(t)}}),Object.assign(o.prototype,{flattenToArrayOffset:function(t,e){return this.toArray(t,e)},multiplyVector3:function(t){return t.applyMatrix3(this)},multiplyVector3Array:function(){},applyToBuffer:function(t){return this.applyToBufferAttribute(t)},applyToVector3Array:function(){}}),Object.assign(n.prototype,{extractPosition:function(t){return this.copyPosition(t)},flattenToArrayOffset:function(t,e){return this.toArray(t,e)},getPosition:function(){var t;return function(){return void 0===t&&(t=new a),t.setFromMatrixColumn(this,3)}}(),setRotationFromQuaternion:function(t){return this.makeRotationFromQuaternion(t)},multiplyToArray:function(){},multiplyVector3:function(t){return t.applyMatrix4(this)},multiplyVector4:function(t){return t.applyMatrix4(this)},multiplyVector3Array:function(){},rotateAxis:function(t){t.transformDirection(this)},crossVector:function(t){return t.applyMatrix4(this)},translate:function(){},rotateX:function(){},rotateY:function(){},rotateZ:function(){},rotateByAxis:function(){},applyToBuffer:function(t){return this.applyToBufferAttribute(t)},applyToVector3Array:function(){},makeFrustum:function(t,e,i,n,r,a){return this.makePerspective(t,e,n,i,r,a)}}),et.prototype.isIntersectionLine=function(t){return this.intersectsLine(t)},r.prototype.multiplyVector3=function(t){return t.applyQuaternion(this)},Object.assign(It.prototype,{isIntersectionBox:function(t){return this.intersectsBox(t)},isIntersectionPlane:function(t){return this.intersectsPlane(t)},isIntersectionSphere:function(t){return this.intersectsSphere(t)}}),Object.assign(tn.prototype,{extractAllPoints:function(t){return this.extractPoints(t)},extrude:function(t){return new ei(this,t)},makeGeometry:function(t){return new ui(this,t)}}),Object.assign(i.prototype,{fromAttribute:function(t,e,i){return this.fromBufferAttribute(t,e,i)},distanceToManhattan:function(t){return this.manhattanDistanceTo(t)},lengthManhattan:function(){return this.manhattanLength()}}),Object.assign(a.prototype,{setEulerFromRotationMatrix:function(){},setEulerFromQuaternion:function(){},getPositionFromMatrix:function(t){return this.setFromMatrixPosition(t)},getScaleFromMatrix:function(t){return this.setFromMatrixScale(t)},getColumnFromMatrix:function(t,e){return this.setFromMatrixColumn(e,t)},applyProjection:function(t){return this.applyMatrix4(t)},fromAttribute:function(t,e,i){return this.fromBufferAttribute(t,e,i)},distanceToManhattan:function(t){return this.manhattanDistanceTo(t)},lengthManhattan:function(){return this.manhattanLength()}}),Object.assign(h.prototype,{fromAttribute:function(t,e,i){return this.fromBufferAttribute(t,e,i)},lengthManhattan:function(){return this.manhattanLength()}}),ut.prototype.computeTangents=function(){},Object.assign(st.prototype,{getChildByName:function(t){return this.getObjectByName(t)},renderDepth:function(){},translate:function(t,e){return this.translateOnAxis(e,t)}}),Object.defineProperties(st.prototype,{eulerOrder:{get:function(){return this.rotation.order},set:function(t){this.rotation.order=t}},useQuaternion:{get:function(){},set:function(){}}}),Object.defineProperties(se.prototype,{objects:{get:function(){return this.levels}}}),Object.defineProperty(he.prototype,"useVertexTexture",{get:function(){},set:function(){}}),Object.defineProperty(Fi.prototype,"__arcLengthDivisions",{get:function(){return this.arcLengthDivisions},set:function(t){this.arcLengthDivisions=t}}),Jt.prototype.setLens=function(t,e){void 0!==e&&(this.filmGauge=e),this.setFocalLength(t)},Object.defineProperties(en.prototype,{onlyShadow:{set:function(){}},shadowCameraFov:{set:function(t){this.shadow.camera.fov=t}},shadowCameraLeft:{set:function(t){this.shadow.camera.left=t}},shadowCameraRight:{set:function(t){this.shadow.camera.right=t}},shadowCameraTop:{set:function(t){this.shadow.camera.top=t}},shadowCameraBottom:{set:function(t){this.shadow.camera.bottom=t}},shadowCameraNear:{set:function(t){this.shadow.camera.near=t}},shadowCameraFar:{set:function(t){this.shadow.camera.far=t}},shadowCameraVisible:{set:function(){}},shadowBias:{set:function(t){this.shadow.bias=t}},shadowDarkness:{set:function(){}},shadowMapWidth:{set:function(t){this.shadow.mapSize.width=t}},shadowMapHeight:{set:function(t){this.shadow.mapSize.height=t}}}),Object.defineProperties(pt.prototype,{length:{get:function(){return this.array.length}}}),Object.assign(St.prototype,{addIndex:function(t){this.setIndex(t)},addDrawCall:function(t,e,i){this.addGroup(t,e)},clearDrawCalls:function(){this.clearGroups()},computeTangents:function(){},computeOffsets:function(){}}),Object.defineProperties(St.prototype,{drawcalls:{get:function(){return this.groups}},offsets:{get:function(){return this.groups}}}),Object.defineProperties(qn.prototype,{dynamic:{set:function(){}},onUpdate:{value:function(){return this}}}),Object.defineProperties(J.prototype,{wrapAround:{get:function(){},set:function(){}},wrapRGB:{get:function(){return new H}},shading:{get:function(){},set:function(t){this.flatShading=1===t}}}),Object.defineProperties(Ti.prototype,{metal:{get:function(){return!1},set:function(){}}}),Object.defineProperties(Ct.prototype,{derivatives:{get:function(){return this.extensions.derivatives},set:function(t){this.extensions.derivatives=t}}}),Object.assign(te.prototype,{getCurrentRenderTarget:function(){return this.getRenderTarget()},getMaxAnisotropy:function(){return this.capabilities.getMaxAnisotropy()},getPrecision:function(){return this.capabilities.precision},resetGLState:function(){return this.state.reset()},supportsFloatTextures:function(){return this.extensions.get("OES_texture_float")},supportsHalfFloatTextures:function(){return this.extensions.get("OES_texture_half_float")},supportsStandardDerivatives:function(){return this.extensions.get("OES_standard_derivatives")},supportsCompressedTextureS3TC:function(){return this.extensions.get("WEBGL_compressed_texture_s3tc")},supportsCompressedTexturePVRTC:function(){return this.extensions.get("WEBGL_compressed_texture_pvrtc")},supportsBlendMinMax:function(){return this.extensions.get("EXT_blend_minmax")},supportsVertexTextures:function(){return this.capabilities.vertexTextures},supportsInstancedArrays:function(){return this.extensions.get("ANGLE_instanced_arrays")},enableScissorTest:function(t){this.setScissorTest(t)},initMaterial:function(){},addPrePlugin:function(){},addPostPlugin:function(){},updateShadowMap:function(){}}),Object.defineProperties(te.prototype,{shadowMapEnabled:{get:function(){return this.shadowMap.enabled},set:function(t){this.shadowMap.enabled=t}},shadowMapType:{get:function(){return this.shadowMap.type},set:function(t){this.shadowMap.type=t}},shadowMapCullFace:{get:function(){return this.shadowMap.cullFace},set:function(t){this.shadowMap.cullFace=t}}}),Object.defineProperties(nt.prototype,{cullFace:{get:function(){return this.renderReverseSided?Pr:Lr},set:function(t){var e=t!==Lr;this.renderReverseSided=e}}}),Object.defineProperties(c.prototype,{wrapS:{get:function(){return this.texture.wrapS},set:function(t){this.texture.wrapS=t}},wrapT:{get:function(){return this.texture.wrapT},set:function(t){this.texture.wrapT=t}},magFilter:{get:function(){return this.texture.magFilter},set:function(t){this.texture.magFilter=t}},minFilter:{get:function(){return this.texture.minFilter},set:function(t){this.texture.minFilter=t}},anisotropy:{get:function(){return this.texture.anisotropy},set:function(t){this.texture.anisotropy=t}},offset:{get:function(){return this.texture.offset},set:function(t){this.texture.offset=t}},repeat:{get:function(){return this.texture.repeat},set:function(t){this.texture.repeat=t}},format:{get:function(){return this.texture.format},set:function(t){this.texture.format=t}},type:{get:function(){return this.texture.type},set:function(t){this.texture.type=t}},generateMipmaps:{get:function(){return this.texture.generateMipmaps},set:function(t){this.texture.generateMipmaps=t}}}),Object.assign(Kt.prototype,{getStandingMatrix:function(){}}),Object.defineProperties(Kt.prototype,{standing:{set:function(){}}}),zn.prototype.load=function(t){var e=this;return(new On).load(t,function(t){e.setBuffer(t)}),this},Gn.prototype.getData=function(){return this.getFrequencyData()},Un.prototype.updateCubeMap=function(t,e){return this.update(t,e)};var gs={merge:function(t,e,i){var n;e.isMesh&&(e.matrixAutoUpdate&&e.updateMatrix(),n=e.matrix,e=e.geometry),t.merge(e,n,i)},center:function(t){return t.center()}},ys={crossOrigin:void 0,loadTexture:function(t,e,i,n){var r=new Ui;r.setCrossOrigin(this.crossOrigin);var a=r.load(t,i,void 0,n);return e&&(a.mapping=e),a},loadTextureCube:function(t,e,i,n){var r=new Di;r.setCrossOrigin(this.crossOrigin);var a=r.load(t,i,void 0,n);return e&&(a.mapping=e),a},loadCompressedTexture:function(){},loadCompressedTextureCube:function(){}};t.WebGLRenderTargetCube=l,t.WebGLRenderTarget=c,t.WebGLRenderer=te,t.ShaderLib=ko,t.UniformsLib=Bo,t.UniformsUtils=Go,t.ShaderChunk=Vo,t.FogExp2=ee,t.Fog=ie,t.Scene=ne,t.LensFlare=re,t.Sprite=oe,t.LOD=se,t.SkinnedMesh=le,t.Skeleton=he,t.Bone=ce,t.Mesh=Ot,t.LineSegments=de,t.LineLoop=fe,t.Line=pe,t.Points=ve,t.Group=ge,t.VideoTexture=ye,t.DataTexture=u,t.CompressedTexture=xe,t.CubeTexture=p,t.CanvasTexture=Y,t.DepthTexture=_e,t.Texture=s,t.CompressedTextureLoader=Ri,t.DataTextureLoader=Ni,t.CubeTextureLoader=Di,t.TextureLoader=Ui,t.ObjectLoader=Pn,t.MaterialLoader=Tn,t.BufferGeometryLoader=An,t.DefaultLoadingManager=$o,t.LoadingManager=Ci,t.JSONLoader=Ln,t.ImageLoader=Oi,t.ImageBitmapLoader=Cn,t.FontLoader=Nn,t.FileLoader=Ii,t.Loader=En,t.LoaderUtils=hs,t.Cache=Ko,t.AudioLoader=On,t.SpotLightShadow=an,t.SpotLight=on,t.PointLight=sn,t.RectAreaLight=un,t.HemisphereLight=nn,t.DirectionalLightShadow=hn,t.DirectionalLight=cn,t.AmbientLight=ln,t.LightShadow=rn,t.Light=en,t.StereoCamera=Dn,t.PerspectiveCamera=Jt,t.OrthographicCamera=ct,t.CubeCamera=Un,t.ArrayCamera=Qt,t.Camera=ht,t.AudioListener=Fn,t.PositionalAudio=Bn,t.AudioContext=ds,t.AudioAnalyser=Gn,t.Audio=zn,t.VectorKeyframeTrack=wn,t.StringKeyframeTrack=pn,t.QuaternionKeyframeTrack=vn,t.NumberKeyframeTrack=yn,t.ColorKeyframeTrack=gn,t.BooleanKeyframeTrack=dn,t.PropertyMixer=Vn,t.PropertyBinding=jn,t.KeyframeTrack=Mn,t.AnimationUtils=os,t.AnimationObjectGroup=Wn,t.AnimationMixer=Xn,t.AnimationClip=Sn,t.Uniform=qn,t.InstancedBufferGeometry=Yn,t.BufferGeometry=St,t.Geometry=ut,t.InterleavedBufferAttribute=Zn,t.InstancedInterleavedBuffer=Qn,t.InterleavedBuffer=Jn,t.InstancedBufferAttribute=Kn,t.Face3=lt,t.Object3D=st,t.Raycaster=$n,t.Layers=ot,t.EventDispatcher=e,t.Clock=ir,t.QuaternionLinearInterpolant=mn,t.LinearInterpolant=_n,t.DiscreteInterpolant=bn,t.CubicInterpolant=xn,t.Interpolant=fn,t.Triangle=Nt,t.Math=Po,t.Spherical=nr,t.Cylindrical=rr,t.Plane=et,t.Frustum=it,t.Sphere=tt,t.Ray=It,t.Matrix4=n,t.Matrix3=o,t.Box3=$,t.Box2=X,t.Line3=Rt,t.Euler=at,t.Vector4=h,t.Vector3=a,t.Vector2=i,t.Quaternion=r,t.Color=H,t.ImmediateRenderObject=ar,t.VertexNormalsHelper=or,t.SpotLightHelper=sr,t.SkeletonHelper=cr,t.PointLightHelper=lr,t.RectAreaLightHelper=ur,t.HemisphereLightHelper=pr,t.GridHelper=dr,t.PolarGridHelper=fr,t.FaceNormalsHelper=mr,t.DirectionalLightHelper=vr,t.CameraHelper=gr,t.BoxHelper=yr,t.Box3Helper=xr,t.PlaneHelper=_r,t.ArrowHelper=br,t.AxesHelper=Mr,t.Shape=tn,t.Path=$i,t.ShapePath=In,t.Font=Rn,t.CurvePath=Ki,t.Curve=Fi,t.ShapeUtils=Zo,t.SceneUtils=vs,t.WebGLUtils=$t,t.WireframeGeometry=be,t.ParametricGeometry=Me,t.ParametricBufferGeometry=we,t.TetrahedronGeometry=Ae,t.TetrahedronBufferGeometry=Ee,t.OctahedronGeometry=Le,t.OctahedronBufferGeometry=Pe,t.IcosahedronGeometry=Ce,t.IcosahedronBufferGeometry=Ie,t.DodecahedronGeometry=Re,t.DodecahedronBufferGeometry=Ne,t.PolyhedronGeometry=Se,t.PolyhedronBufferGeometry=Te,t.TubeGeometry=Oe,t.TubeBufferGeometry=De,t.TorusKnotGeometry=Ue,t.TorusKnotBufferGeometry=Fe,t.TorusGeometry=ze,t.TorusBufferGeometry=Be,t.TextGeometry=ni,t.TextBufferGeometry=ri,t.SphereGeometry=ai,t.SphereBufferGeometry=oi,t.RingGeometry=si,t.RingBufferGeometry=hi,t.PlaneGeometry=Et,t.PlaneBufferGeometry=Lt,t.LatheGeometry=ci,t.LatheBufferGeometry=li,t.ShapeGeometry=ui,t.ShapeBufferGeometry=pi,t.ExtrudeGeometry=ei,t.ExtrudeBufferGeometry=ii,t.EdgesGeometry=fi,t.ConeGeometry=gi,t.ConeBufferGeometry=yi,t.CylinderGeometry=mi,t.CylinderBufferGeometry=vi,t.CircleGeometry=xi,t.CircleBufferGeometry=_i,t.BoxGeometry=Tt,t.BoxBufferGeometry=At,t.ShadowMaterial=bi,t.SpriteMaterial=ae,t.RawShaderMaterial=Mi,t.ShaderMaterial=Ct,t.PointsMaterial=me,t.MeshPhysicalMaterial=Si,t.MeshStandardMaterial=wi,t.MeshPhongMaterial=Ti,t.MeshToonMaterial=Ai,t.MeshNormalMaterial=Ei,t.MeshLambertMaterial=Li,t.MeshDepthMaterial=Q,t.MeshDistanceMaterial=K,t.MeshBasicMaterial=Pt,t.LineDashedMaterial=Pi,t.LineBasicMaterial=ue,t.Material=J,t.Float64BufferAttribute=bt,t.Float32BufferAttribute=_t,t.Uint32BufferAttribute=xt,t.Int32BufferAttribute=yt,t.Uint16BufferAttribute=gt,t.Int16BufferAttribute=vt,t.Uint8ClampedBufferAttribute=mt,t.Uint8BufferAttribute=ft,t.Int8BufferAttribute=dt,t.BufferAttribute=pt,t.ArcCurve=Bi,t.CatmullRomCurve3=Vi,t.CubicBezierCurve=Hi,t.CubicBezierCurve3=Xi,t.EllipseCurve=zi,t.LineCurve=qi,t.LineCurve3=Yi,t.QuadraticBezierCurve=Zi,t.QuadraticBezierCurve3=Ji,t.SplineCurve=Qi,t.REVISION=Ar,t.MOUSE={LEFT:0,MIDDLE:1,RIGHT:2},t.CullFaceNone=Er,t.CullFaceBack=Lr,t.CullFaceFront=Pr,t.CullFaceFrontBack=3,t.FrontFaceDirectionCW=Cr,t.FrontFaceDirectionCCW=1,t.BasicShadowMap=0,t.PCFShadowMap=Ir,t.PCFSoftShadowMap=Rr,t.FrontSide=Nr,t.BackSide=Or,t.DoubleSide=Dr,t.FlatShading=1,t.SmoothShading=2,t.NoColors=Ur,t.FaceColors=Fr,t.VertexColors=zr,t.NoBlending=Br,t.NormalBlending=Gr,t.AdditiveBlending=Vr,t.SubtractiveBlending=kr,t.MultiplyBlending=jr,t.CustomBlending=Wr,t.AddEquation=Hr,t.SubtractEquation=Xr,t.ReverseSubtractEquation=qr,t.MinEquation=Yr,t.MaxEquation=Zr,t.ZeroFactor=Jr,t.OneFactor=Qr,t.SrcColorFactor=Kr,t.OneMinusSrcColorFactor=$r,t.SrcAlphaFactor=ta,t.OneMinusSrcAlphaFactor=ea,t.DstAlphaFactor=ia,t.OneMinusDstAlphaFactor=na,t.DstColorFactor=ra,t.OneMinusDstColorFactor=aa,t.SrcAlphaSaturateFactor=oa,t.NeverDepth=sa,t.AlwaysDepth=ha,t.LessDepth=ca,t.LessEqualDepth=la,t.EqualDepth=ua,t.GreaterEqualDepth=pa,t.GreaterDepth=da,t.NotEqualDepth=fa,t.MultiplyOperation=ma,t.MixOperation=va,t.AddOperation=ga,t.NoToneMapping=ya,t.LinearToneMapping=xa,t.ReinhardToneMapping=_a,t.Uncharted2ToneMapping=ba,t.CineonToneMapping=Ma,t.UVMapping=300,t.CubeReflectionMapping=wa,t.CubeRefractionMapping=Sa,t.EquirectangularReflectionMapping=Ta,t.EquirectangularRefractionMapping=Aa,t.SphericalReflectionMapping=Ea,t.CubeUVReflectionMapping=La,t.CubeUVRefractionMapping=Pa,t.RepeatWrapping=Ca,t.ClampToEdgeWrapping=Ia,t.MirroredRepeatWrapping=Ra,t.NearestFilter=Na,t.NearestMipMapNearestFilter=Oa,t.NearestMipMapLinearFilter=Da,t.LinearFilter=Ua,t.LinearMipMapNearestFilter=Fa,t.LinearMipMapLinearFilter=za,t.UnsignedByteType=Ba,t.ByteType=Ga,t.ShortType=Va,t.UnsignedShortType=ka,t.IntType=ja,t.UnsignedIntType=Wa,t.FloatType=Ha,t.HalfFloatType=Xa,t.UnsignedShort4444Type=qa,t.UnsignedShort5551Type=Ya,t.UnsignedShort565Type=Za,t.UnsignedInt248Type=Ja,t.AlphaFormat=Qa,t.RGBFormat=Ka,t.RGBAFormat=$a,t.LuminanceFormat=to,t.LuminanceAlphaFormat=eo,t.RGBEFormat=io,t.DepthFormat=no,t.DepthStencilFormat=ro,t.RGB_S3TC_DXT1_Format=ao,t.RGBA_S3TC_DXT1_Format=oo,t.RGBA_S3TC_DXT3_Format=so,t.RGBA_S3TC_DXT5_Format=ho,t.RGB_PVRTC_4BPPV1_Format=co,t.RGB_PVRTC_2BPPV1_Format=lo,t.RGBA_PVRTC_4BPPV1_Format=uo,t.RGBA_PVRTC_2BPPV1_Format=po,t.RGB_ETC1_Format=fo,t.LoopOnce=2200,t.LoopRepeat=mo,t.LoopPingPong=2202,t.InterpolateDiscrete=2300,t.InterpolateLinear=2301,t.InterpolateSmooth=2302,t.ZeroCurvatureEnding=vo,t.ZeroSlopeEnding=2401,t.WrapAroundEnding=2402,t.TrianglesDrawMode=go,t.TriangleStripDrawMode=yo,t.TriangleFanDrawMode=xo,t.LinearEncoding=_o,t.sRGBEncoding=bo,t.GammaEncoding=Mo,t.RGBEEncoding=wo,t.LogLuvEncoding=3003,t.RGBM7Encoding=So,t.RGBM16Encoding=To,t.RGBDEncoding=Ao,t.BasicDepthPacking=Eo,t.RGBADepthPacking=Lo,t.CubeGeometry=Tt,t.Face4=function(t,e,i,n,r,a,o){return new lt(t,e,i,r,a,o)},t.LineStrip=0,t.LinePieces=1,t.MeshFaceMaterial=function(t){return t},t.MultiMaterial=function(t){return void 0===t&&(t=[]),t.isMultiMaterial=!0,t.materials=t,t.clone=function(){return t.slice()},t},t.PointCloud=function(t,e){return new ve(t,e)},t.Particle=function(t){return new oe(t)},t.ParticleSystem=function(t,e){return new ve(t,e)},t.PointCloudMaterial=function(t){return new me(t)},t.ParticleBasicMaterial=function(t){return new me(t)},t.ParticleSystemMaterial=function(t){return new me(t)},t.Vertex=function(t,e,i){return new a(t,e,i)},t.DynamicBufferAttribute=function(t,e){return new pt(t,e).setDynamic(!0)},t.Int8Attribute=function(t,e){return new dt(t,e)},t.Uint8Attribute=function(t,e){return new ft(t,e)},t.Uint8ClampedAttribute=function(t,e){return new mt(t,e)},t.Int16Attribute=function(t,e){return new vt(t,e)},t.Uint16Attribute=function(t,e){return new gt(t,e)},t.Int32Attribute=function(t,e){return new yt(t,e)},t.Uint32Attribute=function(t,e){return new xt(t,e)},t.Float32Attribute=function(t,e){return new _t(t,e)},t.Float64Attribute=function(t,e){return new bt(t,e)},t.ClosedSplineCurve3=wr,t.SplineCurve3=Sr,t.Spline=Tr,t.AxisHelper=function(t){return new Mr(t)},t.BoundingBoxHelper=function(t,e){return new yr(t,e)},t.EdgesHelper=function(t,e){return new de(new fi(t.geometry),new ue({color:void 0!==e?e:16777215}))},t.WireframeHelper=function(t,e){return new de(new be(t.geometry),new ue({color:void 0!==e?e:16777215}))},t.XHRLoader=function(t){return new Ii(t)},t.BinaryTextureLoader=function(t){return new Ni(t)},t.GeometryUtils=gs,t.ImageUtils=ys,t.Projector=function(){this.projectVector=function(t,e){t.project(e)},this.unprojectVector=function(t,e){t.unproject(e)},this.pickingRay=function(){}},t.CanvasRenderer=function(){this.domElement=document.createElementNS("http://www.w3.org/1999/xhtml","canvas"),this.clear=function(){},this.render=function(){},this.setClearColor=function(){},this.setSize=function(){}},Object.defineProperty(t,"__esModule",{value:!0})});
},{}],4:[function(require,module,exports) {
"use strict";var e=this&&this.__extends||function(){var e=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var n in t)t.hasOwnProperty(n)&&(e[n]=t[n])};return function(t,n){function i(){this.constructor=t}e(t,n),t.prototype=null===n?Object.create(n):(i.prototype=n.prototype,new i)}}();exports.__esModule=!0;var t=require("three"),n=require("./common"),i=function(n){function i(e,i){var s=n.call(this)||this;if(s.game=e,!i.materials)throw new Error("Bad Mesh");return s.mesh=new t.Mesh(i.geometry.clone(),i.materials.map(function(e){return e.clone()})),s.add(s.mesh),s.raycaster=new t.Raycaster,s}return e(i,n),i.prototype.collides=function(e,t){var n=this;this.raycaster.set(this.position,e.clone());var i=this.game.getObjects();return this.raycaster.intersectObjects(i,!0).filter(function(e){return e.object!==n&&e.distance<t})},i}(t.Object3D),s=function(n){function i(e){var i=n.call(this,e,l.levelMesh)||this,s=i.mesh.material;return s[0].emissiveIntensity=.4,s[0].emissive=new t.Color(4210752),s[1].emissiveIntensity=.7,s[1].emissive=new t.Color(1052800),s[2].emissiveIntensity=.4,s[2].emissive=new t.Color(1052688),i}return e(i,n),i.prototype.update=function(e){},i}(i),r=function(n){function i(e){var i=n.call(this,e,l.playerMesh)||this;return i.gamepad=null,i.lastUpdate=0,i.speed=5,i.rightTriggerPressed=!0,i.currentHealth=5,i.lastHit=0,i.scale.set(.25,.25,.25),i.light=new t.PointLight(1108496,.3,10),i.light.position.setY(3),i.add(i.light),i.position.setY(.5),i.lineGeometry=new t.Geometry,i.line=new t.Line(i.lineGeometry,new t.LineBasicMaterial({color:65280})),i.add(i.line),i}return e(i,n),i.prototype.update=function(e){var n=(e||0)/1e3;if(0===this.lastUpdate&&(this.lastUpdate=n||0),null===this.gamepad){var i=navigator.getGamepads();if(null===i[0])return;this.gamepad=i[0]}if(this.gamepad.connected){var r=navigator.getGamepads()[this.gamepad.index],o=r.axes[0],l=r.axes[1];o>-.1&&o<.1&&(o=0),l>-.1&&l<.1&&(l=0);var h=new t.Vector3(o,0,l).multiplyScalar(n-this.lastUpdate).multiplyScalar(this.speed);this.collides(h,1).filter(function(e){return e.object.parent instanceof a}).length>1||(this.position.add(h),this.position.clamp(new t.Vector3(-6.75,.5,-6.75),new t.Vector3(6.75,.5,6.75)));var c=r.axes[2],p=r.axes[3];c>-.1&&c<.1&&p>-.1&&p>.1||this.mesh.rotation.set(0,Math.atan2(c,p)-Math.PI/2,0);var d=r.buttons[7].pressed,u=r.buttons[6].pressed;d&&this.fire(),u&&!this.rightTriggerPressed&&this.teleport(),this.rightTriggerPressed=u;var f=new t.Vector3(Math.cos(this.mesh.rotation.y),0,-Math.sin(this.mesh.rotation.y)).normalize(),m=this.collides(f,100).filter(function(e){return e.object.parent instanceof s||e.object.parent instanceof a});m.length>1?this.lineGeometry.vertices=[new t.Vector3,this.line.worldToLocal(m[0].point.clone())]:this.lineGeometry.vertices=[new t.Vector3,f.clone().multiplyScalar(100)],this.lineGeometry.verticesNeedUpdate=!0,this.lastUpdate<this.lastHit+.5?this.light.color.setHex(1052906):this.light.color.setHex(1108496),this.lastUpdate=n}else this.gamepad=null},i.prototype.onHitByBullet=function(){0===this.lastHit&&(this.lastHit=this.lastUpdate),this.lastUpdate<this.lastHit+.5||(this.currentHealth-=1,0===this.currentHealth&&this.game.die(),this.lastHit=this.lastUpdate)},i.prototype.getHealth=function(){return this.currentHealth},i.prototype.fire=function(){this.lastUpdate<this.lastFire+.05||(this.game.addObject(new o(this.game,this,!1,this.getWorldPosition(),this.mesh.rotation.y,1)),this.lastFire=this.lastUpdate)},i.prototype.teleport=function(){var e=new t.Vector3(Math.cos(this.mesh.rotation.y),0,-Math.sin(this.mesh.rotation.y)).normalize(),n=this.collides(e,100).filter(function(e){return e.object.parent instanceof a});if(n.length>0){var i=n[0].object.parent.position.clone(),s=this.position.clone();this.position.copy(i),n[0].object.parent.position.copy(s),this.position.clamp(new t.Vector3(-6.75,.5,-6.75),new t.Vector3(6.75,.5,6.75)),this.currentHealth=t.Math.clamp(this.currentHealth+1,1,5)}},i}(i),a=function(n){function i(e){var i=n.call(this,e,l.turretMesh)||this;i.lastFire=0,i.lastUpdate=0,i.scale.set(.5,.5,.5);var s=new t.PointLight(15339536,.3,10);return s.position.setY(3),i.add(s),i.position.setY(.5),i}return e(i,n),i.prototype.update=function(e){var t=(e||0)/1e3,n=this.game.getPlayerPosition().clone().sub(this.position).setY(0).normalize(),i=Math.atan2(-n.z,n.x);this.rotation.set(0,i+Math.PI,0),this.lastUpdate>this.lastFire+.5&&(this.game.addObject(new o(this.game,this,!0,this.position.clone().setY(.5),i,1.25)),this.lastFire=this.lastUpdate),this.lastUpdate=t},i.prototype.onHitByBullet=function(){this.parent.remove(this),this.game.addScore(100)},i}(i),o=function(n){function i(e,i,s,o,h,c){var p=n.call(this,e,l.bulletMesh)||this;p.owner=i,p.hitsOwner=s,p.firePosition=o,p.fireAngle=h,p.fireDistance=c,p.speed=5,p.lastUpdate=0;var d=p.mesh.material;return d[0].emissiveIntensity=.4,i instanceof r?(d[0].emissive=new t.Color(65280),p.speed=20):i instanceof a&&(d[0].emissive=new t.Color(16711680)),p.scale.set(.25,.25,.25),p.position.copy(p.firePosition),p.position.add(new t.Vector3(Math.cos(p.fireAngle),0,-Math.sin(p.fireAngle)).multiplyScalar(c)),p}return e(i,n),i.prototype.update=function(e){var n=this,s=(e||0)/1e3;0===this.lastUpdate&&(this.lastUpdate=s||0);var o=new t.Vector3(Math.cos(this.fireAngle),0,-Math.sin(this.fireAngle)).normalize(),l=this.speed*(s-this.lastUpdate),h=this.collides(o,2*l).filter(function(e){var t=e.object.parent;return t===n.owner?n.hitsOwner:!(t instanceof i)&&!(t instanceof a&&n.owner instanceof a)});if(0===h.length)this.position.add(o.multiplyScalar(l));else{var c=h[0].object.parent;c instanceof r?c.onHitByBullet():c instanceof a&&c.onHitByBullet(),this.parent.remove(this),this.position.clamp(new t.Vector3(-6.75,.5,-6.75),new t.Vector3(6.75,.5,6.75))}this.lastUpdate=s},i}(i),l=function(){function e(){this.lastSpawn=0,this.lastUpdate=0,this.currentScore=0}return e.prototype.init=function(){var e=this;this.loadAllMeshes(),this.container=document.querySelector("#container")||n.expect(),this.scoreDisplay=document.querySelector("#scoreDisplay")||n.expect(),this.healthDisplay=document.querySelector("#healthDisplay")||n.expect(),this.renderer=new t.WebGLRenderer({antialias:!0}),this.renderer.setClearColor(new t.Color(1052688)),this.renderer.setSize(window.innerWidth,window.innerHeight),this.scene=new t.Scene,this.mainTarget=new t.WebGLRenderTarget(320,200,{minFilter:t.LinearFilter,magFilter:t.NearestFilter}),this.screenScene=new t.Scene,this.screenScene.add(new t.Mesh(new t.PlaneBufferGeometry(2,2,1,1),new t.MeshBasicMaterial({map:this.mainTarget.texture}))),this.screenCamera=new t.OrthographicCamera(-1,1,1,-1),this.screenCamera.position.setZ(100),this.screenCamera.lookAt(new t.Vector3(0,0,0)),this.level=new s(this),this.scene.add(this.level),this.player=new r(this),this.scene.add(this.player),this.container.appendChild(this.renderer.domElement),this.camera=new t.PerspectiveCamera,this.camera.position.set(0,20,5),this.camera.lookAt(new t.Vector3(0,0,0)),window.addEventListener("resize",function(t){e.onResize()}),this.onResize(),this.update()},e.prototype.getLevel=function(){return this.level},e.prototype.getObjects=function(){return this.scene.children},e.prototype.addObject=function(e){this.scene.add(e)},e.prototype.getPlayerPosition=function(){return this.player.position},e.prototype.addScore=function(e){this.currentScore+=e},e.prototype.die=function(){window.location.reload()},e.prototype.onResize=function(){this.renderer.setSize(window.innerWidth,window.innerHeight),this.camera.aspect=window.innerWidth/window.innerHeight,this.camera.updateProjectionMatrix()},e.prototype.update=function(e){var t=(e||0)/1e3;this.lastUpdate>this.lastSpawn+.5&&(this.spawnTurret(),this.lastSpawn=this.lastUpdate),this.scene.children.forEach(function(t){t instanceof i&&t.update(e)}),this.renderer.render(this.scene,this.camera,this.mainTarget,!0),this.renderer.render(this.screenScene,this.screenCamera),requestAnimationFrame(this.update.bind(this)),this.scoreDisplay.innerText=this.currentScore.toString(10),this.healthDisplay.innerText=this.player.getHealth().toString(),this.lastUpdate=t},e.prototype.spawnTurret=function(){var e=this.getObjects().filter(function(e){return e instanceof a});if(!(e.length>9)){var n=new t.Vector3(t.Math.randFloat(-6.5,6.5),0,t.Math.randFloat(-6.5,6.5));if(!(Math.min.apply(Math,e.map(function(e){return e.position.distanceTo(n)}))<4)){var i=new a(this);i.position.copy(n),this.addObject(i)}}},e.prototype.loadAllMeshes=function(){var n=new t.JSONLoader;e.levelMesh=n.parse(JSON.parse('{\n    "metadata":{\n        "type":"Geometry",\n        "generator":"io_three",\n        "version":3,\n        "vertices":732,\n        "normals":38,\n        "materials":3,\n        "uvs":0,\n        "faces":765\n    },\n    "vertices":[-8,3.49691e-07,8,-7.15789,3.49691e-07,8,-6.31579,3.49691e-07,8,-5.47368,3.49691e-07,8,-4.63158,3.49691e-07,8,-3.78947,3.49691e-07,8,-2.94737,3.49691e-07,8,-2.10526,3.49691e-07,8,-1.26316,3.49691e-07,8,-0.421052,3.49691e-07,8,0.421053,3.49691e-07,8,1.26316,3.49691e-07,8,2.10526,3.49691e-07,8,2.94737,3.49691e-07,8,3.78947,3.49691e-07,8,4.63158,3.49691e-07,8,5.47368,3.49691e-07,8,6.31579,3.49691e-07,8,7.1579,3.49691e-07,8,8,3.49691e-07,8,-8,3.12881e-07,7.15789,-7.15789,3.12881e-07,7.15789,-6.31579,3.12881e-07,7.15789,-5.47368,3.12881e-07,7.15789,-4.63158,3.12881e-07,7.15789,-3.78947,3.12881e-07,7.15789,-2.94737,3.12881e-07,7.15789,-2.10526,3.12881e-07,7.15789,-1.26316,3.12881e-07,7.15789,-0.421052,3.12881e-07,7.15789,0.421053,3.12881e-07,7.15789,1.26316,3.12881e-07,7.15789,2.10526,3.12881e-07,7.15789,2.94737,3.12881e-07,7.15789,3.78947,3.12881e-07,7.15789,4.63158,3.12881e-07,7.15789,5.47368,3.12881e-07,7.15789,6.31579,3.12881e-07,7.15789,7.1579,3.12881e-07,7.15789,8,3.12881e-07,7.15789,-8,2.76072e-07,6.31579,-7.15789,2.76072e-07,6.31579,-6.31579,2.76072e-07,6.31579,-5.47368,2.76072e-07,6.31579,-4.63158,2.76072e-07,6.31579,-3.78947,2.76072e-07,6.31579,-2.94737,2.76072e-07,6.31579,-2.10526,2.76072e-07,6.31579,-1.26316,2.76072e-07,6.31579,-0.421052,2.76072e-07,6.31579,0.421053,2.76072e-07,6.31579,1.26316,2.76072e-07,6.31579,2.10526,2.76072e-07,6.31579,2.94737,2.76072e-07,6.31579,3.78947,2.76072e-07,6.31579,4.63158,2.76072e-07,6.31579,5.47368,2.76072e-07,6.31579,6.31579,2.76072e-07,6.31579,7.1579,2.76072e-07,6.31579,8,2.76072e-07,6.31579,-8,2.39262e-07,5.47368,-7.15789,2.39262e-07,5.47368,-6.31579,2.39262e-07,5.47368,-5.47368,2.39262e-07,5.47368,-4.63158,2.39262e-07,5.47368,-3.78947,2.39262e-07,5.47368,-2.94737,2.39262e-07,5.47368,-2.10526,2.39262e-07,5.47368,-1.26316,2.39262e-07,5.47368,-0.421052,2.39262e-07,5.47368,0.421053,2.39262e-07,5.47368,1.26316,2.39262e-07,5.47368,2.10526,2.39262e-07,5.47368,2.94737,2.39262e-07,5.47368,3.78947,2.39262e-07,5.47368,4.63158,2.39262e-07,5.47368,5.47368,2.39262e-07,5.47368,6.31579,2.39262e-07,5.47368,7.1579,2.39262e-07,5.47368,8,2.39262e-07,5.47368,-8,2.02453e-07,4.63158,-7.15789,2.02453e-07,4.63158,-6.31579,2.02453e-07,4.63158,-5.47368,2.02453e-07,4.63158,-4.63158,2.02453e-07,4.63158,-3.78947,2.02453e-07,4.63158,-2.94737,2.02453e-07,4.63158,-2.10526,2.02453e-07,4.63158,-1.26316,2.02453e-07,4.63158,-0.421052,2.02453e-07,4.63158,0.421053,2.02453e-07,4.63158,1.26316,2.02453e-07,4.63158,2.10526,2.02453e-07,4.63158,2.94737,2.02453e-07,4.63158,3.78947,2.02453e-07,4.63158,4.63158,2.02453e-07,4.63158,5.47368,2.02453e-07,4.63158,6.31579,2.02453e-07,4.63158,7.1579,2.02453e-07,4.63158,8,2.02453e-07,4.63158,-8,1.65643e-07,3.78947,-7.15789,1.65643e-07,3.78947,-6.31579,1.65643e-07,3.78947,-5.47368,1.65643e-07,3.78947,-4.63158,1.65643e-07,3.78947,-3.78947,1.65643e-07,3.78947,-2.94737,1.65643e-07,3.78947,-2.10526,1.65643e-07,3.78947,-1.26316,1.65643e-07,3.78947,-0.421052,1.65643e-07,3.78947,0.421053,1.65643e-07,3.78947,1.26316,1.65643e-07,3.78947,2.10526,1.65643e-07,3.78947,2.94737,1.65643e-07,3.78947,3.78947,1.65643e-07,3.78947,4.63158,1.65643e-07,3.78947,5.47368,1.65643e-07,3.78947,6.31579,1.65643e-07,3.78947,7.1579,1.65643e-07,3.78947,8,1.65643e-07,3.78947,-8,1.28834e-07,2.94737,-7.15789,1.28834e-07,2.94737,-6.31579,1.28834e-07,2.94737,-5.47368,1.28834e-07,2.94737,-4.63158,1.28834e-07,2.94737,-3.78947,1.28834e-07,2.94737,-2.94737,1.28834e-07,2.94737,-2.10526,1.28834e-07,2.94737,-1.26316,1.28834e-07,2.94737,-0.421052,1.28834e-07,2.94737,0.421053,1.28834e-07,2.94737,1.26316,1.28834e-07,2.94737,2.10526,1.28834e-07,2.94737,2.94737,1.28834e-07,2.94737,3.78947,1.28834e-07,2.94737,4.63158,1.28834e-07,2.94737,5.47368,1.28834e-07,2.94737,6.31579,1.28834e-07,2.94737,7.1579,1.28834e-07,2.94737,8,1.28834e-07,2.94737,-8,9.2024e-08,2.10526,-7.15789,9.2024e-08,2.10526,-6.31579,9.2024e-08,2.10526,-5.47368,9.2024e-08,2.10526,-4.63158,9.2024e-08,2.10526,-3.78947,9.2024e-08,2.10526,-2.94737,9.2024e-08,2.10526,-2.10526,9.2024e-08,2.10526,-1.26316,9.2024e-08,2.10526,-0.421052,9.2024e-08,2.10526,0.421053,9.2024e-08,2.10526,1.26316,9.2024e-08,2.10526,2.10526,9.2024e-08,2.10526,2.94737,9.2024e-08,2.10526,3.78947,9.2024e-08,2.10526,4.63158,9.2024e-08,2.10526,5.47368,9.2024e-08,2.10526,6.31579,9.2024e-08,2.10526,7.1579,9.2024e-08,2.10526,8,9.2024e-08,2.10526,-8,5.52144e-08,1.26316,-7.15789,5.52144e-08,1.26316,-6.31579,5.52144e-08,1.26316,-5.47368,5.52144e-08,1.26316,-4.63158,5.52144e-08,1.26316,-3.78947,5.52144e-08,1.26316,-2.94737,5.52144e-08,1.26316,-2.10526,5.52144e-08,1.26316,-1.26316,5.52144e-08,1.26316,-0.421052,5.52144e-08,1.26316,0.421053,5.52144e-08,1.26316,1.26316,5.52144e-08,1.26316,2.10526,5.52144e-08,1.26316,2.94737,5.52144e-08,1.26316,3.78947,5.52144e-08,1.26316,4.63158,5.52144e-08,1.26316,5.47368,5.52144e-08,1.26316,6.31579,5.52144e-08,1.26316,7.1579,5.52144e-08,1.26316,8,5.52144e-08,1.26316,-8,1.84048e-08,0.421052,-7.15789,1.84048e-08,0.421052,-6.31579,1.84048e-08,0.421052,-5.47368,1.84048e-08,0.421052,-4.63158,1.84048e-08,0.421052,-3.78947,1.84048e-08,0.421052,-2.94737,1.84048e-08,0.421052,-2.10526,1.84048e-08,0.421052,-1.26316,1.84048e-08,0.421052,-0.421052,1.84048e-08,0.421052,0.421053,1.84048e-08,0.421052,1.26316,1.84048e-08,0.421052,2.10526,1.84048e-08,0.421052,2.94737,1.84048e-08,0.421052,3.78947,1.84048e-08,0.421052,4.63158,1.84048e-08,0.421052,5.47368,1.84048e-08,0.421052,6.31579,1.84048e-08,0.421052,7.1579,1.84048e-08,0.421052,8,1.84048e-08,0.421052,-8,-1.84048e-08,-0.421053,-7.15789,-1.84048e-08,-0.421053,-6.31579,-1.84048e-08,-0.421053,-5.47368,-1.84048e-08,-0.421053,-4.63158,-1.84048e-08,-0.421053,-3.78947,-1.84048e-08,-0.421053,-2.94737,-1.84048e-08,-0.421053,-2.10526,-1.84048e-08,-0.421053,-1.26316,-1.84048e-08,-0.421053,-0.421052,-1.84048e-08,-0.421053,0.421053,-1.84048e-08,-0.421053,1.26316,-1.84048e-08,-0.421053,2.10526,-1.84048e-08,-0.421053,2.94737,-1.84048e-08,-0.421053,3.78947,-1.84048e-08,-0.421053,4.63158,-1.84048e-08,-0.421053,5.47368,-1.84048e-08,-0.421053,6.31579,-1.84048e-08,-0.421053,7.1579,-1.84048e-08,-0.421053,8,-1.84048e-08,-0.421053,-8,-5.52144e-08,-1.26316,-7.15789,-5.52144e-08,-1.26316,-6.31579,-5.52144e-08,-1.26316,-5.47368,-5.52144e-08,-1.26316,-4.63158,-5.52144e-08,-1.26316,-3.78947,-5.52144e-08,-1.26316,-2.94737,-5.52144e-08,-1.26316,-2.10526,-5.52144e-08,-1.26316,-1.26316,-5.52144e-08,-1.26316,-0.421052,-5.52144e-08,-1.26316,0.421053,-5.52144e-08,-1.26316,1.26316,-5.52144e-08,-1.26316,2.10526,-5.52144e-08,-1.26316,2.94737,-5.52144e-08,-1.26316,3.78947,-5.52144e-08,-1.26316,4.63158,-5.52144e-08,-1.26316,5.47368,-5.52144e-08,-1.26316,6.31579,-5.52144e-08,-1.26316,7.1579,-5.52144e-08,-1.26316,8,-5.52144e-08,-1.26316,-8,-9.2024e-08,-2.10526,-7.15789,-9.2024e-08,-2.10526,-6.31579,-9.2024e-08,-2.10526,-5.47368,-9.2024e-08,-2.10526,-4.63158,-9.2024e-08,-2.10526,-3.78947,-9.2024e-08,-2.10526,-2.94737,-9.2024e-08,-2.10526,-2.10526,-9.2024e-08,-2.10526,-1.26316,-9.2024e-08,-2.10526,-0.421052,-9.2024e-08,-2.10526,0.421053,-9.2024e-08,-2.10526,1.26316,-9.2024e-08,-2.10526,2.10526,-9.2024e-08,-2.10526,2.94737,-9.2024e-08,-2.10526,3.78947,-9.2024e-08,-2.10526,4.63158,-9.2024e-08,-2.10526,5.47368,-9.2024e-08,-2.10526,6.31579,-9.2024e-08,-2.10526,7.1579,-9.2024e-08,-2.10526,8,-9.2024e-08,-2.10526,-8,-1.28834e-07,-2.94737,-7.15789,-1.28834e-07,-2.94737,-6.31579,-1.28834e-07,-2.94737,-5.47368,-1.28834e-07,-2.94737,-4.63158,-1.28834e-07,-2.94737,-3.78947,-1.28834e-07,-2.94737,-2.94737,-1.28834e-07,-2.94737,-2.10526,-1.28834e-07,-2.94737,-1.26316,-1.28834e-07,-2.94737,-0.421052,-1.28834e-07,-2.94737,0.421053,-1.28834e-07,-2.94737,1.26316,-1.28834e-07,-2.94737,2.10526,-1.28834e-07,-2.94737,2.94737,-1.28834e-07,-2.94737,3.78947,-1.28834e-07,-2.94737,4.63158,-1.28834e-07,-2.94737,5.47368,-1.28834e-07,-2.94737,6.31579,-1.28834e-07,-2.94737,7.1579,-1.28834e-07,-2.94737,8,-1.28834e-07,-2.94737,-8,-1.65643e-07,-3.78947,-7.15789,-1.65643e-07,-3.78947,-6.31579,-1.65643e-07,-3.78947,-5.47368,-1.65643e-07,-3.78947,-4.63158,-1.65643e-07,-3.78947,-3.78947,-1.65643e-07,-3.78947,-2.94737,-1.65643e-07,-3.78947,-2.10526,-1.65643e-07,-3.78947,-1.26316,-1.65643e-07,-3.78947,-0.421052,-1.65643e-07,-3.78947,0.421053,-1.65643e-07,-3.78947,1.26316,-1.65643e-07,-3.78947,2.10526,-1.65643e-07,-3.78947,2.94737,-1.65643e-07,-3.78947,3.78947,-1.65643e-07,-3.78947,4.63158,-1.65643e-07,-3.78947,5.47368,-1.65643e-07,-3.78947,6.31579,-1.65643e-07,-3.78947,7.1579,-1.65643e-07,-3.78947,8,-1.65643e-07,-3.78947,-8,-2.02453e-07,-4.63158,-7.15789,-2.02453e-07,-4.63158,-6.31579,-2.02453e-07,-4.63158,-5.47368,-2.02453e-07,-4.63158,-4.63158,-2.02453e-07,-4.63158,-3.78947,-2.02453e-07,-4.63158,-2.94737,-2.02453e-07,-4.63158,-2.10526,-2.02453e-07,-4.63158,-1.26316,-2.02453e-07,-4.63158,-0.421052,-2.02453e-07,-4.63158,0.421053,-2.02453e-07,-4.63158,1.26316,-2.02453e-07,-4.63158,2.10526,-2.02453e-07,-4.63158,2.94737,-2.02453e-07,-4.63158,3.78947,-2.02453e-07,-4.63158,4.63158,-2.02453e-07,-4.63158,5.47368,-2.02453e-07,-4.63158,6.31579,-2.02453e-07,-4.63158,7.1579,-2.02453e-07,-4.63158,8,-2.02453e-07,-4.63158,-8,-2.39262e-07,-5.47368,-7.15789,-2.39262e-07,-5.47368,-6.31579,-2.39262e-07,-5.47368,-5.47368,-2.39262e-07,-5.47368,-4.63158,-2.39262e-07,-5.47368,-3.78947,-2.39262e-07,-5.47368,-2.94737,-2.39262e-07,-5.47368,-2.10526,-2.39262e-07,-5.47368,-1.26316,-2.39262e-07,-5.47368,-0.421052,-2.39262e-07,-5.47368,0.421053,-2.39262e-07,-5.47368,1.26316,-2.39262e-07,-5.47368,2.10526,-2.39262e-07,-5.47368,2.94737,-2.39262e-07,-5.47368,3.78947,-2.39262e-07,-5.47368,4.63158,-2.39262e-07,-5.47368,5.47368,-2.39262e-07,-5.47368,6.31579,-2.39262e-07,-5.47368,7.1579,-2.39262e-07,-5.47368,8,-2.39262e-07,-5.47368,-8,-2.76072e-07,-6.31579,-7.15789,-2.76072e-07,-6.31579,-6.31579,-2.76072e-07,-6.31579,-5.47368,-2.76072e-07,-6.31579,-4.63158,-2.76072e-07,-6.31579,-3.78947,-2.76072e-07,-6.31579,-2.94737,-2.76072e-07,-6.31579,-2.10526,-2.76072e-07,-6.31579,-1.26316,-2.76072e-07,-6.31579,-0.421052,-2.76072e-07,-6.31579,0.421053,-2.76072e-07,-6.31579,1.26316,-2.76072e-07,-6.31579,2.10526,-2.76072e-07,-6.31579,2.94737,-2.76072e-07,-6.31579,3.78947,-2.76072e-07,-6.31579,4.63158,-2.76072e-07,-6.31579,5.47368,-2.76072e-07,-6.31579,6.31579,-2.76072e-07,-6.31579,7.1579,-2.76072e-07,-6.31579,8,-2.76072e-07,-6.31579,-8,-3.12882e-07,-7.1579,-7.15789,-3.12882e-07,-7.1579,-6.31579,-3.12882e-07,-7.1579,-5.47368,-3.12882e-07,-7.1579,-4.63158,-3.12882e-07,-7.1579,-3.78947,-3.12882e-07,-7.1579,-2.94737,-3.12882e-07,-7.1579,-2.10526,-3.12882e-07,-7.1579,-1.26316,-3.12882e-07,-7.1579,-0.421052,-3.12882e-07,-7.1579,0.421053,-3.12882e-07,-7.1579,1.26316,-3.12882e-07,-7.1579,2.10526,-3.12882e-07,-7.1579,2.94737,-3.12882e-07,-7.1579,3.78947,-3.12882e-07,-7.1579,4.63158,-3.12882e-07,-7.1579,5.47368,-3.12882e-07,-7.1579,6.31579,-3.12882e-07,-7.1579,7.1579,-3.12882e-07,-7.1579,8,-3.12882e-07,-7.1579,-8,-3.49691e-07,-8,-7.15789,-3.49691e-07,-8,-6.31579,-3.49691e-07,-8,-5.47368,-3.49691e-07,-8,-4.63158,-3.49691e-07,-8,-3.78947,-3.49691e-07,-8,-2.94737,-3.49691e-07,-8,-2.10526,-3.49691e-07,-8,-1.26316,-3.49691e-07,-8,-0.421052,-3.49691e-07,-8,0.421053,-3.49691e-07,-8,1.26316,-3.49691e-07,-8,2.10526,-3.49691e-07,-8,2.94737,-3.49691e-07,-8,3.78947,-3.49691e-07,-8,4.63158,-3.49691e-07,-8,5.47368,-3.49691e-07,-8,6.31579,-3.49691e-07,-8,7.1579,-3.49691e-07,-8,8,-3.49691e-07,-8,-8,1,7.15789,-8,1,8,-7.15789,1,8,-7.15789,1,7.15789,-6.31579,1,8,-6.31579,1,7.15789,-5.47368,1,8,-5.47368,1,7.15789,-4.63158,1,8,-4.63158,1,7.15789,-3.78947,1,8,-3.78947,1,7.15789,-2.94737,1,8,-2.94737,1,7.15789,-2.10526,1,8,-2.10526,1,7.15789,-1.26316,1,8,-1.26316,1,7.15789,-0.421052,1,8,-0.421052,1,7.15789,0.421053,1,8,0.421053,1,7.15789,1.26316,1,8,1.26316,1,7.15789,2.10526,1,8,2.10526,1,7.15789,2.94737,1,8,2.94737,1,7.15789,3.78947,1,8,3.78947,1,7.15789,4.63158,1,8,4.63158,1,7.15789,5.47368,1,8,5.47368,1,7.15789,6.31579,1,8,6.31579,1,7.15789,7.1579,1,8,7.1579,1,7.15789,8,1,8,8,1,7.15789,-8,1,6.31579,-7.15789,1,6.31579,7.1579,1,6.31579,8,1,6.31579,-8,1,5.47368,-7.15789,1,5.47368,7.1579,1,5.47368,8,1,5.47368,-8,1,4.63158,-7.15789,1,4.63158,7.1579,1,4.63158,8,1,4.63158,-8,1,3.78947,-7.15789,1,3.78947,7.1579,1,3.78947,8,1,3.78947,-8,1,2.94737,-7.15789,1,2.94737,7.1579,1,2.94737,8,1,2.94737,-8,1,2.10526,-7.15789,1,2.10526,7.1579,1,2.10526,8,1,2.10526,-8,1,1.26316,-7.15789,1,1.26316,7.1579,1,1.26316,8,1,1.26316,-8,1,0.421052,-7.15789,1,0.421052,7.1579,1,0.421052,8,1,0.421052,-8,1,-0.421053,-7.15789,1,-0.421053,7.1579,1,-0.421053,8,1,-0.421053,-8,1,-1.26316,-7.15789,1,-1.26316,7.1579,1,-1.26316,8,1,-1.26316,-8,1,-2.10526,-7.15789,1,-2.10526,7.1579,1,-2.10526,8,1,-2.10526,-8,1,-2.94737,-7.15789,1,-2.94737,7.1579,1,-2.94737,8,1,-2.94737,-8,1,-3.78947,-7.15789,1,-3.78947,7.1579,1,-3.78947,8,1,-3.78947,-8,1,-4.63158,-7.15789,1,-4.63158,7.1579,1,-4.63158,8,1,-4.63158,-8,1,-5.47368,-7.15789,1,-5.47368,7.1579,1,-5.47368,8,1,-5.47368,-8,1,-6.31579,-7.15789,1,-6.31579,7.1579,1,-6.31579,8,1,-6.31579,-8,1,-7.1579,-7.15789,1,-7.1579,-6.31579,1,-7.1579,-5.47368,1,-7.1579,-4.63158,1,-7.1579,-3.78947,1,-7.1579,-2.94737,1,-7.1579,-2.10526,1,-7.1579,-1.26316,1,-7.1579,-0.421052,1,-7.1579,0.421053,1,-7.1579,1.26316,1,-7.1579,2.10526,1,-7.1579,2.94737,1,-7.1579,3.78947,1,-7.1579,4.63158,1,-7.1579,5.47368,1,-7.1579,6.31579,1,-7.1579,7.1579,1,-7.1579,8,1,-7.1579,-8,1,-8,-7.15789,1,-8,-6.31579,1,-8,-5.47368,1,-8,-4.63158,1,-8,-3.78947,1,-8,-2.94737,1,-8,-2.10526,1,-8,-1.26316,1,-8,-0.421052,1,-8,0.421053,1,-8,1.26316,1,-8,2.10526,1,-8,2.94737,1,-8,3.78947,1,-8,4.63158,1,-8,5.47368,1,-8,6.31579,1,-8,7.1579,1,-8,8,1,-8,-5.47368,-0.25,6.31579,-6.31579,-0.25,6.31579,0.421053,-0.25,6.31579,-0.421052,-0.25,6.31579,6.31579,-0.25,6.31579,5.47368,-0.25,6.31579,-6.31579,-0.25,5.47368,-5.47368,-0.25,5.47368,-4.63158,-0.25,5.47368,-0.421052,-0.25,5.47368,-1.26316,-0.25,5.47368,0.421053,-0.25,5.47368,1.26316,-0.25,5.47368,5.47368,-0.25,5.47368,4.63158,-0.25,5.47368,6.31579,-0.25,5.47368,-5.47368,-0.25,4.63158,-4.63158,-0.25,4.63158,-3.78947,-0.25,4.63158,-1.26316,-0.25,4.63158,-2.10526,-0.25,4.63158,-0.421052,-0.25,4.63158,0.421053,-0.25,4.63158,1.26316,-0.25,4.63158,2.10526,-0.25,4.63158,4.63158,-0.25,4.63158,3.78947,-0.25,4.63158,5.47368,-0.25,4.63158,-4.63158,-0.25,3.78947,-3.78947,-0.25,3.78947,-2.94737,-0.25,3.78947,-2.10526,-0.25,3.78947,-1.26316,-0.25,3.78947,1.26316,-0.25,3.78947,2.10526,-0.25,3.78947,3.78947,-0.25,3.78947,2.94737,-0.25,3.78947,4.63158,-0.25,3.78947,-4.63158,-0.25,2.94737,-5.47368,-0.25,2.94737,-3.78947,-0.25,2.94737,-2.94737,-0.25,2.94737,-2.10526,-0.25,2.94737,-0.421052,-0.25,2.94737,-1.26316,-0.25,2.94737,1.26316,-0.25,2.94737,0.421053,-0.25,2.94737,2.94737,-0.25,2.94737,2.10526,-0.25,2.94737,3.78947,-0.25,2.94737,5.47368,-0.25,2.94737,4.63158,-0.25,2.94737,-5.47368,-0.25,2.10526,-4.63158,-0.25,2.10526,-3.78947,-0.25,2.10526,-2.94737,-0.25,2.10526,-2.10526,-0.25,2.10526,-1.26316,-0.25,2.10526,-0.421052,-0.25,2.10526,0.421053,-0.25,2.10526,1.26316,-0.25,2.10526,2.10526,-0.25,2.10526,2.94737,-0.25,2.10526,4.63158,-0.25,2.10526,3.78947,-0.25,2.10526,5.47368,-0.25,2.10526,-4.63158,-0.25,1.26316,-5.47368,-0.25,1.26316,-3.78947,-0.25,1.26316,-2.94737,-0.25,1.26316,-2.10526,-0.25,1.26316,-1.26316,-0.25,1.26316,-0.421052,-0.25,1.26316,0.421053,-0.25,1.26316,1.26316,-0.25,1.26316,2.10526,-0.25,1.26316,3.78947,-0.25,1.26316,2.94737,-0.25,1.26316,4.63158,-0.25,1.26316,5.47368,-0.25,1.26316,-5.47368,-0.25,0.421052,-4.63158,-0.25,0.421052,-3.78947,-0.25,0.421052,-2.94737,-0.25,0.421052,-1.26316,-0.25,0.421052,-2.10526,-0.25,0.421052,-0.421052,-0.25,0.421052,0.421053,-0.25,0.421052,1.26316,-0.25,0.421052,2.10526,-0.25,0.421052,2.94737,-0.25,0.421052,3.78947,-0.25,0.421052,4.63158,-0.25,0.421052,5.47368,-0.25,0.421052,-4.63158,-0.25,-0.421053,-5.47368,-0.25,-0.421053,-3.78947,-0.25,-0.421053,-2.94737,-0.25,-0.421053,-2.10526,-0.25,-0.421053,-1.26316,-0.25,-0.421053,-0.421052,-0.25,-0.421053,0.421053,-0.25,-0.421053,1.26316,-0.25,-0.421053,2.10526,-0.25,-0.421053,3.78947,-0.25,-0.421053,2.94737,-0.25,-0.421053,4.63158,-0.25,-0.421053,5.47368,-0.25,-0.421053,-5.47368,-0.25,-1.26316,-4.63158,-0.25,-1.26316,-3.78947,-0.25,-1.26316,-2.94737,-0.25,-1.26316,-1.26316,-0.25,-1.26316,-2.10526,-0.25,-1.26316,-0.421052,-0.25,-1.26316,0.421053,-0.25,-1.26316,1.26316,-0.25,-1.26316,2.10526,-0.25,-1.26316,2.94737,-0.25,-1.26316,3.78947,-0.25,-1.26316,4.63158,-0.25,-1.26316,5.47368,-0.25,-1.26316,-4.63158,-0.25,-2.10526,-5.47368,-0.25,-2.10526,-3.78947,-0.25,-2.10526,-2.10526,-0.25,-2.10526,-2.94737,-0.25,-2.10526,-1.26316,-0.25,-2.10526,-0.421052,-0.25,-2.10526,0.421053,-0.25,-2.10526,1.26316,-0.25,-2.10526,2.10526,-0.25,-2.10526,2.94737,-0.25,-2.10526,3.78947,-0.25,-2.10526,4.63158,-0.25,-2.10526,5.47368,-0.25,-2.10526,-5.47368,-0.25,-2.94737,-4.63158,-0.25,-2.94737,-2.94737,-0.25,-2.94737,-3.78947,-0.25,-2.94737,-2.10526,-0.25,-2.94737,-1.26316,-0.25,-2.94737,-0.421052,-0.25,-2.94737,0.421053,-0.25,-2.94737,1.26316,-0.25,-2.94737,2.10526,-0.25,-2.94737,2.94737,-0.25,-2.94737,3.78947,-0.25,-2.94737,4.63158,-0.25,-2.94737,5.47368,-0.25,-2.94737,-3.78947,-0.25,-3.78947,-4.63158,-0.25,-3.78947,-2.94737,-0.25,-3.78947,-1.26316,-0.25,-3.78947,-2.10526,-0.25,-3.78947,2.10526,-0.25,-3.78947,1.26316,-0.25,-3.78947,2.94737,-0.25,-3.78947,3.78947,-0.25,-3.78947,4.63158,-0.25,-3.78947,-4.63158,-0.25,-4.63158,-5.47368,-0.25,-4.63158,-3.78947,-0.25,-4.63158,-2.10526,-0.25,-4.63158,-1.26316,-0.25,-4.63158,-0.421052,-0.25,-4.63158,1.26316,-0.25,-4.63158,0.421053,-0.25,-4.63158,2.10526,-0.25,-4.63158,3.78947,-0.25,-4.63158,4.63158,-0.25,-4.63158,5.47368,-0.25,-4.63158,-5.47368,-0.25,-5.47368,-6.31579,-0.25,-5.47368,-4.63158,-0.25,-5.47368,-1.26316,-0.25,-5.47368,-0.421052,-0.25,-5.47368,0.421053,-0.25,-5.47368,1.26316,-0.25,-5.47368,4.63158,-0.25,-5.47368,5.47368,-0.25,-5.47368,6.31579,-0.25,-5.47368,-6.31579,-0.25,-6.31579,-5.47368,-0.25,-6.31579,-0.421052,-0.25,-6.31579,0.421053,-0.25,-6.31579,5.47368,-0.25,-6.31579,6.31579,-0.25,-6.31579],\n    "faces":[35,26,25,411,413,2,0,0,0,0,35,361,362,506,505,2,1,1,1,1,35,388,387,531,532,2,0,0,0,0,35,98,78,446,450,2,2,2,2,2,35,5,6,412,410,2,1,1,1,1,35,387,386,530,531,2,0,0,0,0,35,25,24,409,411,2,0,0,0,0,35,341,361,505,501,2,3,3,3,3,35,360,340,500,504,2,2,2,2,2,35,386,385,529,530,2,0,0,0,0,35,261,281,489,485,2,3,3,3,3,35,4,5,410,408,2,1,1,1,1,35,280,260,484,488,2,2,2,2,2,35,24,23,407,409,2,0,0,0,0,35,339,359,503,499,2,3,3,3,3,35,385,384,528,529,2,0,0,0,0,35,181,201,473,469,2,3,3,3,3,35,200,180,468,472,2,2,2,2,2,35,259,279,487,483,2,3,3,3,3,35,3,4,408,406,2,1,1,1,1,35,21,22,42,41,0,4,4,4,4,35,22,23,43,42,0,5,5,5,5,35,23,24,44,43,0,4,4,4,4,35,24,25,45,44,0,4,4,4,4,35,25,26,46,45,0,5,5,5,5,35,26,27,47,46,0,4,4,4,4,35,27,28,48,47,0,4,4,4,4,35,28,29,49,48,0,4,4,4,4,35,29,30,50,49,0,4,4,4,4,35,30,31,51,50,0,5,5,5,5,35,31,32,52,51,0,5,5,5,5,35,32,33,53,52,0,4,4,4,4,35,33,34,54,53,0,5,5,5,5,35,34,35,55,54,0,4,4,4,4,35,35,36,56,55,0,5,5,5,5,35,36,37,57,56,0,5,5,5,5,35,37,38,58,57,0,4,4,4,4,35,358,338,498,502,2,2,2,2,2,35,101,121,457,453,2,3,3,3,3,35,41,42,62,61,0,6,6,6,6,35,224,225,654,653,0,7,7,7,7,35,43,44,64,63,0,6,6,6,6,35,44,45,65,64,0,6,6,6,6,35,45,46,66,65,0,8,8,8,8,35,46,47,67,66,0,6,6,6,6,35,47,48,68,67,0,6,6,6,6,35,48,49,69,68,0,6,6,6,6,35,170,171,618,617,0,7,7,7,7,35,50,51,71,70,0,8,8,8,8,35,51,52,72,71,0,8,8,8,8,35,52,53,73,72,0,9,9,9,9,35,53,54,74,73,0,8,8,8,8,35,54,55,75,74,0,9,9,9,9,35,55,56,76,75,0,8,8,8,8,35,225,205,640,654,0,10,10,10,10,35,57,58,78,77,0,9,9,9,9,35,384,383,527,528,2,0,0,0,0,35,23,22,405,407,2,0,0,0,0,35,61,62,82,81,0,11,11,11,11,35,62,63,83,82,0,12,12,12,12,35,63,64,552,551,0,7,7,7,7,35,64,65,85,84,0,11,11,11,11,35,65,66,86,85,0,12,12,12,12,35,66,67,87,86,0,11,11,11,11,35,67,68,88,87,0,11,11,11,11,35,331,330,721,722,0,13,13,13,13,35,69,70,90,89,0,11,11,11,11,35,171,151,604,618,0,10,10,10,10,35,71,72,92,91,0,12,12,12,12,35,72,73,93,92,0,11,11,11,11,35,73,74,94,93,0,12,12,12,12,35,74,75,95,94,0,11,11,11,11,35,224,223,652,653,0,13,13,13,13,35,76,77,97,96,0,12,12,12,12,35,77,78,98,97,0,11,11,11,11,35,120,100,452,456,2,2,2,2,2,35,179,199,471,467,2,3,3,3,3,35,81,82,102,101,0,11,11,11,11,35,82,83,103,102,0,12,12,12,12,35,83,84,104,103,0,11,11,11,11,35,311,331,722,710,0,14,14,14,14,35,85,86,106,105,0,12,12,12,12,35,86,87,107,106,0,11,11,11,11,35,170,169,616,617,0,13,13,13,13,35,88,89,109,108,0,11,11,11,11,35,89,90,110,109,0,11,11,11,11,35,90,91,111,110,0,12,12,12,12,35,204,224,653,638,0,14,14,14,14,35,92,93,113,112,0,11,11,11,11,35,93,94,114,113,0,12,12,12,12,35,63,62,550,551,0,13,13,13,13,35,95,96,116,115,0,12,12,12,12,35,96,97,117,116,0,12,12,12,12,35,97,98,118,117,0,11,11,11,11,35,278,258,482,486,2,2,2,2,2,35,21,41,441,403,2,3,3,3,3,35,101,102,122,121,0,15,15,15,15,35,102,103,123,122,0,15,15,15,15,35,103,104,124,123,0,15,15,15,15,35,104,105,125,124,0,15,15,15,15,35,329,330,721,720,0,7,7,7,7,35,106,107,127,126,0,15,15,15,15,35,107,108,128,127,0,15,15,15,15,35,108,109,129,128,0,15,15,15,15,35,109,110,130,129,0,15,15,15,15,35,110,111,131,130,0,15,15,15,15,35,111,112,132,131,0,15,15,15,15,35,112,113,133,132,0,16,16,16,16,35,150,170,617,603,0,14,14,14,14,35,114,115,135,134,0,16,16,16,16,35,115,116,136,135,0,15,15,15,15,35,116,117,137,136,0,15,15,15,15,35,117,118,138,137,0,16,16,16,16,35,383,382,526,527,2,0,0,0,0,35,2,3,406,404,2,1,1,1,1,35,121,122,142,141,0,11,11,11,11,35,122,123,143,142,0,12,12,12,12,35,276,275,692,693,0,13,13,13,13,35,124,125,145,144,0,11,11,11,11,35,125,126,146,145,0,12,12,12,12,35,43,63,551,544,0,14,14,14,14,35,127,128,148,147,0,11,11,11,11,35,330,310,711,721,0,10,10,10,10,35,129,130,150,149,0,11,11,11,11,35,168,169,616,615,0,7,7,7,7,35,131,132,152,151,0,12,12,12,12,35,223,203,639,652,0,10,10,10,10,35,133,134,154,153,0,12,12,12,12,35,134,135,155,154,0,11,11,11,11,35,256,276,693,679,0,14,14,14,14,35,136,137,157,156,0,12,12,12,12,35,137,138,158,157,0,11,11,11,11,35,40,20,400,440,2,2,2,2,2,35,99,119,455,451,2,3,3,3,3,35,141,142,162,161,0,17,17,17,17,35,142,143,163,162,0,18,18,18,18,35,143,144,164,163,0,17,17,17,17,35,329,328,719,720,0,13,13,13,13,35,145,146,166,165,0,18,18,18,18,35,146,147,167,166,0,17,17,17,17,35,115,114,579,581,0,13,13,13,13,35,148,149,169,168,0,17,17,17,17,35,169,149,602,616,0,10,10,10,10,35,150,151,171,170,0,18,18,18,18,35,62,42,545,550,0,10,10,10,10,35,152,153,173,172,0,19,19,19,19,35,153,154,174,173,0,18,18,18,18,35,309,329,720,709,0,14,14,14,14,35,155,156,176,175,0,18,18,18,18,35,156,157,177,176,0,18,18,18,18,35,157,158,178,177,0,19,19,19,19,35,198,178,466,470,2,2,2,2,2,35,22,21,403,405,2,0,0,0,0,35,161,162,182,181,0,11,11,11,11,35,162,163,183,182,0,12,12,12,12,35,95,115,581,569,0,14,14,14,14,35,164,165,185,184,0,11,11,11,11,35,168,167,614,615,0,13,13,13,13,35,166,167,187,186,0,11,11,11,11,35,167,168,188,187,0,11,11,11,11,35,275,255,678,692,0,10,10,10,10,35,169,170,190,189,0,11,11,11,11,35,113,114,579,580,0,7,7,7,7,35,171,172,192,191,0,12,12,12,12,35,172,173,193,192,0,11,11,11,11,35,148,168,615,601,0,14,14,14,14,35,174,175,195,194,0,11,11,11,11,35,273,274,691,690,0,7,7,7,7,35,176,177,197,196,0,12,12,12,12,35,177,178,198,197,0,11,11,11,11,35,382,381,525,526,2,0,0,0,0,35,19,39,439,438,2,3,3,3,3,35,181,182,202,201,0,11,11,11,11,35,182,183,203,202,0,12,12,12,12,35,183,184,204,203,0,11,11,11,11,35,328,308,708,719,0,10,10,10,10,35,185,186,206,205,0,12,12,12,12,35,186,187,207,206,0,11,11,11,11,35,114,94,570,579,0,10,10,10,10,35,188,189,209,208,0,11,11,11,11,35,167,147,600,614,0,10,10,10,10,35,190,191,211,210,0,12,12,12,12,35,273,272,689,690,0,13,13,13,13,35,192,193,213,212,0,11,11,11,11,35,193,194,214,213,0,12,12,12,12,35,165,166,613,612,0,7,7,7,7,35,195,196,216,215,0,12,12,12,12,35,196,197,217,216,0,12,12,12,12,35,197,198,218,217,0,11,11,11,11,35,118,98,450,454,2,2,2,2,2,35,1,2,404,402,2,1,1,1,1,35,201,202,222,221,0,12,12,12,12,35,202,203,223,222,0,12,12,12,12,35,253,273,690,676,0,14,14,14,14,35,204,205,225,224,0,12,12,12,12,35,112,111,577,578,0,13,13,13,13,35,206,207,227,226,0,12,12,12,12,35,207,208,228,227,0,12,12,12,12,35,92,112,578,568,0,14,14,14,14,35,209,210,230,229,0,12,12,12,12,35,165,164,610,612,0,13,13,13,13,35,211,212,232,231,0,12,12,12,12,35,212,213,233,232,0,11,11,11,11,35,272,252,675,689,0,10,10,10,10,35,214,215,235,234,0,11,11,11,11,35,145,165,612,598,0,14,14,14,14,35,216,217,237,236,0,12,12,12,12,35,217,218,238,237,0,11,11,11,11,35,18,19,438,436,2,1,1,1,1,35,381,380,524,525,2,0,0,0,0,35,221,222,242,241,0,18,18,18,18,35,222,223,243,242,0,18,18,18,18,35,223,224,244,243,0,18,18,18,18,35,271,270,687,688,0,13,13,13,13,35,225,226,246,245,0,18,18,18,18,35,226,227,247,246,0,18,18,18,18,35,56,57,548,549,0,7,7,7,7,35,228,229,249,248,0,18,18,18,18,35,111,91,567,577,0,10,10,10,10,35,230,231,251,250,0,18,18,18,18,35,163,164,610,611,0,7,7,7,7,35,232,233,253,252,0,17,17,17,17,35,233,234,254,253,0,18,18,18,18,35,251,271,688,674,0,14,14,14,14,35,235,236,256,255,0,18,18,18,18,35,236,237,257,256,0,18,18,18,18,35,237,238,258,257,0,17,17,17,17,35,38,37,435,437,2,0,0,0,0,35,380,360,504,524,2,2,2,2,2,35,241,242,262,261,0,11,11,11,11,35,242,243,263,262,0,11,11,11,11,35,324,323,716,718,0,13,13,13,13,35,244,245,265,264,0,11,11,11,11,35,245,246,266,265,0,11,11,11,11,35,164,144,597,610,0,10,10,10,10,35,247,248,268,267,0,11,11,11,11,35,304,324,718,704,0,14,14,14,14,35,249,250,270,269,0,11,11,11,11,35,215,216,651,650,0,7,7,7,7,35,251,252,272,271,0,11,11,11,11,35,270,250,673,687,0,10,10,10,10,35,253,254,274,273,0,11,11,11,11,35,254,255,275,274,0,19,19,19,19,35,322,323,716,717,0,7,7,7,7,35,256,257,277,276,0,11,11,11,11,35,257,258,278,277,0,19,19,19,19,35,0,1,402,401,2,1,1,1,1,35,17,18,436,434,2,1,1,1,1,35,261,262,282,281,0,15,15,15,15,35,262,263,283,282,0,15,15,15,15,35,263,264,284,283,0,15,15,15,15,35,264,265,285,284,0,15,15,15,15,35,269,268,685,686,0,13,13,13,13,35,266,267,287,286,0,15,15,15,15,35,267,268,288,287,0,15,15,15,15,35,268,269,289,288,0,15,15,15,15,35,269,270,290,289,0,15,15,15,15,35,270,271,291,290,0,15,15,15,15,35,271,272,292,291,0,15,15,15,15,35,272,273,293,292,0,16,16,16,16,35,323,303,705,716,0,10,10,10,10,35,274,275,295,294,0,16,16,16,16,35,275,276,296,295,0,15,15,15,15,35,276,277,297,296,0,15,15,15,15,35,277,278,298,297,0,16,16,16,16,35,281,301,493,489,2,3,3,3,3,35,20,0,401,400,2,2,2,2,2,35,281,282,302,301,0,9,9,9,9,35,282,283,303,302,0,9,9,9,9,35,283,284,304,303,0,9,9,9,9,35,215,214,648,650,0,13,13,13,13,35,285,286,306,305,0,9,9,9,9,35,286,287,307,306,0,9,9,9,9,35,249,269,686,672,0,14,14,14,14,35,288,289,309,308,0,9,9,9,9,35,289,290,310,309,0,9,9,9,9,35,290,291,311,310,0,9,9,9,9,35,108,107,575,576,0,13,13,13,13,35,292,293,313,312,0,20,20,20,20,35,293,294,314,313,0,9,9,9,9,35,195,215,650,636,0,14,14,14,14,35,295,296,316,315,0,9,9,9,9,35,296,297,317,316,0,9,9,9,9,35,297,298,318,317,0,20,20,20,20,35,37,36,433,435,2,0,0,0,0,35,300,280,488,492,2,2,2,2,2,35,301,302,322,321,0,15,15,15,15,35,302,303,323,322,0,15,15,15,15,35,88,108,576,563,0,14,14,14,14,35,304,305,325,324,0,15,15,15,15,35,305,306,326,325,0,15,15,15,15,35,306,307,327,326,0,15,15,15,15,35,307,308,328,327,0,15,15,15,15,35,213,214,648,649,0,7,7,7,7,35,309,310,330,329,0,15,15,15,15,35,268,248,671,685,0,10,10,10,10,35,311,312,332,331,0,15,15,15,15,35,312,313,333,332,0,16,16,16,16,35,313,314,334,333,0,15,15,15,15,35,314,315,335,334,0,16,16,16,16,35,214,194,635,648,0,10,10,10,10,35,316,317,337,336,0,15,15,15,15,35,317,318,338,337,0,16,16,16,16,35,359,379,523,503,2,3,3,3,3,35,201,221,477,473,2,3,3,3,3,35,321,322,342,341,0,6,6,6,6,35,267,266,682,684,0,13,13,13,13,35,323,324,344,343,0,6,6,6,6,35,324,325,345,344,0,6,6,6,6,35,325,326,346,345,0,8,8,8,8,35,326,327,347,346,0,6,6,6,6,35,327,328,348,347,0,6,6,6,6,35,328,329,349,348,0,6,6,6,6,35,107,87,564,575,0,10,10,10,10,35,330,331,351,350,0,8,8,8,8,35,331,332,352,351,0,8,8,8,8,35,332,333,353,352,0,9,9,9,9,35,333,334,354,353,0,8,8,8,8,35,334,335,355,354,0,9,9,9,9,35,335,336,356,355,0,8,8,8,8,35,247,267,684,669,0,14,14,14,14,35,337,338,358,357,0,9,9,9,9,35,377,378,522,521,2,1,1,1,1,35,220,200,472,476,2,2,2,2,2,35,341,342,362,361,0,16,16,16,16,35,342,343,363,362,0,21,21,21,21,35,343,344,364,363,0,16,16,16,16,35,344,345,365,364,0,16,16,16,16,35,345,346,366,365,0,21,21,21,21,35,346,347,367,366,0,16,16,16,16,35,347,348,368,367,0,16,16,16,16,35,348,349,369,368,0,16,16,16,16,35,349,350,370,369,0,16,16,16,16,35,350,351,371,370,0,21,21,21,21,35,351,352,372,371,0,21,21,21,21,35,352,353,373,372,0,22,22,22,22,35,353,354,374,373,0,21,21,21,21,35,354,355,375,374,0,22,22,22,22,35,355,356,376,375,0,21,21,21,21,35,356,357,377,376,0,21,21,21,21,35,357,358,378,377,0,22,22,22,22,35,16,17,434,432,2,1,1,1,1,35,279,299,491,487,2,3,3,3,3,35,378,358,502,522,2,2,2,2,2,35,121,141,461,457,2,3,3,3,3,35,36,35,431,433,2,0,0,0,0,35,376,377,521,520,2,1,1,1,1,35,140,120,456,460,2,2,2,2,2,35,199,219,475,471,2,3,3,3,3,35,298,278,486,490,2,2,2,2,2,35,41,61,445,441,2,3,3,3,3,35,15,16,432,430,2,1,1,1,1,35,375,376,520,519,2,1,1,1,1,35,60,40,440,444,2,2,2,2,2,35,119,139,459,455,2,3,3,3,3,35,218,198,470,474,2,2,2,2,2,35,35,34,429,431,2,0,0,0,0,35,374,375,519,518,2,1,1,1,1,35,39,59,443,439,2,3,3,3,3,35,138,118,454,458,2,2,2,2,2,35,14,15,430,428,2,1,1,1,1,35,401,402,403,400,2,23,23,23,23,35,402,404,405,403,2,23,23,23,23,35,404,406,407,405,2,24,24,24,24,35,406,408,409,407,2,23,23,23,23,35,408,410,411,409,2,23,23,23,23,35,410,412,413,411,2,24,24,24,24,35,412,414,415,413,2,23,23,23,23,35,414,416,417,415,2,23,23,23,23,35,416,418,419,417,2,23,23,23,23,35,418,420,421,419,2,23,23,23,23,35,420,422,423,421,2,24,24,24,24,35,422,424,425,423,2,24,24,24,24,35,424,426,427,425,2,23,23,23,23,35,426,428,429,427,2,24,24,24,24,35,428,430,431,429,2,23,23,23,23,35,430,432,433,431,2,24,24,24,24,35,432,434,435,433,2,24,24,24,24,35,434,436,437,435,2,23,23,23,23,35,436,438,439,437,2,24,24,24,24,35,400,403,441,440,2,25,25,25,25,35,437,439,443,442,2,26,26,26,26,35,440,441,445,444,2,24,24,24,24,35,442,443,447,446,2,24,24,24,24,35,444,445,449,448,2,23,23,23,23,35,446,447,451,450,2,24,24,24,24,35,448,449,453,452,2,25,25,25,25,35,450,451,455,454,2,26,26,26,26,35,452,453,457,456,2,24,24,24,24,35,454,455,459,458,2,24,24,24,24,35,456,457,461,460,2,23,23,23,23,35,458,459,463,462,2,24,24,24,24,35,460,461,465,464,2,25,25,25,25,35,462,463,467,466,2,26,26,26,26,35,464,465,469,468,2,23,23,23,23,35,466,467,471,470,2,24,24,24,24,35,468,469,473,472,2,23,23,23,23,35,470,471,475,474,2,24,24,24,24,35,472,473,477,476,2,27,27,27,27,35,474,475,479,478,2,27,27,27,27,35,476,477,481,480,2,27,27,27,27,35,478,479,483,482,2,27,27,27,27,35,480,481,485,484,2,23,23,23,23,35,482,483,487,486,2,23,23,23,23,35,484,485,489,488,2,27,27,27,27,35,486,487,491,490,2,27,27,27,27,35,488,489,493,492,2,23,23,23,23,35,490,491,495,494,2,23,23,23,23,35,492,493,497,496,2,27,27,27,27,35,494,495,499,498,2,27,27,27,27,35,496,497,501,500,2,27,27,27,27,35,498,499,503,502,2,27,27,27,27,35,500,501,505,504,2,23,23,23,23,35,502,503,523,522,2,23,23,23,23,35,504,505,525,524,2,27,27,27,27,35,505,506,526,525,2,27,27,27,27,35,506,507,527,526,2,27,27,27,27,35,507,508,528,527,2,27,27,27,27,35,508,509,529,528,2,27,27,27,27,35,509,510,530,529,2,27,27,27,27,35,510,511,531,530,2,27,27,27,27,35,511,512,532,531,2,27,27,27,27,35,512,513,533,532,2,27,27,27,27,35,513,514,534,533,2,27,27,27,27,35,514,515,535,534,2,27,27,27,27,35,515,516,536,535,2,27,27,27,27,35,516,517,537,536,2,28,28,28,28,35,517,518,538,537,2,27,27,27,27,35,518,519,539,538,2,28,28,28,28,35,519,520,540,539,2,27,27,27,27,35,520,521,541,540,2,27,27,27,27,35,521,522,542,541,2,28,28,28,28,35,522,523,543,542,2,27,27,27,27,35,178,158,462,466,2,2,2,2,2,35,79,99,451,447,2,3,3,3,3,35,6,7,414,412,2,1,1,1,1,35,389,388,532,533,2,0,0,0,0,35,362,363,507,506,2,1,1,1,1,35,258,238,478,482,2,2,2,2,2,35,159,179,467,463,2,3,3,3,3,35,100,80,448,452,2,2,2,2,2,35,27,26,413,415,2,0,0,0,0,35,390,389,533,534,2,0,0,0,0,35,363,364,508,507,2,1,1,1,1,35,81,101,453,449,2,3,3,3,3,35,7,8,416,414,2,1,1,1,1,35,338,318,494,498,2,2,2,2,2,35,239,259,483,479,2,3,3,3,3,35,180,160,464,468,2,2,2,2,2,35,391,390,534,535,2,0,0,0,0,35,161,181,469,465,2,3,3,3,3,35,364,365,509,508,2,1,1,1,1,35,28,27,415,417,2,0,0,0,0,35,319,339,499,495,2,3,3,3,3,35,260,240,480,484,2,2,2,2,2,35,8,9,418,416,2,1,1,1,1,35,392,391,535,536,2,0,0,0,0,35,241,261,485,481,2,3,3,3,3,35,365,366,510,509,2,1,1,1,1,35,340,320,496,500,2,2,2,2,2,35,29,28,417,419,2,0,0,0,0,35,321,341,501,497,2,3,3,3,3,35,393,392,536,537,2,0,0,0,0,35,366,367,511,510,2,1,1,1,1,35,9,10,420,418,2,1,1,1,1,35,78,58,442,446,2,2,2,2,2,35,394,393,537,538,2,0,0,0,0,35,367,368,512,511,2,1,1,1,1,35,30,29,419,421,2,0,0,0,0,35,10,11,422,420,2,1,1,1,1,35,158,138,458,462,2,2,2,2,2,35,59,79,447,443,2,3,3,3,3,35,395,394,538,539,2,0,0,0,0,35,368,369,513,512,2,1,1,1,1,35,238,218,474,478,2,2,2,2,2,35,31,30,421,423,2,0,0,0,0,35,139,159,463,459,2,3,3,3,3,35,80,60,444,448,2,2,2,2,2,35,396,395,539,540,2,0,0,0,0,35,369,370,514,513,2,1,1,1,1,35,11,12,424,422,2,1,1,1,1,35,61,81,449,445,2,3,3,3,3,35,318,298,490,494,2,2,2,2,2,35,219,239,479,475,2,3,3,3,3,35,160,140,460,464,2,2,2,2,2,35,397,396,540,541,2,0,0,0,0,35,370,371,515,514,2,1,1,1,1,35,32,31,423,425,2,0,0,0,0,35,141,161,465,461,2,3,3,3,3,35,299,319,495,491,2,3,3,3,3,35,240,220,476,480,2,2,2,2,2,35,12,13,426,424,2,1,1,1,1,35,398,397,541,542,2,0,0,0,0,35,371,372,516,515,2,1,1,1,1,35,221,241,481,477,2,3,3,3,3,35,379,399,543,523,2,3,3,3,3,35,320,300,492,496,2,2,2,2,2,35,33,32,425,427,2,0,0,0,0,35,399,398,542,543,2,0,0,0,0,35,301,321,497,493,2,3,3,3,3,35,372,373,517,516,2,1,1,1,1,35,13,14,428,426,2,1,1,1,1,35,58,38,437,442,2,2,2,2,2,35,373,374,518,517,2,1,1,1,1,35,34,33,427,429,2,0,0,0,0,35,545,544,551,550,1,29,29,29,29,35,547,546,555,553,1,29,29,29,29,35,549,548,559,557,1,29,29,29,29,35,551,552,561,560,1,30,30,30,30,35,554,553,565,563,1,30,30,30,30,35,555,556,567,566,1,31,31,31,31,35,558,557,571,569,1,31,31,31,31,35,561,562,573,572,1,32,32,32,32,35,564,563,576,575,1,32,32,32,32,35,567,568,578,577,1,33,33,33,33,35,570,569,581,579,1,32,32,32,32,35,573,574,585,584,1,34,34,34,34,35,580,579,593,591,1,34,34,34,34,35,583,582,597,596,1,32,32,32,32,35,585,586,600,599,1,32,32,32,32,35,588,587,602,601,1,32,32,32,32,35,590,589,604,603,1,33,33,33,33,35,592,591,606,605,1,32,32,32,32,35,595,594,609,607,1,33,33,33,33,35,597,598,612,610,1,30,30,30,30,35,600,601,615,614,1,30,30,30,30,35,602,603,617,616,1,30,30,30,30,35,604,605,619,618,1,31,31,31,31,35,608,607,622,620,1,30,30,30,30,35,611,610,625,624,1,32,32,32,32,35,612,613,627,626,1,33,33,33,33,35,615,616,630,628,1,32,32,32,32,35,617,618,632,631,1,33,33,33,33,35,621,620,635,634,1,33,33,33,33,35,622,623,637,636,1,33,33,33,33,35,625,626,640,638,1,32,32,32,32,35,629,628,643,642,1,32,32,32,32,35,630,631,645,644,1,32,32,32,32,35,632,633,647,646,1,33,33,33,33,35,635,636,650,648,1,32,32,32,32,35,639,638,653,652,1,34,34,34,34,35,640,641,655,654,1,34,34,34,34,35,643,644,658,656,1,34,34,34,34,35,645,646,660,659,1,34,34,34,34,35,649,648,663,662,1,34,34,34,34,35,650,651,665,664,1,34,34,34,34,35,653,654,668,666,1,34,34,34,34,35,657,656,671,669,1,34,34,34,34,35,658,659,673,672,1,34,34,34,34,35,660,661,675,674,1,34,34,34,34,35,663,664,678,677,1,35,35,35,35,35,667,666,681,680,1,36,36,36,36,35,670,669,684,682,1,36,36,36,36,35,671,672,686,685,1,36,36,36,36,35,673,674,688,687,1,36,36,36,36,35,675,676,690,689,1,37,37,37,37,35,678,679,693,692,1,36,36,36,36,35,683,682,696,694,1,27,27,27,27,35,690,691,702,701,1,27,27,27,27,35,695,694,706,704,1,36,36,36,36,35,698,697,708,707,1,36,36,36,36,35,700,699,712,710,1,36,36,36,36,35,702,703,714,713,1,37,37,37,37,35,705,704,718,716,1,34,34,34,34,35,708,709,720,719,1,34,34,34,34,35,711,710,722,721,1,34,34,34,34,35,714,715,724,723,1,34,34,34,34,35,717,716,727,726,1,34,34,34,34,35,720,721,729,728,1,34,34,34,34,35,724,725,731,730,1,34,34,34,34,35,152,172,619,605,0,14,14,14,14,35,206,226,655,641,0,14,14,14,14,35,172,171,618,619,0,13,13,13,13,35,226,225,654,655,0,13,13,13,13,35,174,154,608,620,0,10,10,10,10,35,228,208,643,656,0,10,10,10,10,35,173,174,620,621,0,7,7,7,7,35,335,315,714,723,0,10,10,10,10,35,227,228,656,657,0,7,7,7,7,35,155,175,622,607,0,14,14,14,14,35,209,229,658,644,0,14,14,14,14,35,175,174,620,622,0,13,13,13,13,35,316,336,724,715,0,14,14,14,14,35,69,49,547,553,0,10,10,10,10,35,229,228,656,658,0,13,13,13,13,35,336,335,723,724,0,13,13,13,13,35,68,69,553,554,0,7,7,7,7,35,230,210,645,659,0,10,10,10,10,35,175,176,623,622,0,7,7,7,7,35,50,70,555,546,0,14,14,14,14,35,229,230,659,658,0,7,7,7,7,35,336,337,725,724,0,7,7,7,7,35,70,69,553,555,0,13,13,13,13,35,211,231,660,646,0,14,14,14,14,35,123,124,582,583,0,7,7,7,7,35,285,265,683,694,0,10,10,10,10,35,231,230,659,660,0,13,13,13,13,35,125,105,573,584,0,10,10,10,10,35,70,71,556,555,0,7,7,7,7,35,284,285,694,695,0,7,7,7,7,35,266,286,696,682,0,14,14,14,14,35,231,232,661,660,0,7,7,7,7,35,106,126,585,574,0,14,14,14,14,35,286,285,694,696,0,13,13,13,13,35,233,213,649,662,0,10,10,10,10,35,126,125,584,585,0,13,13,13,13,35,214,234,663,648,0,14,14,14,14,35,126,127,586,585,0,7,7,7,7,35,234,233,662,663,0,13,13,13,13,35,342,322,717,726,0,10,10,10,10,35,287,288,697,698,0,7,7,7,7,35,235,215,650,664,0,10,10,10,10,35,234,235,664,663,0,7,7,7,7,35,323,343,727,716,0,14,14,14,14,35,216,236,665,651,0,14,14,14,14,35,183,163,611,624,0,10,10,10,10,35,128,129,587,588,0,7,7,7,7,35,343,342,726,727,0,13,13,13,13,35,76,56,549,557,0,10,10,10,10,35,236,235,664,665,0,13,13,13,13,35,75,76,557,558,0,7,7,7,7,35,164,184,625,610,0,14,14,14,14,35,57,77,559,548,0,14,14,14,14,35,184,183,624,625,0,13,13,13,13,35,77,76,557,559,0,13,13,13,13,35,185,165,612,626,0,10,10,10,10,35,130,131,589,590,0,7,7,7,7,35,184,185,626,625,0,7,7,7,7,35,291,292,699,700,0,7,7,7,7,35,166,186,627,613,0,14,14,14,14,35,293,273,690,701,0,10,10,10,10,35,186,185,626,627,0,13,13,13,13,35,133,113,580,591,0,10,10,10,10,35,132,133,591,592,0,7,7,7,7,35,274,294,702,691,0,14,14,14,14,35,114,134,593,579,0,14,14,14,14,35,294,293,701,702,0,13,13,13,13,35,188,168,615,628,0,10,10,10,10,35,134,133,591,593,0,13,13,13,13,35,187,188,628,629,0,7,7,7,7,35,349,329,720,728,0,10,10,10,10,35,294,295,703,702,0,7,7,7,7,35,169,189,630,616,0,14,14,14,14,35,189,188,628,630,0,13,13,13,13,35,330,350,729,721,0,14,14,14,14,35,83,63,551,560,0,10,10,10,10,35,190,170,617,631,0,10,10,10,10,35,135,136,594,595,0,7,7,7,7,35,350,349,728,729,0,13,13,13,13,35,244,224,653,666,0,10,10,10,10,35,189,190,631,630,0,7,7,7,7,35,64,84,561,552,0,14,14,14,14,35,243,244,666,667,0,7,7,7,7,35,171,191,632,618,0,14,14,14,14,35,84,83,560,561,0,13,13,13,13,35,225,245,668,654,0,14,14,14,14,35,191,190,631,632,0,13,13,13,13,35,245,244,666,668,0,13,13,13,13,35,84,85,562,561,0,7,7,7,7,35,191,192,633,632,0,7,7,7,7,35,193,173,621,634,0,10,10,10,10,35,247,227,657,669,0,10,10,10,10,35,246,247,669,670,0,7,7,7,7,35,174,194,635,620,0,14,14,14,14,35,228,248,671,656,0,14,14,14,14,35,194,193,634,635,0,13,13,13,13,35,88,68,554,563,0,10,10,10,10,35,248,247,669,671,0,13,13,13,13,35,195,175,622,636,0,10,10,10,10,35,87,88,563,564,0,7,7,7,7,35,249,229,658,672,0,10,10,10,10,35,194,195,636,635,0,7,7,7,7,35,356,336,724,730,0,10,10,10,10,35,69,89,565,553,0,14,14,14,14,35,248,249,672,671,0,7,7,7,7,35,176,196,637,623,0,14,14,14,14,35,143,123,583,596,0,10,10,10,10,35,89,88,563,565,0,13,13,13,13,35,230,250,673,659,0,14,14,14,14,35,196,195,636,637,0,13,13,13,13,35,337,357,731,725,0,14,14,14,14,35,90,70,555,566,0,10,10,10,10,35,304,284,695,704,0,10,10,10,10,35,250,249,672,673,0,13,13,13,13,35,124,144,597,582,0,14,14,14,14,35,357,356,730,731,0,13,13,13,13,35,303,304,704,705,0,7,7,7,7,35,251,231,660,674,0,10,10,10,10,35,144,143,596,597,0,13,13,13,13,35,71,91,567,556,0,14,14,14,14,35,285,305,706,694,0,14,14,14,14,35,250,251,674,673,0,7,7,7,7,35,91,90,566,567,0,13,13,13,13,35,305,304,704,706,0,13,13,13,13,35,232,252,675,661,0,14,14,14,14,35,144,145,598,597,0,7,7,7,7,35,252,251,674,675,0,13,13,13,13,35,146,126,585,599,0,10,10,10,10,35,91,92,568,567,0,7,7,7,7,35,307,287,698,707,0,10,10,10,10,35,252,253,676,675,0,7,7,7,7,35,127,147,600,586,0,14,14,14,14,35,254,234,663,677,0,10,10,10,10,35,147,146,599,600,0,13,13,13,13,35,288,308,708,697,0,14,14,14,14,35,148,128,588,601,0,10,10,10,10,35,308,307,707,708,0,13,13,13,13,35,235,255,678,664,0,14,14,14,14,35,147,148,601,600,0,7,7,7,7,35,95,75,558,569,0,10,10,10,10,35,255,254,677,678,0,13,13,13,13,35,129,149,602,587,0,14,14,14,14,35,94,95,569,570,0,7,7,7,7,35,308,309,709,708,0,7,7,7,7,35,149,148,601,602,0,13,13,13,13,35,76,96,571,557,0,14,14,14,14,35,255,256,679,678,0,7,7,7,7,35,150,130,590,603,0,10,10,10,10,35,96,95,569,571,0,13,13,13,13,35,42,43,544,545,0,7,7,7,7,35,204,184,625,638,0,10,10,10,10,35,149,150,603,602,0,7,7,7,7,35,311,291,700,710,0,10,10,10,10,35,203,204,638,639,0,7,7,7,7,35,131,151,604,589,0,14,14,14,14,35,310,311,710,711,0,7,7,7,7,35,185,205,640,626,0,14,14,14,14,35,151,150,603,604,0,13,13,13,13,35,292,312,712,699,0,14,14,14,14,35,205,204,638,640,0,13,13,13,13,35,152,132,592,605,0,10,10,10,10,35,312,311,710,712,0,13,13,13,13,35,151,152,605,604,0,7,7,7,7,35,205,206,641,640,0,7,7,7,7,35,133,153,606,591,0,14,14,14,14,35,207,187,629,642,0,10,10,10,10,35,153,152,605,606,0,13,13,13,13,35,314,294,702,713,0,10,10,10,10,35,188,208,643,628,0,14,14,14,14,35,295,315,714,703,0,14,14,14,14,35,208,207,642,643,0,13,13,13,13,35,155,135,595,607,0,10,10,10,10,35,315,314,713,714,0,13,13,13,13,35,209,189,630,644,0,10,10,10,10,35,154,155,607,608,0,7,7,7,7,35,263,243,667,680,0,10,10,10,10,35,208,209,644,643,0,7,7,7,7,35,136,156,609,594,0,14,14,14,14,35,315,316,715,714,0,7,7,7,7,35,190,210,645,631,0,14,14,14,14,35,156,155,607,609,0,13,13,13,13,35,244,264,681,666,0,14,14,14,14,35,210,209,644,645,0,13,13,13,13,35,104,84,561,572,0,10,10,10,10,35,49,50,546,547,0,7,7,7,7,35,264,263,680,681,0,13,13,13,13,35,211,191,632,646,0,10,10,10,10,35,210,211,646,645,0,7,7,7,7,35,85,105,573,562,0,14,14,14,14,35,192,212,647,633,0,14,14,14,14,35,105,104,572,573,0,13,13,13,13,35,266,246,670,682,0,10,10,10,10,35,212,211,646,647,0,13,13,13,13,35,265,266,682,683,0,7,7,7,7,35,105,106,574,573,0,7,7,7,7],\n    "uvs":[],\n    "normals":[0,-0,-1,0,0,1,-1,-0,0,1,0,0,0,1,-4.37114e-08,0,1,-4.37114e-08,0,1,-4.37114e-08,0,0,-1,0,1,-4.37114e-08,0,1,-4.37114e-08,1,-0,0,0,1,-4.37114e-08,0,1,-4.37114e-08,0,-0,1,-1,0,0,0,1,-4.37114e-08,0,1,-4.37114e-08,0,1,-4.37114e-08,0,1,-4.37114e-08,0,1,-4.37114e-08,0,1,-4.37114e-08,0,1,-4.37114e-08,0,1,-4.37114e-08,0,1,-0,0,1,-0,0,1,-1.41561e-07,0,1,-1.41561e-07,0,1,-7.07805e-08,0,1,-7.07805e-08,0,1,-5.30854e-08,0,1,-3.53903e-08,0,1,-3.53903e-08,0,1,-5.30854e-08,0,1,-5.30854e-08,0,1,-3.53903e-08,0,1,-3.53903e-08,0,1,-3.53902e-08,0,1,-3.53902e-08],\n    "materials":[{\n        "colorEmissive":[0,0,0],\n        "shading":"phong",\n        "opacity":1,\n        "transparent":false,\n        "visible":true,\n        "wireframe":false,\n        "blending":1,\n        "depthTest":true,\n        "depthWrite":true,\n        "doubleSided":false,\n        "DbgName":"Material.001",\n        "DbgColor":15658734,\n        "DbgIndex":0,\n        "colorDiffuse":[0.64,0.64,0.64],\n        "specularCoef":50,\n        "colorSpecular":[0.5,0.5,0.5]\n    },{\n        "colorEmissive":[0,0,0],\n        "shading":"phong",\n        "opacity":1,\n        "transparent":false,\n        "visible":true,\n        "wireframe":false,\n        "blending":1,\n        "depthTest":true,\n        "depthWrite":true,\n        "doubleSided":false,\n        "DbgName":"Material.002",\n        "DbgColor":15597568,\n        "DbgIndex":1,\n        "colorDiffuse":[0.00403017,0.327606,0.640002],\n        "specularCoef":50,\n        "colorSpecular":[0.5,0.5,0.5]\n    },{\n        "colorEmissive":[0,0,0],\n        "shading":"phong",\n        "opacity":1,\n        "transparent":false,\n        "visible":true,\n        "wireframe":false,\n        "blending":1,\n        "depthTest":true,\n        "depthWrite":true,\n        "doubleSided":false,\n        "DbgName":"Material.003",\n        "DbgColor":60928,\n        "DbgIndex":2,\n        "colorDiffuse":[0.0248506,0.0248506,0.0248506],\n        "specularCoef":50,\n        "colorSpecular":[0.5,0.5,0.5]\n    }]\n}')),e.playerMesh=n.parse(JSON.parse('{\n    "metadata":{\n        "type":"Geometry",\n        "generator":"io_three",\n        "version":3,\n        "vertices":2084,\n        "normals":219,\n        "materials":1,\n        "uvs":0,\n        "faces":2082\n    },\n    "vertices":[1.98007,-0.503472,-0.260417,1.98007,-0.503472,-0.0868058,1.80645,-0.503472,-0.260417,1.80645,-0.503472,-0.0868057,1.98007,-0.46875,-0.260417,1.98007,-0.434028,-0.260417,1.98007,-0.46875,-0.0868058,1.98007,-0.434028,-0.0868058,1.80645,-0.46875,-0.260417,1.80645,-0.434028,-0.260417,1.98007,-0.364583,-0.434028,1.80645,-0.364583,-0.434028,1.98007,-0.329861,-0.434028,1.98007,-0.295139,-0.434028,1.80645,-0.329861,-0.434028,1.80645,-0.295139,-0.434028,1.98007,-0.399306,-0.260417,1.98007,-0.364583,-0.260417,1.98007,-0.399306,-0.0868058,1.98007,-0.364583,-0.0868058,1.80645,-0.399306,-0.260417,1.80645,-0.364583,-0.260417,1.98007,-0.329861,-0.260417,1.98007,-0.295139,-0.260417,1.98007,-0.329861,-0.0868058,1.98007,-0.295139,-0.0868058,1.98007,-0.260417,-0.434028,1.98007,-0.225694,-0.434028,1.80645,-0.260417,-0.434028,1.80645,-0.225694,-0.434028,1.98007,-0.190972,-0.434028,1.98007,-0.15625,-0.434028,1.80645,-0.190972,-0.434028,1.80645,-0.15625,-0.434028,1.98007,-0.260417,-0.260417,1.98007,-0.225694,-0.260417,1.98007,-0.260417,-0.0868058,1.98007,-0.225694,-0.0868058,1.80645,-0.260417,-0.0868057,1.80645,-0.225694,-0.0868058,1.98007,-0.190972,-0.260417,1.98007,-0.15625,-0.260417,1.98007,-0.190972,-0.0868058,1.80645,-0.190972,-0.260417,1.80645,-0.15625,-0.260417,1.80645,-0.190972,-0.0868058,1.98007,-0.121528,-0.434028,1.98007,-0.0868056,-0.434028,1.80645,-0.121528,-0.434028,1.80645,-0.0868056,-0.434028,1.98007,-0.0520834,-0.434028,1.98007,-0.0173611,-0.434028,1.80645,-0.0520834,-0.434028,1.80645,-0.0173611,-0.434028,1.98007,-0.121528,-0.260417,1.98007,-0.0868056,-0.260417,1.80645,-0.121528,-0.260417,1.80645,-0.0868056,-0.260417,1.98007,-0.0520834,-0.260417,1.98007,-0.0173611,-0.260417,1.80645,-0.0520834,-0.260417,1.80645,-0.0173611,-0.260417,1.63284,-0.503472,-0.260417,1.63284,-0.503472,-0.0868057,1.45923,-0.503472,-0.260417,1.45923,-0.503472,-0.0868057,1.63284,-0.46875,-0.260417,1.63284,-0.434028,-0.260417,1.45923,-0.46875,-0.260417,1.45923,-0.434028,-0.260417,1.28562,-0.503472,-0.260417,1.28562,-0.503472,-0.0868057,1.11201,-0.503472,-0.260417,1.11201,-0.503472,-0.0868056,1.28562,-0.46875,-0.260417,1.28562,-0.434028,-0.260417,1.11201,-0.46875,-0.260417,1.11201,-0.434028,-0.260417,1.63284,-0.364583,-0.434028,1.45923,-0.364583,-0.434028,1.63284,-0.329861,-0.434028,1.63284,-0.295139,-0.434028,1.45923,-0.329861,-0.434028,1.45923,-0.295139,-0.434028,1.63284,-0.399306,-0.260417,1.63284,-0.364583,-0.260417,1.45923,-0.399306,-0.260417,1.45923,-0.364583,-0.260417,1.28562,-0.364583,-0.434028,1.11201,-0.364583,-0.434028,1.28562,-0.329861,-0.434028,1.28562,-0.295139,-0.434028,1.11201,-0.329861,-0.434028,1.11201,-0.295139,-0.434028,1.28562,-0.399306,-0.260417,1.28562,-0.364583,-0.260417,1.11201,-0.399306,-0.260417,1.11201,-0.364583,-0.260417,0.938399,-0.503472,-0.260417,0.938399,-0.503472,-0.0868056,0.764788,-0.503472,-0.260417,0.764788,-0.503472,-0.0868056,0.938399,-0.46875,-0.260417,0.938399,-0.434028,-0.260417,0.764788,-0.46875,-0.260417,0.764788,-0.434028,-0.260417,0.591176,-0.503472,-0.260417,0.591176,-0.503472,-0.0868056,0.417565,-0.503472,-0.260417,0.417565,-0.503472,-0.0868055,0.591176,-0.46875,-0.260417,0.591176,-0.434028,-0.260417,0.417565,-0.46875,-0.260417,0.417565,-0.434028,-0.260417,0.938399,-0.364583,-0.434028,0.764787,-0.364583,-0.434028,0.938399,-0.329861,-0.434028,0.938399,-0.295139,-0.434028,0.764787,-0.329861,-0.434028,0.764787,-0.295139,-0.434028,0.938399,-0.399306,-0.260417,0.938399,-0.364583,-0.260417,0.764788,-0.399306,-0.260417,0.764788,-0.364583,-0.260417,0.591176,-0.364583,-0.434028,0.417565,-0.364583,-0.434028,0.591176,-0.329861,-0.434028,0.591176,-0.295139,-0.434028,0.417565,-0.329861,-0.434028,0.417565,-0.295139,-0.434028,0.591176,-0.399306,-0.260417,0.591176,-0.364583,-0.260417,0.417565,-0.399306,-0.260417,0.417565,-0.364583,-0.260417,1.63284,-0.260417,-0.434028,1.63284,-0.225694,-0.434028,1.45923,-0.260417,-0.434028,1.45923,-0.225694,-0.434028,1.63284,-0.190972,-0.434028,1.63284,-0.15625,-0.434028,1.45923,-0.190972,-0.434028,1.45923,-0.15625,-0.434028,1.63284,-0.260417,-0.0868057,1.63284,-0.225694,-0.0868057,1.45923,-0.260417,-0.0868057,1.45923,-0.225694,-0.0868057,1.63284,-0.190972,-0.260417,1.63284,-0.15625,-0.260417,1.63284,-0.190972,-0.0868057,1.45923,-0.190972,-0.260417,1.45923,-0.15625,-0.260417,1.45923,-0.190972,-0.0868057,1.28562,-0.260417,-0.434028,1.28562,-0.225694,-0.434028,1.11201,-0.260417,-0.434028,1.11201,-0.225694,-0.434028,1.28562,-0.190972,-0.434028,1.28562,-0.15625,-0.434028,1.11201,-0.15625,-0.607639,1.11201,-0.190972,-0.434028,1.11201,-0.15625,-0.434028,1.28562,-0.260417,-0.0868057,1.28562,-0.225694,-0.0868057,1.11201,-0.260417,-0.0868057,1.11201,-0.225694,-0.0868057,1.28562,-0.190972,-0.260417,1.28562,-0.15625,-0.260417,1.28562,-0.190972,-0.0868057,1.11201,-0.190972,-0.260417,1.11201,-0.15625,-0.260417,1.11201,-0.190972,-0.0868057,1.63284,-0.121528,-0.434028,1.63284,-0.0868056,-0.434028,1.45923,-0.121528,-0.434028,1.45923,-0.0868056,-0.434028,1.63284,-0.0520834,-0.434028,1.63284,-0.0173611,-0.434028,1.45923,-0.0520834,-0.434028,1.45923,-0.0173611,-0.434028,1.63284,-0.121528,-0.260417,1.63284,-0.0868056,-0.260417,1.45923,-0.121528,-0.260417,1.45923,-0.0868056,-0.260417,1.63284,-0.0520834,-0.260417,1.63284,-0.0173611,-0.260417,1.45923,-0.0520834,-0.260417,1.45923,-0.0173611,-0.260417,1.28562,-0.121528,-0.434028,1.28562,-0.0868056,-0.434028,1.11201,-0.121528,-0.607639,1.11201,-0.0868056,-0.607639,1.11201,-0.121528,-0.434028,1.11201,-0.0868056,-0.434028,1.28562,-0.0520834,-0.434028,1.28562,-0.0173611,-0.434028,1.11201,-0.0520834,-0.607639,1.11201,-0.0173611,-0.607639,1.11201,-0.0520834,-0.434028,1.11201,-0.0173611,-0.434028,1.28562,-0.121528,-0.260417,1.28562,-0.0868056,-0.260417,1.11201,-0.121528,-0.260417,1.11201,-0.0868056,-0.260417,1.28562,-0.0520834,-0.260417,1.28562,-0.0173611,-0.260417,1.11201,-0.0520834,-0.260417,1.11201,-0.0173611,-0.260417,0.764787,-0.225694,-0.954861,0.764787,-0.260417,-0.78125,0.764787,-0.225694,-0.78125,0.938399,-0.190972,-0.78125,0.938399,-0.15625,-0.78125,0.764787,-0.190972,-0.954861,0.764787,-0.15625,-0.954861,0.764787,-0.190972,-0.78125,0.764787,-0.15625,-0.78125,0.417565,-0.225694,-1.12847,0.591176,-0.15625,-1.12847,0.417565,-0.190972,-1.12847,0.417565,-0.15625,-1.12847,0.591176,-0.225694,-0.954861,0.591176,-0.260417,-0.78125,0.591176,-0.225694,-0.78125,0.417565,-0.225694,-0.954861,0.417565,-0.225694,-0.78125,0.591176,-0.190972,-0.954861,0.591176,-0.15625,-0.954861,0.417565,-0.190972,-0.954861,0.417565,-0.15625,-0.954861,0.417565,-0.190972,-0.78125,0.938399,-0.121528,-0.78125,0.938399,-0.0868056,-0.78125,0.764787,-0.121528,-0.954861,0.764787,-0.0868056,-0.954861,0.764787,-0.121528,-0.78125,0.764787,-0.0868056,-0.78125,0.938399,-0.0173612,-0.954861,0.938399,-0.0520834,-0.78125,0.938399,-0.0173611,-0.78125,0.764787,-0.0520834,-0.954861,0.764787,-0.0173612,-0.954861,0.764787,-0.0520834,-0.78125,0.764787,-0.0173611,-0.78125,0.591176,-0.121528,-1.12847,0.591176,-0.0868056,-1.12847,0.417565,-0.121528,-1.12847,0.417565,-0.0868056,-1.12847,0.591176,-0.0520834,-1.12847,0.591176,-0.0173612,-1.12847,0.417565,-0.0520834,-1.12847,0.417565,-0.0173612,-1.12847,0.591176,-0.121528,-0.954861,0.591176,-0.0868056,-0.954861,0.591176,-0.0520834,-0.954861,0.591176,-0.0173612,-0.954861,0.938399,-0.225694,-0.607639,0.938399,-0.260417,-0.434028,0.938399,-0.225694,-0.434028,0.764787,-0.260417,-0.607639,0.764787,-0.225694,-0.607639,0.764787,-0.260417,-0.434028,0.764787,-0.225694,-0.434028,0.938399,-0.190972,-0.607639,0.938399,-0.15625,-0.607639,0.938399,-0.190972,-0.434028,0.938399,-0.15625,-0.434028,0.764787,-0.190972,-0.607639,0.938399,-0.260417,-0.0868056,0.938399,-0.225694,-0.0868056,0.938399,-0.190972,-0.260417,0.938399,-0.15625,-0.260417,0.938399,-0.190972,-0.0868056,0.938399,-0.15625,-0.0868056,0.591176,-0.260417,-0.607639,0.591176,-0.225694,-0.607639,0.591176,-0.260417,-0.434028,0.591176,-0.225694,-0.434028,0.417565,-0.225694,-0.607639,0.417565,-0.260417,-0.434028,0.417565,-0.225694,-0.434028,0.591176,-0.190972,-0.607639,0.591176,-0.190972,-0.434028,0.417565,-0.190972,-0.607639,0.417565,-0.190972,-0.434028,0.938399,-0.121528,-0.607639,0.938399,-0.0868056,-0.607639,0.938399,-0.0520834,-0.607639,0.938399,-0.0173611,-0.607639,0.938399,-0.121528,-0.260417,0.938399,-0.0868056,-0.260417,0.938399,-0.121528,-0.0868056,0.938399,-0.0868056,-0.0868056,0.938399,-0.0520834,-0.260417,0.938399,-0.0173611,-0.260417,0.938399,-0.0520834,-0.0868056,0.938399,-0.0173611,-0.0868056,1.98007,0.0173611,-0.434028,1.98007,0.0520833,-0.434028,1.80645,0.0173611,-0.434028,1.80645,0.0520833,-0.434028,1.98007,0.0868056,-0.434028,1.98007,0.121528,-0.434028,1.80645,0.0868056,-0.434028,1.80645,0.121528,-0.434028,1.98007,0.0173611,-0.260417,1.98007,0.0520833,-0.260417,1.80645,0.0173611,-0.260417,1.80645,0.0520833,-0.260417,1.98007,0.0868056,-0.260417,1.98007,0.121528,-0.260417,1.80645,0.0868056,-0.260417,1.80645,0.121528,-0.260417,1.98007,0.15625,-0.434028,1.98007,0.190972,-0.434028,1.80645,0.15625,-0.434028,1.80645,0.190972,-0.434028,1.98007,0.225694,-0.434028,1.98007,0.260417,-0.434028,1.80645,0.225694,-0.434028,1.80645,0.260417,-0.434028,1.98007,0.15625,-0.260417,1.98007,0.190972,-0.260417,1.98007,0.190972,-0.0868058,1.80645,0.15625,-0.260417,1.80645,0.190972,-0.260417,1.80645,0.190972,-0.0868058,1.98007,0.225694,-0.260417,1.98007,0.260417,-0.260417,1.98007,0.225694,-0.0868058,1.98007,0.260417,-0.0868058,1.80645,0.225694,-0.0868058,1.80645,0.260417,-0.0868058,1.98007,0.295139,-0.434028,1.98007,0.329861,-0.434028,1.80645,0.295139,-0.434028,1.80645,0.329861,-0.434028,1.98007,0.364583,-0.434028,1.80645,0.364583,-0.434028,1.98007,0.295139,-0.260417,1.98007,0.329861,-0.260417,1.98007,0.295139,-0.0868058,1.98007,0.329861,-0.0868058,1.98007,0.364583,-0.260417,1.98007,0.399306,-0.260417,1.98007,0.364583,-0.0868058,1.98007,0.399306,-0.0868058,1.80645,0.364583,-0.260417,1.80645,0.399306,-0.260417,1.98007,0.434028,-0.260417,1.98007,0.46875,-0.260417,1.98007,0.434028,-0.0868058,1.98007,0.46875,-0.0868058,1.80645,0.434028,-0.260417,1.80645,0.46875,-0.260417,1.98007,0.503472,-0.260417,1.98007,0.503472,-0.0868058,1.80645,0.503472,-0.260417,1.80645,0.503472,-0.0868058,1.63284,0.0173611,-0.434028,1.63284,0.0520833,-0.434028,1.45923,0.0173611,-0.434028,1.45923,0.0520833,-0.434028,1.63284,0.0868056,-0.434028,1.63284,0.121528,-0.434028,1.45923,0.0868056,-0.434028,1.45923,0.121528,-0.434028,1.63284,0.0173611,-0.260417,1.63284,0.0520833,-0.260417,1.45923,0.0173611,-0.260417,1.45923,0.0520833,-0.260417,1.63284,0.0868056,-0.260417,1.63284,0.121528,-0.260417,1.45923,0.0868056,-0.260417,1.45923,0.121528,-0.260417,1.28562,0.0173611,-0.434028,1.28562,0.0520833,-0.434028,1.11201,0.0173611,-0.607639,1.11201,0.0520833,-0.607639,1.11201,0.0173611,-0.434028,1.11201,0.0520833,-0.434028,1.28562,0.0868056,-0.434028,1.28562,0.121528,-0.434028,1.11201,0.0868055,-0.607639,1.11201,0.121528,-0.607639,1.11201,0.0868056,-0.434028,1.11201,0.121528,-0.434028,1.28562,0.0173611,-0.260417,1.28562,0.0520833,-0.260417,1.11201,0.0173611,-0.260417,1.11201,0.0520833,-0.260417,1.28562,0.0868056,-0.260417,1.28562,0.121528,-0.260417,1.11201,0.0868056,-0.260417,1.11201,0.121528,-0.260417,1.63284,0.15625,-0.434028,1.63284,0.190972,-0.434028,1.45923,0.15625,-0.434028,1.45923,0.190972,-0.434028,1.63284,0.225694,-0.434028,1.63284,0.260417,-0.434028,1.45923,0.225694,-0.434028,1.45923,0.260417,-0.434028,1.63284,0.15625,-0.260417,1.63284,0.190972,-0.260417,1.63284,0.190972,-0.0868057,1.45923,0.15625,-0.260417,1.45923,0.190972,-0.260417,1.45923,0.190972,-0.0868057,1.63284,0.225694,-0.0868057,1.63284,0.260417,-0.0868057,1.45923,0.225694,-0.0868057,1.45923,0.260417,-0.0868057,1.28562,0.15625,-0.434028,1.28562,0.190972,-0.434028,1.11201,0.15625,-0.607639,1.11201,0.15625,-0.434028,1.11201,0.190972,-0.434028,1.28562,0.225694,-0.434028,1.28562,0.260417,-0.434028,1.11201,0.225694,-0.434028,1.11201,0.260417,-0.434028,1.28562,0.15625,-0.260417,1.28562,0.190972,-0.260417,1.28562,0.190972,-0.0868057,1.11201,0.15625,-0.260417,1.11201,0.190972,-0.260417,1.11201,0.190972,-0.0868057,1.28562,0.225694,-0.0868057,1.28562,0.260417,-0.0868057,1.11201,0.225694,-0.0868057,1.11201,0.260417,-0.0868057,0.938399,0.0173611,-0.954861,0.938399,0.0173611,-0.78125,0.938399,0.0520833,-0.78125,0.764787,0.0173611,-0.954861,0.764787,0.0520833,-0.954861,0.764787,0.0173611,-0.78125,0.764787,0.0520833,-0.78125,0.938399,0.0868055,-0.78125,0.938399,0.121528,-0.78125,0.764787,0.0868055,-0.954861,0.764787,0.121528,-0.954861,0.764787,0.0868055,-0.78125,0.764787,0.121528,-0.78125,0.591176,0.0173611,-1.12847,0.591176,0.0520833,-1.12847,0.417565,0.0173611,-1.12847,0.417565,0.0520833,-1.12847,0.591176,0.0868055,-1.12847,0.591176,0.121528,-1.12847,0.417565,0.0868055,-1.12847,0.417565,0.121528,-1.12847,0.591176,0.0173611,-0.954861,0.591176,0.0520833,-0.954861,0.591176,0.0868055,-0.954861,0.591176,0.121528,-0.954861,0.938399,0.15625,-0.78125,0.938399,0.190972,-0.78125,0.764787,0.15625,-0.954861,0.764787,0.190972,-0.954861,0.764787,0.15625,-0.78125,0.764787,0.190972,-0.78125,0.764787,0.225694,-0.954861,0.764787,0.225694,-0.78125,0.764787,0.260417,-0.78125,0.591176,0.15625,-1.12847,0.417565,0.15625,-1.12847,0.417565,0.190972,-1.12847,0.417565,0.225694,-1.12847,0.591176,0.15625,-0.954861,0.591176,0.190972,-0.954861,0.417565,0.15625,-0.954861,0.417565,0.190972,-0.954861,0.417565,0.190972,-0.78125,0.591176,0.225694,-0.954861,0.591176,0.225694,-0.78125,0.591176,0.260417,-0.78125,0.417565,0.225694,-0.954861,0.417565,0.225694,-0.78125,0.938399,0.0173611,-0.607639,0.938399,0.0520833,-0.607639,0.938399,0.0868055,-0.607639,0.938399,0.121528,-0.607639,0.938399,0.0173611,-0.260417,0.938399,0.0520833,-0.260417,0.938399,0.0173611,-0.0868056,0.938399,0.0520833,-0.0868056,0.938399,0.0868056,-0.260417,0.938399,0.121528,-0.260417,0.938399,0.0868056,-0.0868056,0.938399,0.121528,-0.0868056,0.938399,0.15625,-0.607639,0.938399,0.190972,-0.607639,0.938399,0.15625,-0.434028,0.938399,0.190972,-0.434028,0.764787,0.190972,-0.607639,0.938399,0.225694,-0.607639,0.938399,0.225694,-0.434028,0.938399,0.260417,-0.434028,0.764787,0.225694,-0.607639,0.764787,0.260417,-0.607639,0.764787,0.225694,-0.434028,0.764787,0.260417,-0.434028,0.938399,0.15625,-0.260417,0.938399,0.190972,-0.260417,0.938399,0.15625,-0.0868056,0.938399,0.190972,-0.0868056,0.938399,0.225694,-0.0868056,0.938399,0.260417,-0.0868057,0.591176,0.190972,-0.607639,0.591176,0.190972,-0.434028,0.417565,0.190972,-0.607639,0.417565,0.190972,-0.434028,0.591176,0.225694,-0.607639,0.591176,0.260417,-0.607639,0.591176,0.225694,-0.434028,0.591176,0.260417,-0.434028,0.417565,0.225694,-0.607639,0.417565,0.225694,-0.434028,0.417565,0.260417,-0.434028,1.63284,0.295139,-0.434028,1.63284,0.329861,-0.434028,1.45923,0.295139,-0.434028,1.45923,0.329861,-0.434028,1.63284,0.364583,-0.434028,1.45923,0.364583,-0.434028,1.63284,0.364583,-0.260417,1.63284,0.399306,-0.260417,1.45923,0.364583,-0.260417,1.45923,0.399306,-0.260417,1.28562,0.295139,-0.434028,1.28562,0.329861,-0.434028,1.11201,0.295139,-0.434028,1.11201,0.329861,-0.434028,1.28562,0.364583,-0.434028,1.11201,0.364583,-0.434028,1.28562,0.364583,-0.260417,1.28562,0.399306,-0.260417,1.11201,0.364583,-0.260417,1.11201,0.399306,-0.260417,1.63284,0.434028,-0.260417,1.63284,0.46875,-0.260417,1.45923,0.434028,-0.260417,1.45923,0.46875,-0.260417,1.63284,0.503472,-0.260417,1.63284,0.503472,-0.0868058,1.45923,0.503472,-0.260417,1.45923,0.503472,-0.0868057,1.28562,0.434028,-0.260417,1.28562,0.46875,-0.260417,1.11201,0.434028,-0.260417,1.11201,0.46875,-0.260417,1.28562,0.503472,-0.260417,1.28562,0.503472,-0.0868057,1.11201,0.503472,-0.260417,1.11201,0.503472,-0.0868057,0.938399,0.295139,-0.434028,0.938399,0.329861,-0.434028,0.764787,0.295139,-0.434028,0.764787,0.329861,-0.434028,0.938399,0.364583,-0.434028,0.764787,0.364583,-0.434028,0.938399,0.364583,-0.260417,0.938399,0.399306,-0.260417,0.764788,0.364583,-0.260417,0.764788,0.399306,-0.260417,0.591176,0.295139,-0.434028,0.591176,0.329861,-0.434028,0.417565,0.295139,-0.434028,0.417565,0.329861,-0.434028,0.591176,0.364583,-0.434028,0.417565,0.364583,-0.434028,0.591176,0.364583,-0.260417,0.591176,0.399306,-0.260417,0.417565,0.364583,-0.260417,0.417565,0.399306,-0.260417,0.938399,0.434028,-0.260417,0.938399,0.46875,-0.260417,0.764788,0.434028,-0.260417,0.764788,0.46875,-0.260417,0.938399,0.503472,-0.260417,0.938399,0.503472,-0.0868057,0.764788,0.503472,-0.260417,0.764788,0.503472,-0.0868056,0.591176,0.434028,-0.260417,0.591176,0.46875,-0.260417,0.417565,0.434028,-0.260417,0.417565,0.46875,-0.260417,0.591176,0.503472,-0.260417,0.591176,0.503472,-0.0868056,0.417565,0.503472,-0.260417,0.417565,0.503472,-0.0868056,1.98007,-0.503472,0.0868054,1.98007,-0.503472,0.260417,1.80645,-0.503472,0.0868054,1.80645,-0.503472,0.260417,1.98007,-0.46875,0.0868054,1.98007,-0.434028,0.0868054,1.98007,-0.46875,0.260417,1.98007,-0.434028,0.260417,1.80645,-0.46875,0.260417,1.80645,-0.434028,0.260417,1.98007,-0.399306,0.0868054,1.98007,-0.364583,0.0868054,1.98007,-0.399306,0.260417,1.98007,-0.364583,0.260417,1.80645,-0.399306,0.260417,1.80645,-0.364583,0.260417,1.98007,-0.329861,0.0868054,1.98007,-0.295139,0.0868054,1.98007,-0.329861,0.260417,1.98007,-0.295139,0.260417,1.98007,-0.364583,0.434028,1.80645,-0.364583,0.434028,1.98007,-0.329861,0.434028,1.98007,-0.295139,0.434028,1.80645,-0.329861,0.434028,1.80645,-0.295139,0.434028,1.98007,-0.260417,0.0868054,1.98007,-0.225694,0.0868054,1.98007,-0.260417,0.260417,1.98007,-0.225694,0.260417,1.80645,-0.260417,0.0868054,1.80645,-0.225694,0.0868054,1.98007,-0.190972,0.0868054,1.98007,-0.190972,0.260417,1.98007,-0.15625,0.260417,1.80645,-0.190972,0.0868054,1.80645,-0.190972,0.260417,1.80645,-0.15625,0.260417,1.98007,-0.260417,0.434028,1.98007,-0.225694,0.434028,1.80645,-0.260417,0.434028,1.80645,-0.225694,0.434028,1.98007,-0.190972,0.434028,1.98007,-0.15625,0.434028,1.80645,-0.190972,0.434028,1.80645,-0.15625,0.434028,1.98007,-0.121528,0.260417,1.98007,-0.0868056,0.260417,1.80645,-0.121528,0.260417,1.80645,-0.0868056,0.260417,1.98007,-0.0520833,0.260417,1.98007,-0.0173611,0.260417,1.80645,-0.0520833,0.260417,1.80645,-0.0173611,0.260417,1.98007,-0.121528,0.434028,1.98007,-0.0868056,0.434028,1.80645,-0.121528,0.434028,1.80645,-0.0868056,0.434028,1.98007,-0.0520833,0.434028,1.98007,-0.0173611,0.434028,1.80645,-0.0520833,0.434028,1.80645,-0.0173611,0.434028,1.63284,-0.503472,0.0868055,1.63284,-0.503472,0.260417,1.45923,-0.503472,0.0868055,1.45923,-0.503472,0.260417,1.63284,-0.46875,0.260417,1.63284,-0.434028,0.260417,1.45923,-0.46875,0.260417,1.45923,-0.434028,0.260417,1.28562,-0.503472,0.0868055,1.28562,-0.503472,0.260417,1.11201,-0.503472,0.0868055,1.11201,-0.503472,0.260417,1.28562,-0.46875,0.260417,1.28562,-0.434028,0.260417,1.11201,-0.46875,0.260417,1.11201,-0.434028,0.260417,1.63284,-0.399306,0.260417,1.63284,-0.364583,0.260417,1.45923,-0.399306,0.260417,1.45923,-0.364583,0.260417,1.63284,-0.364583,0.434028,1.45923,-0.364583,0.434028,1.63284,-0.329861,0.434028,1.63284,-0.295139,0.434028,1.45923,-0.329861,0.434028,1.45923,-0.295139,0.434028,1.28562,-0.399306,0.260417,1.28562,-0.364583,0.260417,1.11201,-0.399306,0.260417,1.11201,-0.364583,0.260417,1.28562,-0.364583,0.434028,1.11201,-0.364583,0.434028,1.28562,-0.329861,0.434028,1.28562,-0.295139,0.434028,1.11201,-0.329861,0.434028,1.11201,-0.295139,0.434028,0.938399,-0.503472,0.0868055,0.938399,-0.503472,0.260417,0.764788,-0.503472,0.0868056,0.764788,-0.503472,0.260417,0.938399,-0.46875,0.260417,0.938399,-0.434028,0.260417,0.764788,-0.46875,0.260417,0.764788,-0.434028,0.260417,0.591176,-0.503472,0.0868056,0.591176,-0.503472,0.260417,0.417565,-0.503472,0.0868056,0.417565,-0.503472,0.260417,0.591176,-0.46875,0.260417,0.591176,-0.434028,0.260417,0.417565,-0.46875,0.260417,0.417565,-0.434028,0.260417,0.938399,-0.399306,0.260417,0.938399,-0.364583,0.260417,0.764788,-0.399306,0.260417,0.764788,-0.364583,0.260417,0.938399,-0.364583,0.434028,0.764788,-0.364583,0.434028,0.938399,-0.329861,0.434028,0.938399,-0.295139,0.434028,0.764788,-0.329861,0.434028,0.764788,-0.295139,0.434028,0.591176,-0.399306,0.260417,0.591176,-0.364583,0.260417,0.417565,-0.399306,0.260417,0.417565,-0.364583,0.260417,0.591176,-0.364583,0.434028,0.417565,-0.364583,0.434028,0.591176,-0.329861,0.434028,0.591176,-0.295139,0.434028,0.417565,-0.329861,0.434028,0.417565,-0.295139,0.434028,1.63284,-0.260417,0.0868054,1.63284,-0.225694,0.0868054,1.45923,-0.260417,0.0868055,1.45923,-0.225694,0.0868055,1.63284,-0.190972,0.0868054,1.63284,-0.190972,0.260417,1.63284,-0.15625,0.260417,1.45923,-0.190972,0.0868055,1.45923,-0.190972,0.260417,1.45923,-0.15625,0.260417,1.63284,-0.260417,0.434028,1.63284,-0.225694,0.434028,1.45923,-0.260417,0.434028,1.45923,-0.225694,0.434028,1.63284,-0.190972,0.434028,1.63284,-0.15625,0.434028,1.45923,-0.190972,0.434028,1.45923,-0.15625,0.434028,1.28562,-0.260417,0.0868055,1.28562,-0.225694,0.0868055,1.11201,-0.260417,0.0868055,1.11201,-0.225694,0.0868055,1.28562,-0.190972,0.0868055,1.28562,-0.190972,0.260417,1.28562,-0.15625,0.260417,1.11201,-0.190972,0.0868055,1.11201,-0.190972,0.260417,1.11201,-0.15625,0.260417,1.28562,-0.260417,0.434028,1.28562,-0.225694,0.434028,1.11201,-0.260417,0.434028,1.11201,-0.225694,0.434028,1.28562,-0.190972,0.434028,1.28562,-0.15625,0.434028,1.11201,-0.190972,0.434028,1.11201,-0.15625,0.434028,1.11201,-0.15625,0.607639,1.63284,-0.121528,0.260417,1.63284,-0.0868056,0.260417,1.45923,-0.121528,0.260417,1.45923,-0.0868056,0.260417,1.63284,-0.0520833,0.260417,1.63284,-0.0173611,0.260417,1.45923,-0.0520833,0.260417,1.45923,-0.0173611,0.260417,1.63284,-0.121528,0.434028,1.63284,-0.0868056,0.434028,1.45923,-0.121528,0.434028,1.45923,-0.0868056,0.434028,1.63284,-0.0520833,0.434028,1.63284,-0.0173611,0.434028,1.45923,-0.0520833,0.434028,1.45923,-0.0173611,0.434028,1.28562,-0.121528,0.260417,1.28562,-0.0868056,0.260417,1.11201,-0.121528,0.260417,1.11201,-0.0868056,0.260417,1.28562,-0.0520833,0.260417,1.28562,-0.0173611,0.260417,1.11201,-0.0520833,0.260417,1.11201,-0.0173611,0.260417,1.28562,-0.121528,0.434028,1.28562,-0.0868056,0.434028,1.11201,-0.121528,0.434028,1.11201,-0.0868056,0.434028,1.11201,-0.121528,0.607639,1.11201,-0.0868055,0.607639,1.28562,-0.0520833,0.434028,1.28562,-0.0173611,0.434028,1.11201,-0.0520833,0.434028,1.11201,-0.0173611,0.434028,1.11201,-0.0520833,0.607639,1.11201,-0.0173611,0.607639,0.938399,-0.260417,0.0868055,0.938399,-0.225694,0.0868055,0.938399,-0.190972,0.0868055,0.938399,-0.15625,0.0868055,0.938399,-0.190972,0.260417,0.938399,-0.15625,0.260417,0.938399,-0.260417,0.434028,0.938399,-0.225694,0.434028,0.938399,-0.225694,0.607639,0.764788,-0.260417,0.434028,0.764788,-0.225694,0.434028,0.764788,-0.260417,0.607639,0.764788,-0.225694,0.607639,0.938399,-0.190972,0.434028,0.938399,-0.15625,0.434028,0.938399,-0.190972,0.607639,0.938399,-0.15625,0.607639,0.764788,-0.190972,0.607639,0.591176,-0.260417,0.434028,0.591176,-0.225694,0.434028,0.591177,-0.260417,0.607639,0.591177,-0.225694,0.607639,0.417565,-0.260417,0.434028,0.417565,-0.225694,0.434028,0.417565,-0.225694,0.607639,0.591176,-0.190972,0.434028,0.591177,-0.190972,0.607639,0.417565,-0.190972,0.434028,0.417565,-0.190972,0.607639,0.938399,-0.121528,0.0868055,0.938399,-0.0868056,0.0868055,0.938399,-0.121528,0.260417,0.938399,-0.0868056,0.260417,0.938399,-0.0520833,0.0868055,0.938399,-0.0173611,0.0868055,0.938399,-0.0520833,0.260417,0.938399,-0.0173611,0.260417,0.938399,-0.121528,0.607639,0.938399,-0.0868055,0.607639,0.938399,-0.0520833,0.607639,0.938399,-0.0173611,0.607639,0.764788,-0.260417,0.78125,0.764788,-0.225694,0.78125,0.764788,-0.225694,0.954861,0.938399,-0.190972,0.78125,0.938399,-0.15625,0.78125,0.764788,-0.190972,0.78125,0.764788,-0.15625,0.78125,0.764788,-0.190972,0.954861,0.764788,-0.15625,0.954861,0.591177,-0.260417,0.78125,0.591177,-0.225694,0.78125,0.591177,-0.225694,0.954861,0.417565,-0.225694,0.78125,0.417565,-0.225694,0.954861,0.591177,-0.190972,0.954861,0.591177,-0.15625,0.954861,0.417565,-0.190972,0.78125,0.417565,-0.190972,0.954861,0.417565,-0.15625,0.954861,0.417565,-0.225694,1.12847,0.591177,-0.15625,1.12847,0.417565,-0.190972,1.12847,0.417565,-0.15625,1.12847,0.938399,-0.121528,0.78125,0.938399,-0.0868055,0.78125,0.764788,-0.121528,0.78125,0.764788,-0.0868055,0.78125,0.764788,-0.121528,0.954861,0.764788,-0.0868055,0.954861,0.938399,-0.0520833,0.78125,0.938399,-0.0173611,0.78125,0.938399,-0.0173611,0.954861,0.764788,-0.0520833,0.78125,0.764788,-0.0173611,0.78125,0.764788,-0.0520833,0.954861,0.764788,-0.0173611,0.954861,0.591177,-0.121528,0.954861,0.591177,-0.0868055,0.954861,0.591177,-0.0520833,0.954861,0.591177,-0.0173611,0.954861,0.591177,-0.121528,1.12847,0.591177,-0.0868055,1.12847,0.417565,-0.121528,1.12847,0.417565,-0.0868055,1.12847,0.591177,-0.0520833,1.12847,0.591177,-0.0173611,1.12847,0.417565,-0.0520833,1.12847,0.417565,-0.0173611,1.12847,1.98007,0.0173611,0.260417,1.98007,0.0520834,0.260417,1.80645,0.0173611,0.260417,1.80645,0.0520834,0.260417,1.98007,0.0868056,0.260417,1.98007,0.121528,0.260417,1.80645,0.0868056,0.260417,1.80645,0.121528,0.260417,1.98007,0.0173611,0.434028,1.98007,0.0520834,0.434028,1.80645,0.0173611,0.434028,1.80645,0.0520834,0.434028,1.98007,0.0868056,0.434028,1.98007,0.121528,0.434028,1.80645,0.0868056,0.434028,1.80645,0.121528,0.434028,1.98007,0.190972,0.0868054,1.98007,0.15625,0.260417,1.98007,0.190972,0.260417,1.80645,0.190972,0.0868054,1.80645,0.15625,0.260417,1.80645,0.190972,0.260417,1.98007,0.225694,0.0868054,1.98007,0.260417,0.0868054,1.98007,0.225694,0.260417,1.98007,0.260417,0.260417,1.80645,0.225694,0.0868054,1.80645,0.260417,0.0868054,1.98007,0.15625,0.434028,1.98007,0.190972,0.434028,1.80645,0.15625,0.434028,1.80645,0.190972,0.434028,1.98007,0.225694,0.434028,1.98007,0.260417,0.434028,1.80645,0.225694,0.434028,1.80645,0.260417,0.434028,1.98007,0.295139,0.0868054,1.98007,0.329861,0.0868054,1.98007,0.295139,0.260417,1.98007,0.329861,0.260417,1.98007,0.364583,0.0868054,1.98007,0.399306,0.0868054,1.98007,0.364583,0.260416,1.98007,0.399306,0.260416,1.80645,0.364583,0.260416,1.80645,0.399306,0.260416,1.98007,0.295139,0.434028,1.98007,0.329861,0.434028,1.80645,0.295139,0.434028,1.80645,0.329861,0.434028,1.98007,0.364583,0.434028,1.80645,0.364583,0.434028,1.98007,0.434028,0.0868054,1.98007,0.46875,0.0868054,1.98007,0.434028,0.260416,1.98007,0.46875,0.260416,1.80645,0.434028,0.260416,1.80645,0.46875,0.260416,1.98007,0.503472,0.0868054,1.98007,0.503472,0.260416,1.80645,0.503472,0.0868054,1.80645,0.503472,0.260416,1.63284,0.0173611,0.260417,1.63284,0.0520834,0.260417,1.45923,0.0173611,0.260417,1.45923,0.0520834,0.260417,1.63284,0.0868056,0.260417,1.63284,0.121528,0.260417,1.45923,0.0868056,0.260417,1.45923,0.121528,0.260417,1.63284,0.0173611,0.434028,1.63284,0.0520834,0.434028,1.45923,0.0173611,0.434028,1.45923,0.0520834,0.434028,1.63284,0.0868056,0.434028,1.63284,0.121528,0.434028,1.45923,0.0868056,0.434028,1.45923,0.121528,0.434028,1.28562,0.0173611,0.260417,1.28562,0.0520834,0.260417,1.11201,0.0173611,0.260417,1.11201,0.0520834,0.260417,1.28562,0.0868056,0.260417,1.28562,0.121528,0.260417,1.11201,0.0868056,0.260417,1.11201,0.121528,0.260417,1.28562,0.0173611,0.434028,1.28562,0.0520834,0.434028,1.11201,0.0173611,0.434028,1.11201,0.0520834,0.434028,1.11201,0.0173611,0.607639,1.11201,0.0520834,0.607639,1.28562,0.0868056,0.434028,1.28562,0.121528,0.434028,1.11201,0.0868056,0.434028,1.11201,0.121528,0.434028,1.11201,0.0868056,0.607639,1.11201,0.121528,0.607639,1.63284,0.190972,0.0868054,1.63284,0.15625,0.260417,1.63284,0.190972,0.260417,1.45923,0.190972,0.0868054,1.45923,0.15625,0.260417,1.45923,0.190972,0.260417,1.63284,0.225694,0.0868054,1.63284,0.260417,0.0868054,1.45923,0.225694,0.0868054,1.45923,0.260417,0.0868054,1.63284,0.15625,0.434028,1.63284,0.190972,0.434028,1.45923,0.15625,0.434028,1.45923,0.190972,0.434028,1.63284,0.225694,0.434028,1.63284,0.260417,0.434028,1.45923,0.225694,0.434028,1.45923,0.260417,0.434028,1.28562,0.190972,0.0868055,1.28562,0.15625,0.260417,1.28562,0.190972,0.260417,1.11201,0.190972,0.0868055,1.11201,0.15625,0.260417,1.11201,0.190972,0.260417,1.28562,0.225694,0.0868055,1.28562,0.260417,0.0868055,1.11201,0.225694,0.0868055,1.11201,0.260417,0.0868055,1.28562,0.15625,0.434028,1.28562,0.190972,0.434028,1.11201,0.15625,0.434028,1.11201,0.190972,0.434028,1.11201,0.15625,0.607639,1.28562,0.225694,0.434028,1.28562,0.260417,0.434028,1.11201,0.225694,0.434028,1.11201,0.260417,0.434028,0.938399,0.0173611,0.0868055,0.938399,0.0520834,0.0868055,0.938399,0.0173611,0.260417,0.938399,0.0520834,0.260417,0.938399,0.0868056,0.0868055,0.938399,0.121528,0.0868055,0.938399,0.0868056,0.260417,0.938399,0.121528,0.260417,0.938399,0.0173611,0.607639,0.938399,0.0520834,0.607639,0.938399,0.0868056,0.607639,0.938399,0.121528,0.607639,0.938399,0.15625,0.0868055,0.938399,0.190972,0.0868055,0.938399,0.15625,0.260417,0.938399,0.190972,0.260417,0.938399,0.225694,0.0868055,0.938399,0.260417,0.0868055,0.938399,0.15625,0.434028,0.938399,0.190972,0.434028,0.938399,0.15625,0.607639,0.938399,0.190972,0.607639,0.764788,0.190972,0.607639,0.938399,0.225694,0.434028,0.938399,0.260417,0.434028,0.938399,0.225694,0.607639,0.764788,0.225694,0.434028,0.764788,0.260417,0.434028,0.764788,0.225694,0.607639,0.764788,0.260417,0.607639,0.591176,0.190972,0.434028,0.591177,0.190972,0.607639,0.417565,0.190972,0.434028,0.417565,0.190972,0.607639,0.591176,0.225694,0.434028,0.591176,0.260417,0.434028,0.591177,0.225694,0.607639,0.591177,0.260417,0.607639,0.417565,0.225694,0.434028,0.417565,0.260417,0.434028,0.417565,0.225694,0.607639,0.938399,0.0173611,0.78125,0.938399,0.0520834,0.78125,0.938399,0.0173612,0.954861,0.764788,0.0173611,0.78125,0.764788,0.0520834,0.78125,0.764788,0.0173612,0.954861,0.764788,0.0520834,0.954861,0.938399,0.0868056,0.78125,0.938399,0.121528,0.78125,0.764788,0.0868056,0.78125,0.764788,0.121528,0.78125,0.764788,0.0868056,0.954861,0.764788,0.121528,0.954861,0.591177,0.0173612,0.954861,0.591177,0.0520834,0.954861,0.591177,0.0868056,0.954861,0.591177,0.121528,0.954861,0.591177,0.0173612,1.12847,0.591177,0.0520834,1.12847,0.417565,0.0173612,1.12847,0.417565,0.0520834,1.12847,0.591177,0.0868056,1.12847,0.591177,0.121528,1.12847,0.417565,0.0868056,1.12847,0.417565,0.121528,1.12847,0.938399,0.15625,0.78125,0.938399,0.190972,0.78125,0.764788,0.15625,0.78125,0.764788,0.190972,0.78125,0.764788,0.15625,0.954861,0.764788,0.190972,0.954861,0.764788,0.225694,0.78125,0.764788,0.260417,0.78125,0.764788,0.225694,0.954861,0.591177,0.15625,0.954861,0.591177,0.190972,0.954861,0.417565,0.190972,0.78125,0.417565,0.15625,0.954861,0.417565,0.190972,0.954861,0.591177,0.225694,0.78125,0.591177,0.260417,0.78125,0.591177,0.225694,0.954861,0.417565,0.225694,0.78125,0.417565,0.225694,0.954861,0.591177,0.15625,1.12847,0.417565,0.15625,1.12847,0.417565,0.190972,1.12847,0.417565,0.225694,1.12847,1.63284,0.364583,0.260417,1.63284,0.399306,0.260417,1.45923,0.364583,0.260417,1.45923,0.399306,0.260417,1.63284,0.295139,0.434028,1.63284,0.329861,0.434028,1.45923,0.295139,0.434028,1.45923,0.329861,0.434028,1.63284,0.364583,0.434028,1.45923,0.364583,0.434028,1.28562,0.364583,0.260417,1.28562,0.399306,0.260417,1.11201,0.364583,0.260417,1.11201,0.399306,0.260417,1.28562,0.295139,0.434028,1.28562,0.329861,0.434028,1.11201,0.295139,0.434028,1.11201,0.329861,0.434028,1.28562,0.364583,0.434028,1.11201,0.364583,0.434028,1.63284,0.434028,0.260417,1.63284,0.46875,0.260417,1.45923,0.434028,0.260417,1.45923,0.46875,0.260417,1.63284,0.503472,0.0868054,1.63284,0.503472,0.260417,1.45923,0.503472,0.0868054,1.45923,0.503472,0.260417,1.28562,0.434028,0.260417,1.28562,0.46875,0.260417,1.11201,0.434028,0.260417,1.11201,0.46875,0.260417,1.28562,0.503472,0.0868055,1.28562,0.503472,0.260417,1.11201,0.503472,0.0868055,1.11201,0.503472,0.260417,0.938399,0.364583,0.260417,0.938399,0.399306,0.260417,0.764788,0.364583,0.260417,0.764788,0.399306,0.260417,0.938399,0.295139,0.434028,0.938399,0.329861,0.434028,0.764788,0.295139,0.434028,0.764788,0.329861,0.434028,0.938399,0.364583,0.434028,0.764788,0.364583,0.434028,0.591176,0.364583,0.260417,0.591176,0.399306,0.260417,0.417565,0.364583,0.260417,0.417565,0.399306,0.260417,0.591176,0.295139,0.434028,0.591176,0.329861,0.434028,0.417565,0.295139,0.434028,0.417565,0.329861,0.434028,0.591176,0.364583,0.434028,0.417565,0.364583,0.434028,0.938399,0.434028,0.260417,0.938399,0.46875,0.260417,0.764788,0.434028,0.260417,0.764788,0.46875,0.260417,0.938399,0.503472,0.0868055,0.938399,0.503472,0.260417,0.764788,0.503472,0.0868055,0.764788,0.503472,0.260417,0.591176,0.434028,0.260417,0.591176,0.46875,0.260417,0.417565,0.434028,0.260417,0.417565,0.46875,0.260417,0.591176,0.503472,0.0868056,0.591176,0.503472,0.260417,0.417565,0.503472,0.0868056,0.417565,0.503472,0.260417,0.243954,-0.503472,-0.260417,0.243954,-0.503472,-0.0868055,0.243954,-0.46875,-0.260417,0.243954,-0.434028,-0.260417,0.243954,-0.46875,-0.0868055,0.0703429,-0.46875,-0.260417,0.0703429,-0.434028,-0.260417,0.0703429,-0.46875,-0.0868055,0.0703429,-0.434028,-0.0868055,0.243954,-0.364583,-0.434028,0.243954,-0.329861,-0.434028,0.243954,-0.295139,-0.434028,0.0703428,-0.295139,-0.434028,0.243954,-0.399306,-0.260417,0.243954,-0.364583,-0.260417,0.0703429,-0.399306,-0.260417,0.0703429,-0.364583,-0.260417,0.0703429,-0.399306,-0.0868055,0.0703429,-0.364583,-0.0868055,0.243954,-0.329861,-0.260417,0.243954,-0.295139,-0.260417,0.0703429,-0.329861,-0.260417,0.0703429,-0.295139,-0.260417,0.0703429,-0.329861,-0.0868055,-0.103268,-0.364583,-0.0868055,-0.103268,-0.329861,-0.260417,-0.103268,-0.295139,-0.260417,-0.103268,-0.329861,-0.0868055,-0.103268,-0.295139,-0.0868055,0.243954,-0.225694,-1.12847,0.0703427,-0.225694,-1.12847,0.243954,-0.190972,-1.12847,0.243954,-0.15625,-1.12847,0.0703427,-0.190972,-1.12847,0.0703427,-0.15625,-1.12847,0.243954,-0.225694,-0.954861,0.243954,-0.225694,-0.78125,0.0703428,-0.225694,-0.954861,0.0703428,-0.225694,-0.78125,0.243954,-0.190972,-0.78125,0.0703428,-0.190972,-0.78125,-0.103268,-0.225694,-1.12847,-0.27688,-0.225694,-1.12847,-0.103268,-0.190972,-1.12847,-0.103268,-0.15625,-1.12847,-0.27688,-0.190972,-1.12847,-0.27688,-0.15625,-1.12847,-0.103268,-0.225694,-0.954861,-0.103268,-0.225694,-0.78125,-0.27688,-0.225694,-0.954861,-0.27688,-0.225694,-0.78125,-0.103268,-0.190972,-0.78125,-0.27688,-0.190972,-0.78125,0.243954,-0.121528,-1.12847,0.243954,-0.0868056,-1.12847,0.0703427,-0.121528,-1.30208,0.0703427,-0.0868056,-1.30208,0.0703427,-0.121528,-1.12847,0.0703427,-0.0868056,-1.12847,0.243954,-0.0520834,-1.30208,0.243954,-0.0173612,-1.30208,0.243954,-0.0520834,-1.12847,0.243954,-0.0173612,-1.12847,0.0703427,-0.0520834,-1.30208,0.0703427,-0.0173612,-1.30208,0.0703427,-0.0520834,-1.12847,-0.103268,-0.121528,-1.30208,-0.103268,-0.0868056,-1.30208,-0.103268,-0.121528,-1.12847,-0.103268,-0.0868056,-1.12847,-0.27688,-0.0868056,-1.30208,-0.27688,-0.121528,-1.12847,-0.27688,-0.0868056,-1.12847,-0.103268,-0.0520834,-1.30208,-0.103268,-0.0173612,-1.30208,-0.27688,-0.0520834,-1.30208,-0.27688,-0.0173612,-1.30208,-0.27688,-0.0520834,-1.12847,-0.27688,-0.0173612,-1.12847,0.243954,-0.260417,-0.434028,0.243954,-0.225694,-0.434028,0.0703428,-0.260417,-0.434028,0.0703428,-0.225694,-0.434028,0.243954,-0.190972,-0.607639,0.243954,-0.190972,-0.434028,0.0703428,-0.190972,-0.607639,0.0703428,-0.190972,-0.434028,0.0703429,-0.260417,-0.260417,0.0703429,-0.225694,-0.260417,0.0703429,-0.190972,-0.260417,-0.103268,-0.190972,-0.607639,-0.103268,-0.190972,-0.434028,-0.27688,-0.190972,-0.607639,-0.27688,-0.190972,-0.434028,-0.103268,-0.260417,-0.260417,-0.103268,-0.225694,-0.260417,-0.103268,-0.260417,-0.0868055,-0.103268,-0.225694,-0.0868055,-0.103268,-0.190972,-0.260417,-0.103268,-0.190972,-0.0868055,-0.27688,-0.190972,-0.260417,-0.276879,-0.190972,-0.0868055,-0.45049,-0.225694,-1.12847,-0.45049,-0.190972,-1.12847,-0.45049,-0.15625,-1.12847,-0.624102,-0.190972,-1.12847,-0.624102,-0.15625,-1.12847,-0.45049,-0.260417,-0.954861,-0.45049,-0.225694,-0.954861,-0.45049,-0.260417,-0.78125,-0.45049,-0.225694,-0.78125,-0.624102,-0.260417,-0.954861,-0.624102,-0.225694,-0.954861,-0.624102,-0.260417,-0.78125,-0.624102,-0.225694,-0.78125,-0.45049,-0.190972,-0.954861,-0.45049,-0.190972,-0.78125,-0.624102,-0.190972,-0.954861,-0.624102,-0.15625,-0.954861,-0.624102,-0.190972,-0.78125,-0.797713,-0.225694,-0.954861,-0.797713,-0.225694,-0.78125,-0.971324,-0.225694,-0.78125,-0.797713,-0.190972,-0.954861,-0.797713,-0.15625,-0.954861,-0.797713,-0.190972,-0.78125,-0.797713,-0.15625,-0.78125,-0.971324,-0.190972,-0.78125,-0.971324,-0.15625,-0.78125,-0.45049,-0.121528,-1.12847,-0.45049,-0.0868056,-1.12847,-0.624102,-0.121528,-1.12847,-0.624102,-0.0868056,-1.12847,-0.45049,-0.0520834,-1.12847,-0.45049,-0.0173612,-1.12847,-0.624102,-0.0520834,-1.12847,-0.624102,-0.0173612,-1.12847,-0.624102,-0.121528,-0.954861,-0.624102,-0.0868056,-0.954861,-0.624102,-0.0520834,-0.954861,-0.797713,-0.0520834,-1.12847,-0.797713,-0.0173612,-1.12847,-0.797713,-0.121528,-0.954861,-0.797713,-0.0868056,-0.954861,-0.797713,-0.121528,-0.78125,-0.971324,-0.121528,-0.954861,-0.971324,-0.0868056,-0.954861,-0.971324,-0.121528,-0.78125,-0.971324,-0.0868056,-0.78125,-0.797713,-0.0520834,-0.954861,-0.797713,-0.0173612,-0.954861,-0.971324,-0.0520834,-0.954861,-0.971324,-0.0173612,-0.954861,-0.971324,-0.0520834,-0.78125,-0.971324,-0.0173611,-0.78125,-0.624102,-0.225694,-0.607639,-0.45049,-0.190972,-0.607639,-0.45049,-0.190972,-0.434028,-0.624102,-0.190972,-0.607639,-0.624102,-0.190972,-0.434028,-0.45049,-0.190972,-0.260417,-0.45049,-0.190972,-0.0868054,-0.624102,-0.190972,-0.260417,-0.624102,-0.190972,-0.0868054,-0.797713,-0.260417,-0.607639,-0.797713,-0.225694,-0.607639,-0.797713,-0.260417,-0.434028,-0.797713,-0.225694,-0.434028,-0.971324,-0.260417,-0.607639,-0.971324,-0.225694,-0.607639,-0.971324,-0.260417,-0.434028,-0.971324,-0.225694,-0.434028,-0.797713,-0.190972,-0.607639,-0.797713,-0.190972,-0.434028,-0.971324,-0.190972,-0.607639,-0.971324,-0.15625,-0.607639,-0.971324,-0.190972,-0.434028,-0.797713,-0.225694,-0.260417,-0.971324,-0.225694,-0.260417,-0.971324,-0.260417,-0.0868053,-0.971324,-0.225694,-0.0868053,-0.797713,-0.190972,-0.260417,-0.797713,-0.190972,-0.0868054,-0.971324,-0.190972,-0.260417,-0.971324,-0.190972,-0.0868053,-0.971324,-0.121528,-0.607639,-0.971324,-0.0868056,-0.607639,-0.971324,-0.0520834,-0.607639,-1.14494,-0.0520834,-0.78125,-1.14494,-0.0173611,-0.78125,-1.14494,-0.225694,-0.434028,-1.14494,-0.190972,-0.607639,-1.14494,-0.15625,-0.607639,-1.14494,-0.190972,-0.434028,-1.14494,-0.15625,-0.434028,-1.14494,-0.225694,-0.260417,-1.14494,-0.260417,-0.0868053,-1.14494,-0.225694,-0.0868053,-1.14494,-0.190972,-0.260417,-1.14494,-0.15625,-0.260417,-1.14494,-0.190972,-0.0868053,-1.14494,-0.15625,-0.0868053,-1.31855,-0.15625,-0.260417,-1.31855,-0.15625,-0.0868053,-1.14494,-0.121528,-0.607639,-1.14494,-0.0868056,-0.607639,-1.14494,-0.121528,-0.434028,-1.14494,-0.0868056,-0.434028,-1.14494,-0.0520834,-0.607639,-1.14494,-0.0173611,-0.607639,-1.14494,-0.0520834,-0.434028,-1.14494,-0.0173611,-0.434028,-1.31855,-0.0520834,-0.434028,-1.31855,-0.0173611,-0.434028,-1.14494,-0.121528,-0.260417,-1.14494,-0.0868056,-0.260417,-1.31855,-0.121528,-0.260417,-1.31855,-0.0868056,-0.260417,-1.31855,-0.121528,-0.0868053,-1.31855,-0.0868056,-0.0868053,-1.14494,-0.0520834,-0.260417,-1.31855,-0.0520834,-0.260417,-1.31855,-0.0173611,-0.260417,-1.31855,-0.0520834,-0.0868053,-1.31855,-0.0173611,-0.0868053,0.243954,0.0173611,-1.30208,0.243954,0.0520833,-1.30208,0.243954,0.0173611,-1.12847,0.243954,0.0520833,-1.12847,0.0703427,0.0173611,-1.30208,0.0703427,0.0520833,-1.30208,0.0703427,0.0520833,-1.12847,0.243954,0.0868055,-1.12847,0.243954,0.121528,-1.12847,0.0703427,0.0868055,-1.30208,0.0703427,0.121528,-1.30208,0.0703427,0.0868055,-1.12847,0.0703427,0.121528,-1.12847,-0.103268,0.0173611,-1.30208,-0.103268,0.0520833,-1.30208,-0.27688,0.0173611,-1.30208,-0.27688,0.0520833,-1.30208,-0.27688,0.0173611,-1.12847,-0.27688,0.0520833,-1.12847,-0.103268,0.0868055,-1.30208,-0.103268,0.121528,-1.30208,-0.103268,0.0868055,-1.12847,-0.103268,0.121528,-1.12847,-0.27688,0.0868055,-1.30208,-0.27688,0.0868055,-1.12847,-0.27688,0.121528,-1.12847,0.243954,0.15625,-1.12847,0.243954,0.190972,-1.12847,0.0703427,0.15625,-1.12847,0.0703427,0.190972,-1.12847,0.243954,0.225694,-1.12847,0.0703427,0.225694,-1.12847,0.243954,0.190972,-0.78125,0.0703428,0.190972,-0.78125,0.243954,0.225694,-0.954861,0.243954,0.225694,-0.78125,0.0703428,0.225694,-0.954861,0.0703428,0.225694,-0.78125,-0.103268,0.15625,-1.12847,-0.103268,0.190972,-1.12847,-0.27688,0.15625,-1.12847,-0.27688,0.190972,-1.12847,-0.103268,0.225694,-1.12847,-0.27688,0.225694,-1.12847,-0.103268,0.190972,-0.78125,-0.27688,0.190972,-0.78125,-0.103268,0.225694,-0.954861,-0.103268,0.225694,-0.78125,-0.27688,0.225694,-0.954861,-0.27688,0.225694,-0.78125,0.243954,0.190972,-0.607639,0.243954,0.190972,-0.434028,0.0703428,0.190972,-0.607639,0.0703428,0.190972,-0.434028,0.243954,0.225694,-0.434028,0.243954,0.260417,-0.434028,0.0703428,0.225694,-0.434028,0.0703428,0.260417,-0.434028,0.0703429,0.190972,-0.260417,0.0703429,0.225694,-0.260417,0.0703429,0.260417,-0.260417,-0.103268,0.190972,-0.607639,-0.103268,0.190972,-0.434028,-0.27688,0.190972,-0.607639,-0.27688,0.190972,-0.434028,-0.103268,0.190972,-0.260417,-0.103268,0.190972,-0.0868055,-0.27688,0.190972,-0.260417,-0.276879,0.190972,-0.0868055,-0.103268,0.225694,-0.260417,-0.103268,0.260417,-0.260417,-0.103268,0.225694,-0.0868055,-0.103268,0.260417,-0.0868055,-0.45049,0.0173611,-1.12847,-0.45049,0.0520833,-1.12847,-0.624102,0.0173611,-1.12847,-0.624102,0.0520833,-1.12847,-0.45049,0.0868055,-1.12847,-0.45049,0.121528,-1.12847,-0.624102,0.0868055,-1.12847,-0.624102,0.121528,-1.12847,-0.624102,0.0520833,-0.954861,-0.624102,0.0868055,-0.954861,-0.624102,0.121528,-0.954861,-0.797713,0.0173611,-1.12847,-0.797713,0.0520833,-1.12847,-0.797713,0.0173611,-0.954861,-0.797713,0.0520833,-0.954861,-0.971324,0.0173611,-0.954861,-0.971324,0.0520833,-0.954861,-0.971324,0.0173611,-0.78125,-0.971324,0.0520833,-0.78125,-0.797713,0.0868055,-0.954861,-0.797713,0.121528,-0.954861,-0.797713,0.121528,-0.78125,-0.971324,0.0868055,-0.954861,-0.971324,0.121528,-0.954861,-0.971324,0.0868055,-0.78125,-0.971324,0.121528,-0.78125,-0.45049,0.15625,-1.12847,-0.45049,0.190972,-1.12847,-0.624102,0.15625,-1.12847,-0.624102,0.190972,-1.12847,-0.45049,0.225694,-1.12847,-0.45049,0.190972,-0.954861,-0.45049,0.190972,-0.78125,-0.624102,0.15625,-0.954861,-0.624102,0.190972,-0.954861,-0.624102,0.190972,-0.78125,-0.45049,0.225694,-0.954861,-0.45049,0.260417,-0.954861,-0.45049,0.225694,-0.78125,-0.45049,0.260417,-0.78125,-0.624102,0.225694,-0.954861,-0.624102,0.260417,-0.954861,-0.624102,0.225694,-0.78125,-0.624102,0.260417,-0.78125,-0.797713,0.15625,-0.954861,-0.797713,0.190972,-0.954861,-0.797713,0.15625,-0.78125,-0.797713,0.190972,-0.78125,-0.971324,0.15625,-0.78125,-0.971324,0.190972,-0.78125,-0.797713,0.225694,-0.954861,-0.797713,0.225694,-0.78125,-0.971324,0.225694,-0.78125,-0.971324,0.0520833,-0.607639,-0.971324,0.0868055,-0.607639,-0.971324,0.121528,-0.607639,-0.45049,0.190972,-0.607639,-0.45049,0.190972,-0.434028,-0.624102,0.190972,-0.607639,-0.624102,0.190972,-0.434028,-0.624102,0.225694,-0.607639,-0.45049,0.190972,-0.260417,-0.45049,0.190972,-0.0868054,-0.624102,0.190972,-0.260417,-0.624102,0.190972,-0.0868054,-0.797713,0.190972,-0.607639,-0.797713,0.190972,-0.434028,-0.971324,0.15625,-0.607639,-0.971324,0.190972,-0.607639,-0.971324,0.190972,-0.434028,-0.797713,0.225694,-0.607639,-0.797713,0.260417,-0.607639,-0.797713,0.225694,-0.434028,-0.797713,0.260417,-0.434028,-0.971324,0.225694,-0.607639,-0.971324,0.260417,-0.607639,-0.971324,0.225694,-0.434028,-0.971324,0.260417,-0.434028,-0.797713,0.190972,-0.260417,-0.797713,0.190972,-0.0868054,-0.971324,0.190972,-0.260417,-0.971324,0.190972,-0.0868054,-0.797713,0.225694,-0.260417,-0.971324,0.225694,-0.260417,-0.971324,0.225694,-0.0868054,-0.971324,0.260417,-0.0868054,0.243954,0.295139,-0.434028,0.243954,0.329861,-0.434028,0.0703428,0.295139,-0.434028,0.243954,0.364583,-0.434028,0.243954,0.295139,-0.260417,0.243954,0.329861,-0.260417,0.0703429,0.295139,-0.260417,0.0703429,0.329861,-0.260417,0.0703429,0.329861,-0.0868055,0.243954,0.364583,-0.260417,0.243954,0.399306,-0.260417,0.0703429,0.364583,-0.260417,0.0703429,0.399306,-0.260417,0.0703429,0.364583,-0.0868055,0.0703429,0.399306,-0.0868055,-0.103268,0.295139,-0.260417,-0.103268,0.329861,-0.260417,-0.103268,0.295139,-0.0868055,-0.103268,0.329861,-0.0868055,-0.103268,0.364583,-0.0868055,0.243954,0.434028,-0.260417,0.243954,0.46875,-0.260417,0.243954,0.46875,-0.0868055,0.0703429,0.434028,-0.260417,0.0703429,0.46875,-0.260417,0.0703429,0.434028,-0.0868055,0.0703429,0.46875,-0.0868055,0.243954,0.503472,-0.260417,0.243954,0.503472,-0.0868055,-1.14494,0.0173611,-0.78125,-1.14494,0.0520833,-0.78125,-1.14494,0.0173611,-0.607639,-1.14494,0.0520833,-0.607639,-1.14494,0.0173611,-0.434028,-1.14494,0.0520833,-0.434028,-1.31855,0.0173611,-0.434028,-1.31855,0.0520833,-0.434028,-1.14494,0.0868055,-0.607639,-1.14494,0.121528,-0.607639,-1.14494,0.0868056,-0.434028,-1.14494,0.121528,-0.434028,-1.14494,0.0520833,-0.260417,-1.31855,0.0173611,-0.260417,-1.31855,0.0520833,-0.260417,-1.31855,0.0173611,-0.0868053,-1.31855,0.0520833,-0.0868053,-1.14494,0.0868056,-0.260417,-1.14494,0.121528,-0.260417,-1.31855,0.0868056,-0.260417,-1.31855,0.121528,-0.260417,-1.31855,0.0868056,-0.0868053,-1.31855,0.121528,-0.0868053,-1.14494,0.15625,-0.607639,-1.14494,0.190972,-0.607639,-1.14494,0.15625,-0.434028,-1.14494,0.190972,-0.434028,-1.14494,0.225694,-0.434028,-1.14494,0.15625,-0.260417,-1.14494,0.190972,-0.260417,-1.14494,0.15625,-0.0868053,-1.14494,0.190972,-0.0868053,-1.31855,0.15625,-0.260417,-1.31855,0.15625,-0.0868053,-1.14494,0.225694,-0.260417,-1.14494,0.225694,-0.0868053,-1.14494,0.260417,-0.0868053,0.243954,-0.503472,0.0868057,0.243954,-0.503472,0.260417,0.243954,-0.46875,0.0868057,0.243954,-0.46875,0.260417,0.243954,-0.434028,0.260417,0.0703429,-0.46875,0.0868057,0.0703429,-0.434028,0.0868057,0.0703429,-0.46875,0.260417,0.0703429,-0.434028,0.260417,0.243954,-0.399306,0.260417,0.243954,-0.364583,0.260417,0.0703429,-0.399306,0.0868057,0.0703429,-0.364583,0.0868057,0.0703429,-0.399306,0.260417,0.0703429,-0.364583,0.260417,0.243954,-0.329861,0.260417,0.243954,-0.295139,0.260417,0.0703429,-0.329861,0.0868057,0.0703429,-0.329861,0.260417,0.0703429,-0.295139,0.260417,0.243954,-0.364583,0.434028,0.243954,-0.329861,0.434028,0.243954,-0.295139,0.434028,0.070343,-0.295139,0.434028,-0.103268,-0.364583,0.0868057,-0.103268,-0.329861,0.0868057,-0.103268,-0.295139,0.0868057,-0.103268,-0.329861,0.260417,-0.103268,-0.295139,0.260417,0.0703429,-0.260417,0.260417,0.0703429,-0.225694,0.260417,0.0703429,-0.190972,0.260417,0.243954,-0.260417,0.434028,0.243954,-0.225694,0.434028,0.070343,-0.260417,0.434028,0.070343,-0.225694,0.434028,0.243954,-0.190972,0.434028,0.243954,-0.190972,0.607639,0.070343,-0.190972,0.434028,0.070343,-0.190972,0.607639,-0.103268,-0.260417,0.0868057,-0.103268,-0.225694,0.0868057,-0.103268,-0.260417,0.260417,-0.103268,-0.225694,0.260417,-0.103268,-0.190972,0.0868057,-0.103268,-0.190972,0.260417,-0.276879,-0.190972,0.0868057,-0.276879,-0.190972,0.260417,-0.103268,-0.190972,0.434028,-0.103268,-0.190972,0.607639,-0.276879,-0.190972,0.434028,-0.276879,-0.190972,0.607639,0.243954,-0.225694,0.78125,0.243954,-0.225694,0.954861,0.070343,-0.225694,0.78125,0.070343,-0.225694,0.954861,0.243954,-0.190972,0.78125,0.070343,-0.190972,0.78125,0.243954,-0.225694,1.12847,0.0703431,-0.225694,1.12847,0.243954,-0.190972,1.12847,0.243954,-0.15625,1.12847,0.0703431,-0.190972,1.12847,0.0703431,-0.15625,1.12847,-0.103268,-0.225694,0.78125,-0.103268,-0.225694,0.954861,-0.276879,-0.225694,0.78125,-0.276879,-0.225694,0.954861,-0.103268,-0.190972,0.78125,-0.276879,-0.190972,0.78125,-0.103268,-0.225694,1.12847,-0.276879,-0.225694,1.12847,-0.103268,-0.190972,1.12847,-0.103268,-0.15625,1.12847,-0.276879,-0.190972,1.12847,-0.276879,-0.15625,1.12847,0.243954,-0.121528,1.12847,0.243954,-0.0868055,1.12847,0.0703431,-0.121528,1.12847,0.0703431,-0.0868055,1.12847,0.0703431,-0.121528,1.30208,0.0703431,-0.0868055,1.30208,0.243954,-0.0520833,1.12847,0.243954,-0.0173611,1.12847,0.243954,-0.0520833,1.30208,0.243954,-0.0173611,1.30208,0.0703431,-0.0520833,1.12847,0.0703431,-0.0520833,1.30208,0.0703431,-0.0173611,1.30208,-0.103268,-0.121528,1.12847,-0.103268,-0.0868055,1.12847,-0.103268,-0.121528,1.30208,-0.103268,-0.0868055,1.30208,-0.276879,-0.121528,1.12847,-0.276879,-0.0868055,1.12847,-0.276879,-0.0868055,1.30208,-0.103268,-0.0520833,1.30208,-0.103268,-0.0173611,1.30208,-0.276879,-0.0520833,1.12847,-0.276879,-0.0173611,1.12847,-0.276879,-0.0520833,1.30208,-0.276879,-0.0173611,1.30208,-0.45049,-0.190972,0.0868057,-0.45049,-0.190972,0.260417,-0.624102,-0.190972,0.0868058,-0.624102,-0.190972,0.260417,-0.624101,-0.225694,0.607639,-0.45049,-0.190972,0.434028,-0.45049,-0.190972,0.607639,-0.624101,-0.190972,0.434028,-0.624101,-0.190972,0.607639,-0.797713,-0.225694,0.260417,-0.971324,-0.260417,0.0868058,-0.971324,-0.225694,0.0868058,-0.971324,-0.225694,0.260417,-0.797713,-0.190972,0.0868058,-0.797713,-0.190972,0.260417,-0.971324,-0.190972,0.0868058,-0.971324,-0.190972,0.260417,-0.797713,-0.260417,0.434028,-0.797713,-0.225694,0.434028,-0.797713,-0.260417,0.607639,-0.797713,-0.225694,0.607639,-0.971324,-0.260417,0.434028,-0.971324,-0.225694,0.434028,-0.971324,-0.260417,0.607639,-0.971324,-0.225694,0.607639,-0.797713,-0.190972,0.434028,-0.797713,-0.190972,0.607639,-0.971324,-0.190972,0.434028,-0.971324,-0.190972,0.607639,-0.971324,-0.15625,0.607639,-0.971324,-0.121528,0.607639,-0.971324,-0.0868055,0.607639,-0.971324,-0.0520833,0.607639,-0.45049,-0.260417,0.78125,-0.45049,-0.225694,0.78125,-0.45049,-0.260417,0.954861,-0.45049,-0.225694,0.954861,-0.624101,-0.260417,0.78125,-0.624101,-0.225694,0.78125,-0.624101,-0.260417,0.954861,-0.624101,-0.225694,0.954861,-0.45049,-0.190972,0.78125,-0.45049,-0.190972,0.954861,-0.624101,-0.190972,0.78125,-0.624101,-0.190972,0.954861,-0.624101,-0.15625,0.954861,-0.45049,-0.225694,1.12847,-0.45049,-0.190972,1.12847,-0.45049,-0.15625,1.12847,-0.624101,-0.190972,1.12847,-0.624101,-0.15625,1.12847,-0.797713,-0.225694,0.78125,-0.797713,-0.225694,0.954861,-0.971324,-0.225694,0.78125,-0.797713,-0.190972,0.78125,-0.797713,-0.15625,0.78125,-0.797713,-0.190972,0.954861,-0.797713,-0.15625,0.954861,-0.971324,-0.190972,0.78125,-0.971324,-0.15625,0.78125,-0.624101,-0.121528,0.954861,-0.624101,-0.0868055,0.954861,-0.624101,-0.0520833,0.954861,-0.45049,-0.121528,1.12847,-0.45049,-0.0868055,1.12847,-0.624101,-0.121528,1.12847,-0.624101,-0.0868055,1.12847,-0.45049,-0.0520833,1.12847,-0.45049,-0.0173611,1.12847,-0.624101,-0.0520833,1.12847,-0.624101,-0.0173611,1.12847,-0.797713,-0.121528,0.78125,-0.797713,-0.121528,0.954861,-0.797713,-0.0868055,0.954861,-0.971324,-0.121528,0.78125,-0.971324,-0.0868055,0.78125,-0.971324,-0.121528,0.954861,-0.971324,-0.0868055,0.954861,-0.797713,-0.0520833,0.954861,-0.797713,-0.0173611,0.954861,-0.971324,-0.0520833,0.78125,-0.971324,-0.0173611,0.78125,-0.971324,-0.0520833,0.954861,-0.971324,-0.0173611,0.954861,-0.797713,-0.0520833,1.12847,-0.797713,-0.0173611,1.12847,-1.14494,-0.260417,0.0868059,-1.14494,-0.225694,0.0868059,-1.14494,-0.225694,0.260417,-1.14494,-0.190972,0.0868059,-1.14494,-0.15625,0.0868059,-1.14494,-0.190972,0.260417,-1.14494,-0.15625,0.260417,-1.31855,-0.15625,0.0868059,-1.31855,-0.15625,0.260417,-1.14493,-0.225694,0.434028,-1.14493,-0.190972,0.434028,-1.14493,-0.15625,0.434028,-1.14493,-0.190972,0.607639,-1.14493,-0.15625,0.607639,-1.14494,-0.121528,0.260417,-1.14494,-0.0868056,0.260417,-1.31855,-0.121528,0.0868059,-1.31855,-0.0868056,0.0868059,-1.31855,-0.121528,0.260417,-1.31855,-0.0868056,0.260417,-1.14494,-0.0520833,0.260417,-1.31855,-0.0520833,0.0868059,-1.31855,-0.0173611,0.0868059,-1.31855,-0.0520833,0.260417,-1.31855,-0.0173611,0.260417,-1.14493,-0.121528,0.434028,-1.14493,-0.0868056,0.434028,-1.14493,-0.121528,0.607639,-1.14493,-0.0868055,0.607639,-1.14493,-0.0520833,0.434028,-1.14493,-0.0173611,0.434028,-1.14493,-0.0520833,0.607639,-1.14493,-0.0173611,0.607639,-1.31855,-0.0520833,0.434028,-1.31855,-0.0173611,0.434028,-1.14493,-0.0520833,0.78125,-1.14493,-0.0173611,0.78125,0.0703429,0.190972,0.260417,0.0703429,0.225694,0.260417,0.0703429,0.260417,0.260417,0.243954,0.190972,0.434028,0.243954,0.190972,0.607639,0.070343,0.190972,0.434028,0.070343,0.190972,0.607639,0.243954,0.225694,0.434028,0.243954,0.260417,0.434028,0.070343,0.225694,0.434028,0.070343,0.260417,0.434028,-0.103268,0.190972,0.0868057,-0.103268,0.190972,0.260417,-0.276879,0.190972,0.0868057,-0.276879,0.190972,0.260417,-0.103268,0.225694,0.0868057,-0.103268,0.260417,0.0868057,-0.103268,0.225694,0.260417,-0.103268,0.260417,0.260417,-0.103268,0.190972,0.434028,-0.103268,0.190972,0.607639,-0.276879,0.190972,0.434028,-0.276879,0.190972,0.607639,0.243954,0.0173612,1.12847,0.243954,0.0520834,1.12847,0.243954,0.0173612,1.30208,0.243954,0.0520834,1.30208,0.0703431,0.0520834,1.12847,0.0703431,0.0173612,1.30208,0.0703431,0.0520834,1.30208,0.243954,0.0868056,1.12847,0.243954,0.121528,1.12847,0.0703431,0.0868056,1.12847,0.0703431,0.121528,1.12847,0.0703431,0.0868056,1.30208,0.0703431,0.121528,1.30208,-0.103268,0.0173612,1.30208,-0.103268,0.0520834,1.30208,-0.276879,0.0173612,1.12847,-0.276879,0.0520834,1.12847,-0.276879,0.0173612,1.30208,-0.276879,0.0520834,1.30208,-0.103268,0.0868056,1.12847,-0.103268,0.121528,1.12847,-0.103268,0.0868056,1.30208,-0.103268,0.121528,1.30208,-0.276879,0.0868056,1.12847,-0.276879,0.121528,1.12847,-0.276879,0.0868056,1.30208,0.243954,0.190972,0.78125,0.070343,0.190972,0.78125,0.243954,0.225694,0.78125,0.243954,0.225694,0.954861,0.070343,0.225694,0.78125,0.070343,0.225694,0.954861,0.243954,0.15625,1.12847,0.243954,0.190972,1.12847,0.0703431,0.15625,1.12847,0.0703431,0.190972,1.12847,0.243954,0.225694,1.12847,0.0703431,0.225694,1.12847,-0.103268,0.190972,0.78125,-0.276879,0.190972,0.78125,-0.103268,0.225694,0.78125,-0.103268,0.225694,0.954861,-0.276879,0.225694,0.78125,-0.276879,0.225694,0.954861,-0.103268,0.15625,1.12847,-0.103268,0.190972,1.12847,-0.276879,0.15625,1.12847,-0.276879,0.190972,1.12847,-0.103268,0.225694,1.12847,-0.276879,0.225694,1.12847,-0.971324,0.0520834,0.607639,-0.971324,0.0868056,0.607639,-0.971324,0.121528,0.607639,-0.45049,0.190972,0.0868057,-0.45049,0.190972,0.260417,-0.624102,0.190972,0.0868058,-0.624102,0.190972,0.260417,-0.45049,0.190972,0.434028,-0.45049,0.190972,0.607639,-0.624101,0.190972,0.434028,-0.624101,0.190972,0.607639,-0.624101,0.225694,0.607639,-0.797713,0.190972,0.0868058,-0.797713,0.190972,0.260417,-0.971324,0.190972,0.0868058,-0.971324,0.190972,0.260417,-0.797713,0.225694,0.260417,-0.971324,0.225694,0.0868058,-0.971324,0.260417,0.0868058,-0.971324,0.225694,0.260417,-0.797713,0.190972,0.434028,-0.797713,0.190972,0.607639,-0.971324,0.190972,0.434028,-0.971324,0.15625,0.607639,-0.971324,0.190972,0.607639,-0.797713,0.225694,0.434028,-0.797713,0.260417,0.434028,-0.797713,0.225694,0.607639,-0.797713,0.260417,0.607639,-0.971324,0.225694,0.434028,-0.971324,0.260417,0.434028,-0.971324,0.225694,0.607639,-0.971324,0.260417,0.607639,-0.624101,0.0520834,0.954861,-0.624101,0.0868056,0.954861,-0.624101,0.121528,0.954861,-0.45049,0.0173612,1.12847,-0.45049,0.0520834,1.12847,-0.624101,0.0173612,1.12847,-0.624101,0.0520834,1.12847,-0.45049,0.0868056,1.12847,-0.45049,0.121528,1.12847,-0.624101,0.0868056,1.12847,-0.624101,0.121528,1.12847,-0.797713,0.0173612,0.954861,-0.797713,0.0520834,0.954861,-0.971324,0.0173611,0.78125,-0.971324,0.0520834,0.78125,-0.971324,0.0173612,0.954861,-0.971324,0.0520834,0.954861,-0.797713,0.121528,0.78125,-0.797713,0.0868056,0.954861,-0.797713,0.121528,0.954861,-0.971324,0.0868056,0.78125,-0.971324,0.121528,0.78125,-0.971324,0.0868056,0.954861,-0.971324,0.121528,0.954861,-0.797713,0.0173612,1.12847,-0.797713,0.0520834,1.12847,-0.45049,0.190972,0.78125,-0.45049,0.190972,0.954861,-0.624101,0.190972,0.78125,-0.624101,0.15625,0.954861,-0.624101,0.190972,0.954861,-0.45049,0.225694,0.78125,-0.45049,0.260417,0.78125,-0.45049,0.225694,0.954861,-0.45049,0.260417,0.954861,-0.624101,0.225694,0.78125,-0.624101,0.260417,0.78125,-0.624101,0.225694,0.954861,-0.624101,0.260417,0.954861,-0.45049,0.15625,1.12847,-0.45049,0.190972,1.12847,-0.624101,0.15625,1.12847,-0.624101,0.190972,1.12847,-0.45049,0.225694,1.12847,-0.797713,0.15625,0.78125,-0.797713,0.190972,0.78125,-0.797713,0.15625,0.954861,-0.797713,0.190972,0.954861,-0.971324,0.15625,0.78125,-0.971324,0.190972,0.78125,-0.797713,0.225694,0.78125,-0.797713,0.225694,0.954861,-0.971324,0.225694,0.78125,0.243954,0.295139,0.260417,0.243954,0.329861,0.260417,0.0703429,0.329861,0.0868056,0.0703429,0.295139,0.260417,0.0703429,0.329861,0.260417,0.243954,0.364583,0.260417,0.243954,0.399306,0.260417,0.0703429,0.364583,0.0868056,0.0703429,0.399306,0.0868056,0.0703429,0.364583,0.260417,0.0703429,0.399306,0.260417,0.243954,0.295139,0.434028,0.243954,0.329861,0.434028,0.070343,0.295139,0.434028,0.243954,0.364583,0.434028,-0.103268,0.295139,0.0868057,-0.103268,0.329861,0.0868057,-0.103268,0.295139,0.260417,-0.103268,0.329861,0.260417,-0.103268,0.364583,0.0868057,0.243954,0.46875,0.0868056,0.243954,0.434028,0.260417,0.243954,0.46875,0.260417,0.0703429,0.434028,0.0868056,0.0703429,0.46875,0.0868056,0.0703429,0.434028,0.260417,0.0703429,0.46875,0.260417,0.243954,0.503472,0.0868056,0.243954,0.503472,0.260417,-1.14494,0.0520834,0.260417,-1.31855,0.0173611,0.0868059,-1.31855,0.0520834,0.0868059,-1.31855,0.0173611,0.260417,-1.31855,0.0520834,0.260417,-1.14494,0.0868056,0.260417,-1.14494,0.121528,0.260417,-1.31855,0.0868056,0.0868059,-1.31855,0.121528,0.0868059,-1.31855,0.0868056,0.260417,-1.31855,0.121528,0.260417,-1.14493,0.0173611,0.434028,-1.14493,0.0520834,0.434028,-1.14493,0.0173611,0.607639,-1.14493,0.0520834,0.607639,-1.31855,0.0173611,0.434028,-1.31855,0.0520834,0.434028,-1.14493,0.0868056,0.434028,-1.14493,0.121528,0.434028,-1.14493,0.0868056,0.607639,-1.14493,0.121528,0.607639,-1.14494,0.15625,0.0868058,-1.14494,0.190972,0.0868058,-1.14494,0.15625,0.260417,-1.14494,0.190972,0.260417,-1.31855,0.15625,0.0868059,-1.31855,0.15625,0.260417,-1.14494,0.225694,0.0868058,-1.14494,0.260417,0.0868058,-1.14494,0.225694,0.260417,-1.14493,0.15625,0.434028,-1.14493,0.190972,0.434028,-1.14493,0.15625,0.607639,-1.14493,0.190972,0.607639,-1.14493,0.225694,0.434028,-1.14493,0.0173611,0.78125,-1.14493,0.0520834,0.78125],\n    "faces":[35,0,1,3,2,0,0,0,0,0,35,4,5,7,6,0,1,1,1,1,35,4,8,9,5,0,2,2,2,2,35,0,4,6,1,0,1,1,1,1,35,0,2,8,4,0,3,3,3,3,35,12,14,15,13,0,2,2,2,2,35,16,17,19,18,0,1,1,1,1,35,16,20,21,17,0,2,2,2,2,35,22,23,25,24,0,1,1,1,1,35,10,17,21,11,0,4,4,4,4,35,12,13,23,22,0,1,1,1,1,35,10,11,14,12,0,5,5,5,5,35,17,22,24,19,0,1,1,1,1,35,10,12,22,17,0,6,6,6,6,35,5,16,18,7,0,6,6,6,6,35,5,9,20,16,0,2,2,2,2,35,26,28,29,27,0,2,2,2,2,35,30,32,33,31,0,3,3,3,3,35,34,35,37,36,0,6,6,6,6,35,37,39,38,36,0,7,7,7,7,35,41,44,43,40,0,8,8,8,8,35,43,45,42,40,0,9,9,9,9,35,26,27,35,34,0,1,1,1,1,35,30,31,41,40,0,6,6,6,6,35,27,29,32,30,0,2,2,2,2,35,35,40,42,37,0,1,1,1,1,35,42,45,39,37,0,10,10,10,10,35,27,30,40,35,0,1,1,1,1,35,46,48,49,47,0,2,2,2,2,35,50,52,53,51,0,2,2,2,2,35,55,57,56,54,0,11,11,11,11,35,59,61,60,58,0,11,11,11,11,35,46,47,55,54,0,1,1,1,1,35,50,51,59,58,0,1,1,1,1,35,47,49,52,50,0,2,2,2,2,35,58,60,57,55,0,11,11,11,11,35,47,50,58,55,0,1,1,1,1,35,31,33,48,46,0,2,2,2,2,35,54,56,44,41,0,11,11,11,11,35,31,46,54,41,0,1,1,1,1,35,62,63,65,64,0,12,12,12,12,35,66,68,69,67,0,13,13,13,13,35,70,71,73,72,0,12,12,12,12,35,74,76,77,75,0,2,2,2,2,35,64,65,71,70,0,12,12,12,12,35,68,74,75,69,0,3,3,3,3,35,62,64,68,66,0,14,14,14,14,35,70,72,76,74,0,3,3,3,3,35,64,70,74,68,0,2,2,2,2,35,80,82,83,81,0,13,13,13,13,35,84,86,87,85,0,13,13,13,13,35,90,92,93,91,0,2,2,2,2,35,94,96,97,95,0,2,2,2,2,35,82,90,91,83,0,2,2,2,2,35,86,94,95,87,0,2,2,2,2,35,78,85,87,79,0,15,15,15,15,35,88,95,97,89,0,4,4,4,4,35,78,79,82,80,0,16,16,16,16,35,88,89,92,90,0,5,5,5,5,35,79,88,90,82,0,17,17,17,17,35,79,87,95,88,0,4,4,4,4,35,98,99,101,100,0,12,12,12,12,35,102,104,105,103,0,13,13,13,13,35,106,107,109,108,0,0,0,0,0,35,110,112,113,111,0,3,3,3,3,35,100,101,107,106,0,12,12,12,12,35,104,110,111,105,0,2,2,2,2,35,98,100,104,102,0,14,14,14,14,35,106,108,112,110,0,2,2,2,2,35,100,106,110,104,0,3,3,3,3,35,116,118,119,117,0,13,13,13,13,35,120,122,123,121,0,13,13,13,13,35,126,128,129,127,0,2,2,2,2,35,130,132,133,131,0,2,2,2,2,35,118,126,127,119,0,2,2,2,2,35,122,130,131,123,0,2,2,2,2,35,114,121,123,115,0,15,15,15,15,35,124,131,133,125,0,18,18,18,18,35,114,115,118,116,0,16,16,16,16,35,124,125,128,126,0,5,5,5,5,35,115,124,126,118,0,5,5,5,5,35,115,123,131,124,0,4,4,4,4,35,72,73,99,98,0,12,12,12,12,35,76,102,103,77,0,19,19,19,19,35,72,98,102,76,0,20,20,20,20,35,92,116,117,93,0,21,21,21,21,35,96,120,121,97,0,22,22,22,22,35,89,114,116,92,0,23,23,23,23,35,89,97,121,114,0,24,24,24,24,35,67,69,86,84,0,13,13,13,13,35,75,77,96,94,0,2,2,2,2,35,69,75,94,86,0,2,2,2,2,35,103,105,122,120,0,13,13,13,13,35,111,113,132,130,0,2,2,2,2,35,105,111,130,122,0,2,2,2,2,35,77,103,120,96,0,19,19,19,19,35,134,136,137,135,0,13,13,13,13,35,138,140,141,139,0,25,25,25,25,35,143,145,144,142,0,26,26,26,26,35,147,150,149,146,0,27,27,27,27,35,149,151,148,146,0,28,28,28,28,35,152,154,155,153,0,2,2,2,2,35,156,159,160,157,0,3,3,3,3,35,162,164,163,161,0,29,29,29,29,35,166,169,168,165,0,8,8,8,8,35,168,170,167,165,0,30,30,30,30,35,136,152,153,137,0,2,2,2,2,35,140,156,157,141,0,2,2,2,2,35,145,162,161,144,0,31,31,31,31,35,150,166,165,149,0,11,11,11,11,35,165,167,151,149,0,32,32,32,32,35,135,137,140,138,0,13,13,13,13,35,148,151,145,143,0,33,33,33,33,35,153,155,159,156,0,2,2,2,2,35,167,170,164,162,0,34,34,34,34,35,137,153,156,140,0,2,2,2,2,35,151,167,162,145,0,35,35,35,35,35,171,173,174,172,0,13,13,13,13,35,175,177,178,176,0,13,13,13,13,35,180,182,181,179,0,36,36,36,36,35,184,186,185,183,0,36,36,36,36,35,189,190,192,191,0,1,1,1,1,35,187,191,192,188,0,2,2,2,2,35,195,196,198,197,0,1,1,1,1,35,193,197,198,194,0,2,2,2,2,35,200,202,201,199,0,11,11,11,11,35,204,206,205,203,0,11,11,11,11,35,173,187,188,174,0,3,3,3,3,35,177,193,194,178,0,3,3,3,3,35,182,200,199,181,0,8,8,8,8,35,186,204,203,185,0,8,8,8,8,35,172,174,177,175,0,13,13,13,13,35,183,185,182,180,0,36,36,36,36,35,190,195,197,192,0,1,1,1,1,35,188,192,197,193,0,2,2,2,2,35,203,205,202,200,0,11,11,11,11,35,174,188,193,177,0,3,3,3,3,35,185,203,200,182,0,8,8,8,8,35,212,213,215,214,0,1,1,1,1,35,210,214,215,211,0,3,3,3,3,35,220,222,224,223,0,37,37,37,37,35,225,227,228,226,0,3,3,3,3,35,208,221,222,209,0,3,3,3,3,35,207,209,222,220,0,37,37,37,37,35,212,225,226,213,0,3,3,3,3,35,218,219,228,227,0,38,38,38,38,35,217,226,228,219,0,12,12,12,12,35,207,212,214,209,0,1,1,1,1,35,220,223,227,225,0,2,2,2,2,35,216,218,227,223,0,39,39,39,39,35,207,220,225,212,0,2,2,2,2,35,232,233,235,234,0,1,1,1,1,35,230,234,235,231,0,2,2,2,2,35,239,240,242,241,0,1,1,1,1,35,237,241,242,238,0,2,2,2,2,35,236,238,242,240,0,40,40,40,40,35,243,245,246,244,0,2,2,2,2,35,247,249,250,248,0,2,2,2,2,35,232,251,252,233,0,2,2,2,2,35,239,253,254,240,0,2,2,2,2,35,243,244,252,251,0,41,41,41,41,35,247,248,254,253,0,41,41,41,41,35,233,239,241,235,0,1,1,1,1,35,231,235,241,237,0,2,2,2,2,35,244,246,249,247,0,2,2,2,2,35,244,247,253,252,0,41,41,41,41,35,233,252,253,239,0,2,2,2,2,35,256,260,261,257,0,13,13,13,13,35,255,257,261,259,0,42,42,42,42,35,262,263,265,264,0,43,43,43,43,35,269,270,272,271,0,1,1,1,1,35,275,278,279,276,0,2,2,2,2,35,280,281,283,282,0,37,37,37,37,35,259,274,273,258,0,8,8,8,8,35,260,275,276,261,0,2,2,2,2,35,259,261,276,274,0,37,37,37,37,35,255,262,264,257,0,44,44,44,44,35,255,259,266,262,0,2,2,2,2,35,276,281,280,274,0,45,45,45,45,35,280,282,277,274,0,11,11,11,11,35,276,279,283,281,0,2,2,2,2,35,288,289,291,290,0,1,1,1,1,35,292,293,295,294,0,1,1,1,1,35,289,292,294,291,0,1,1,1,1,35,154,256,257,155,0,46,46,46,46,35,159,264,265,160,0,46,46,46,46,35,158,160,265,263,0,47,47,47,47,35,164,268,267,163,0,31,31,31,31,35,169,270,269,168,0,48,48,48,48,35,269,271,170,168,0,49,49,49,49,35,155,257,264,159,0,21,21,21,21,35,170,271,268,164,0,35,35,35,35,35,189,284,285,190,0,50,50,50,50,35,195,286,287,196,0,50,50,50,50,35,202,289,288,201,0,51,51,51,51,35,206,293,292,205,0,51,51,51,51,35,190,285,286,195,0,50,50,50,50,35,205,292,289,202,0,51,51,51,51,35,208,209,259,258,0,1,1,1,1,35,273,274,222,221,0,52,52,52,52,35,222,274,277,224,0,12,12,12,12,35,210,211,263,262,0,1,1,1,1,35,210,262,266,214,0,12,12,12,12,35,209,214,266,259,0,1,1,1,1,35,277,282,229,224,0,52,52,52,52,35,208,258,273,221,0,12,12,12,12,35,230,231,285,284,0,6,6,6,6,35,237,238,287,286,0,6,6,6,6,35,231,237,286,285,0,6,6,6,6,35,139,141,173,171,0,13,13,13,13,35,179,181,150,147,0,36,36,36,36,35,158,189,191,160,0,1,1,1,1,35,157,160,191,187,0,2,2,2,2,35,199,201,169,166,0,11,11,11,11,35,141,157,187,173,0,2,2,2,2,35,181,199,166,150,0,11,11,11,11,35,213,232,234,215,0,1,1,1,1,35,211,215,234,230,0,2,2,2,2,35,217,219,245,243,0,2,2,2,2,35,217,243,251,226,0,39,39,39,39,35,213,226,251,232,0,2,2,2,2,35,270,288,290,272,0,1,1,1,1,35,211,230,284,263,0,1,1,1,1,35,158,263,284,189,0,53,53,53,53,35,201,288,270,169,0,51,51,51,51,35,2,3,63,62,0,0,0,0,0,35,8,66,67,9,0,13,13,13,13,35,2,62,66,8,0,14,14,14,14,35,14,80,81,15,0,13,13,13,13,35,20,84,85,21,0,13,13,13,13,35,11,78,80,14,0,16,16,16,16,35,11,21,85,78,0,15,15,15,15,35,9,67,84,20,0,13,13,13,13,35,28,134,135,29,0,13,13,13,13,35,32,138,139,33,0,25,25,25,25,35,39,143,142,38,0,7,7,7,7,35,44,147,146,43,0,27,27,27,27,35,146,148,45,43,0,54,54,54,54,35,29,135,138,32,0,13,13,13,13,35,45,148,143,39,0,10,10,10,10,35,48,171,172,49,0,13,13,13,13,35,52,175,176,53,0,13,13,13,13,35,57,180,179,56,0,36,36,36,36,35,61,184,183,60,0,36,36,36,36,35,49,172,175,52,0,13,13,13,13,35,60,183,180,57,0,36,36,36,36,35,33,139,171,48,0,13,13,13,13,35,56,179,147,44,0,36,36,36,36,35,13,15,28,26,0,3,3,3,3,35,23,34,36,25,0,1,1,1,1,35,13,26,34,23,0,6,6,6,6,35,81,83,136,134,0,14,14,14,14,35,91,93,154,152,0,3,3,3,3,35,83,91,152,136,0,2,2,2,2,35,117,119,260,256,0,14,14,14,14,35,127,129,278,275,0,3,3,3,3,35,119,127,275,260,0,3,3,3,3,35,93,117,256,154,0,46,46,46,46,35,15,81,134,28,0,14,14,14,14,35,296,298,299,297,0,2,2,2,2,35,300,302,303,301,0,2,2,2,2,35,305,307,306,304,0,11,11,11,11,35,309,311,310,308,0,11,11,11,11,35,296,297,305,304,0,1,1,1,1,35,300,301,309,308,0,1,1,1,1,35,297,299,302,300,0,3,3,3,3,35,308,310,307,305,0,8,8,8,8,35,297,300,308,305,0,1,1,1,1,35,312,314,315,313,0,3,3,3,3,35,316,318,319,317,0,3,3,3,3,35,321,324,323,320,0,8,8,8,8,35,321,322,325,324,0,55,55,55,55,35,326,327,329,328,0,1,1,1,1,35,329,331,330,328,0,7,7,7,7,35,312,313,321,320,0,6,6,6,6,35,316,317,327,326,0,1,1,1,1,35,313,315,318,316,0,3,3,3,3,35,321,326,328,322,0,1,1,1,1,35,328,330,325,322,0,56,56,56,56,35,313,316,326,321,0,6,6,6,6,35,301,303,314,312,0,2,2,2,2,35,320,323,311,309,0,11,11,11,11,35,301,312,320,309,0,1,1,1,1,35,332,334,335,333,0,2,2,2,2,35,338,339,341,340,0,1,1,1,1,35,342,343,345,344,0,1,1,1,1,35,342,346,347,343,0,3,3,3,3,35,332,333,339,338,0,1,1,1,1,35,337,346,342,336,0,57,57,57,57,35,333,335,337,336,0,5,5,5,5,35,339,342,344,341,0,1,1,1,1,35,333,336,342,339,0,6,6,6,6,35,348,349,351,350,0,1,1,1,1,35,348,352,353,349,0,2,2,2,2,35,356,357,355,354,0,58,58,58,58,35,349,354,355,351,0,1,1,1,1,35,349,353,356,354,0,2,2,2,2,35,343,348,350,345,0,1,1,1,1,35,343,347,352,348,0,3,3,3,3,35,358,360,361,359,0,13,13,13,13,35,362,364,365,363,0,13,13,13,13,35,367,369,368,366,0,36,36,36,36,35,371,373,372,370,0,36,36,36,36,35,376,377,379,378,0,1,1,1,1,35,374,378,379,375,0,2,2,2,2,35,382,383,385,384,0,1,1,1,1,35,380,384,385,381,0,2,2,2,2,35,387,389,388,386,0,11,11,11,11,35,391,393,392,390,0,11,11,11,11,35,360,374,375,361,0,3,3,3,3,35,364,380,381,365,0,3,3,3,3,35,369,387,386,368,0,8,8,8,8,35,373,391,390,372,0,8,8,8,8,35,359,361,364,362,0,25,25,25,25,35,370,372,369,367,0,27,27,27,27,35,377,382,384,379,0,1,1,1,1,35,375,379,384,380,0,3,3,3,3,35,390,392,389,387,0,8,8,8,8,35,361,375,380,364,0,2,2,2,2,35,372,390,387,369,0,11,11,11,11,35,394,396,397,395,0,14,14,14,14,35,398,400,401,399,0,25,25,25,25,35,403,406,405,402,0,59,59,59,59,35,403,404,407,406,0,60,60,60,60,35,409,411,410,408,0,26,26,26,26,35,412,415,416,413,0,3,3,3,3,35,417,419,420,418,0,3,3,3,3,35,422,425,424,421,0,8,8,8,8,35,422,423,426,425,0,61,61,61,61,35,428,430,429,427,0,29,29,29,29,35,396,412,413,397,0,2,2,2,2,35,400,417,418,401,0,2,2,2,2,35,406,422,421,405,0,11,11,11,11,35,406,407,423,422,0,62,62,62,62,35,411,428,427,410,0,31,31,31,31,35,395,397,400,398,0,25,25,25,25,35,408,410,407,404,0,63,63,63,63,35,413,416,419,417,0,3,3,3,3,35,427,429,426,423,0,64,64,64,64,35,397,413,417,400,0,2,2,2,2,35,410,427,423,407,0,65,65,65,65,35,434,435,437,436,0,1,1,1,1,35,432,436,437,433,0,2,2,2,2,35,434,436,432,431,0,66,66,66,66,35,440,441,443,442,0,1,1,1,1,35,438,442,443,439,0,2,2,2,2,35,444,446,447,445,0,2,2,2,2,35,448,450,451,449,0,2,2,2,2,35,434,452,453,435,0,2,2,2,2,35,440,454,455,441,0,2,2,2,2,35,444,445,453,452,0,41,41,41,41,35,448,449,455,454,0,41,41,41,41,35,435,440,442,437,0,1,1,1,1,35,433,437,442,438,0,3,3,3,3,35,445,447,450,448,0,3,3,3,3,35,445,448,454,453,0,38,38,38,38,35,435,453,454,440,0,3,3,3,3,35,458,459,461,460,0,1,1,1,1,35,456,460,461,457,0,3,3,3,3,35,469,471,472,470,0,3,3,3,3,35,477,478,475,474,0,67,67,67,67,35,458,469,470,459,0,3,3,3,3,35,463,475,476,464,0,3,3,3,3,35,474,475,463,462,0,67,67,67,67,35,466,467,472,471,0,39,39,39,39,35,466,471,469,465,0,68,68,68,68,35,459,462,463,461,0,1,1,1,1,35,470,472,477,474,0,3,3,3,3,35,467,468,477,472,0,38,38,38,38,35,459,470,474,462,0,3,3,3,3,35,483,484,486,485,0,1,1,1,1,35,487,488,490,489,0,1,1,1,1,35,484,487,489,486,0,1,1,1,1,35,491,492,494,493,0,43,43,43,43,35,497,501,502,498,0,25,25,25,25,35,499,501,497,496,0,69,69,69,69,35,503,504,506,505,0,1,1,1,1,35,511,512,510,509,0,67,67,67,67,35,515,518,519,516,0,3,3,3,3,35,500,514,513,499,0,8,8,8,8,35,501,515,516,502,0,3,3,3,3,35,513,515,501,499,0,67,67,67,67,35,492,496,497,494,0,43,43,43,43,35,492,495,499,496,0,3,3,3,3,35,510,515,513,509,0,45,45,45,45,35,513,517,511,509,0,8,8,8,8,35,510,512,518,515,0,3,3,3,3,35,376,479,480,377,0,50,50,50,50,35,382,481,482,383,0,50,50,50,50,35,389,484,483,388,0,51,51,51,51,35,393,488,487,392,0,51,51,51,51,35,377,480,481,382,0,70,70,70,70,35,392,487,484,389,0,48,48,48,48,35,415,493,494,416,0,46,46,46,46,35,491,493,415,414,0,71,71,71,71,35,419,497,498,420,0,46,46,46,46,35,425,504,503,424,0,72,72,72,72,35,425,426,506,504,0,73,73,73,73,35,430,508,507,429,0,31,31,31,31,35,416,494,497,419,0,46,46,46,46,35,429,507,506,426,0,65,65,65,65,35,432,433,480,479,0,6,6,6,6,35,438,439,482,481,0,6,6,6,6,35,433,438,481,480,0,1,1,1,1,35,456,457,492,491,0,1,1,1,1,35,461,495,492,457,0,68,68,68,68,35,463,464,500,499,0,1,1,1,1,35,513,514,476,475,0,52,52,52,52,35,478,517,513,475,0,68,68,68,68,35,461,463,499,495,0,1,1,1,1,35,511,517,478,473,0,52,52,52,52,35,476,514,500,464,0,68,68,68,68,35,363,365,396,394,0,13,13,13,13,35,402,405,373,371,0,36,36,36,36,35,383,414,415,385,0,1,1,1,1,35,381,385,415,412,0,2,2,2,2,35,421,424,393,391,0,11,11,11,11,35,365,381,412,396,0,2,2,2,2,35,405,421,391,373,0,8,8,8,8,35,441,458,460,443,0,1,1,1,1,35,439,443,460,456,0,2,2,2,2,35,449,451,466,465,0,2,2,2,2,35,449,465,469,455,0,39,39,39,39,35,441,455,469,458,0,2,2,2,2,35,488,503,505,490,0,1,1,1,1,35,439,456,491,482,0,1,1,1,1,35,383,482,491,414,0,74,74,74,74,35,424,503,488,393,0,48,48,48,48,35,520,522,523,521,0,13,13,13,13,35,526,528,529,527,0,14,14,14,14,35,530,532,533,531,0,2,2,2,2,35,536,538,539,537,0,3,3,3,3,35,522,530,531,523,0,2,2,2,2,35,528,536,537,529,0,2,2,2,2,35,525,528,526,524,0,75,75,75,75,35,535,538,536,534,0,57,57,57,57,35,521,523,525,524,0,16,16,16,16,35,531,533,535,534,0,5,5,5,5,35,523,531,534,525,0,17,17,17,17,35,534,536,528,525,0,57,57,57,57,35,540,542,543,541,0,13,13,13,13,35,546,547,545,544,0,68,68,68,68,35,548,550,551,549,0,2,2,2,2,35,554,555,553,552,0,68,68,68,68,35,542,548,549,543,0,2,2,2,2,35,552,553,547,546,0,68,68,68,68,35,541,543,546,544,0,13,13,13,13,35,549,551,554,552,0,2,2,2,2,35,543,549,552,546,0,2,2,2,2,35,556,558,559,557,0,13,13,13,13,35,562,564,565,563,0,14,14,14,14,35,566,568,569,567,0,2,2,2,2,35,572,574,575,573,0,2,2,2,2,35,558,566,567,559,0,2,2,2,2,35,564,572,573,565,0,3,3,3,3,35,561,564,562,560,0,75,75,75,75,35,571,574,572,570,0,76,76,76,76,35,557,559,561,560,0,16,16,16,16,35,567,569,571,570,0,5,5,5,5,35,559,567,570,561,0,5,5,5,5,35,570,572,564,561,0,57,57,57,57,35,576,578,579,577,0,13,13,13,13,35,582,583,581,580,0,68,68,68,68,35,584,586,587,585,0,2,2,2,2,35,590,591,589,588,0,58,58,58,58,35,578,584,585,579,0,2,2,2,2,35,588,589,583,582,0,68,68,68,68,35,577,579,582,580,0,13,13,13,13,35,585,587,590,588,0,2,2,2,2,35,579,585,588,582,0,2,2,2,2,35,532,556,557,533,0,21,21,21,21,35,538,562,563,539,0,20,20,20,20,35,533,557,560,535,0,23,23,23,23,35,560,562,538,535,0,77,77,77,77,35,550,576,577,551,0,22,22,22,22,35,580,581,555,554,0,68,68,68,68,35,551,577,580,554,0,22,22,22,22,35,527,529,542,540,0,14,14,14,14,35,537,539,550,548,0,3,3,3,3,35,529,537,548,542,0,2,2,2,2,35,563,565,578,576,0,14,14,14,14,35,573,575,586,584,0,2,2,2,2,35,565,573,584,578,0,3,3,3,3,35,539,563,576,550,0,20,20,20,20,35,298,358,359,299,0,13,13,13,13,35,302,362,363,303,0,13,13,13,13,35,307,367,366,306,0,36,36,36,36,35,311,371,370,310,0,36,36,36,36,35,299,359,362,302,0,25,25,25,25,35,310,370,367,307,0,27,27,27,27,35,314,394,395,315,0,14,14,14,14,35,318,398,399,319,0,25,25,25,25,35,324,403,402,323,0,59,59,59,59,35,324,325,404,403,0,78,78,78,78,35,331,409,408,330,0,7,7,7,7,35,315,395,398,318,0,25,25,25,25,35,330,408,404,325,0,56,56,56,56,35,303,363,394,314,0,13,13,13,13,35,323,402,371,311,0,36,36,36,36,35,334,520,521,335,0,13,13,13,13,35,346,526,527,347,0,14,14,14,14,35,335,521,524,337,0,16,16,16,16,35,524,526,346,337,0,75,75,75,75,35,352,540,541,353,0,13,13,13,13,35,544,545,357,356,0,58,58,58,58,35,353,541,544,356,0,13,13,13,13,35,347,527,540,352,0,14,14,14,14,35,317,319,334,332,0,3,3,3,3,35,327,338,340,329,0,6,6,6,6,35,317,332,338,327,0,6,6,6,6,35,399,401,522,520,0,14,14,14,14,35,418,420,532,530,0,3,3,3,3,35,401,418,530,522,0,2,2,2,2,35,498,502,558,556,0,14,14,14,14,35,516,519,568,566,0,3,3,3,3,35,502,516,566,558,0,3,3,3,3,35,420,498,556,532,0,46,46,46,46,35,319,399,520,334,0,14,14,14,14,35,592,593,595,594,0,12,12,12,12,35,596,597,599,598,0,6,6,6,6,35,599,601,600,598,0,11,11,11,11,35,592,596,598,593,0,1,1,1,1,35,598,600,595,593,0,8,8,8,8,35,602,603,605,604,0,6,6,6,6,35,605,607,606,604,0,11,11,11,11,35,608,609,611,610,0,1,1,1,1,35,615,617,616,614,0,11,11,11,11,35,605,612,613,607,0,4,4,4,4,35,610,611,615,614,0,79,79,79,79,35,603,608,610,605,0,1,1,1,1,35,614,616,613,612,0,80,80,80,80,35,605,610,614,612,0,81,81,81,81,35,597,602,604,599,0,1,1,1,1,35,604,606,601,599,0,11,11,11,11,35,618,619,621,620,0,6,6,6,6,35,618,622,623,619,0,82,82,82,82,35,625,628,629,626,0,3,3,3,3,35,627,628,625,624,0,83,83,83,83,35,631,633,632,630,0,8,8,8,8,35,635,637,636,634,0,8,8,8,8,35,620,621,631,630,0,79,79,79,79,35,625,626,635,634,0,84,84,84,84,35,619,624,625,621,0,1,1,1,1,35,619,623,627,624,0,85,85,85,85,35,634,636,633,631,0,11,11,11,11,35,621,625,634,631,0,79,79,79,79,35,638,640,641,639,0,2,2,2,2,35,642,644,645,643,0,2,2,2,2,35,647,649,648,646,0,11,11,11,11,35,651,653,652,650,0,11,11,11,11,35,638,639,647,646,0,79,79,79,79,35,642,643,651,650,0,79,79,79,79,35,639,641,644,642,0,3,3,3,3,35,650,652,649,647,0,8,8,8,8,35,639,642,650,647,0,79,79,79,79,35,626,629,640,638,0,2,2,2,2,35,646,648,637,635,0,11,11,11,11,35,626,638,646,635,0,86,86,86,86,35,654,655,657,656,0,12,12,12,12,35,659,661,660,658,0,48,48,48,48,35,662,663,665,664,0,12,12,12,12,35,667,669,668,666,0,11,11,11,11,35,656,657,663,662,0,12,12,12,12,35,661,667,666,660,0,8,8,8,8,35,658,660,657,655,0,72,72,72,72,35,666,668,665,663,0,8,8,8,8,35,660,666,663,657,0,11,11,11,11,35,671,673,672,670,0,51,51,51,51,35,677,679,678,676,0,36,36,36,36,35,681,683,682,680,0,11,11,11,11,35,687,689,688,686,0,11,11,11,11,35,673,681,680,672,0,11,11,11,11,35,679,687,686,678,0,11,11,11,11,35,671,674,675,673,0,87,87,87,87,35,681,684,685,683,0,4,4,4,4,35,676,678,675,674,0,88,88,88,88,35,686,688,685,684,0,80,80,80,80,35,678,686,684,675,0,89,89,89,89,35,673,675,684,681,0,4,4,4,4,35,690,691,693,692,0,12,12,12,12,35,695,697,696,694,0,36,36,36,36,35,698,699,701,700,0,12,12,12,12,35,703,705,704,702,0,11,11,11,11,35,692,693,699,698,0,12,12,12,12,35,697,703,702,696,0,11,11,11,11,35,694,696,693,691,0,59,59,59,59,35,702,704,701,699,0,11,11,11,11,35,696,702,699,693,0,8,8,8,8,35,707,709,708,706,0,36,36,36,36,35,713,715,714,712,0,36,36,36,36,35,717,719,718,716,0,11,11,11,11,35,723,725,724,722,0,11,11,11,11,35,709,717,716,708,0,11,11,11,11,35,715,723,722,714,0,11,11,11,11,35,707,710,711,709,0,15,15,15,15,35,717,720,721,719,0,18,18,18,18,35,712,714,711,710,0,88,88,88,88,35,722,724,721,720,0,80,80,80,80,35,714,722,720,711,0,80,80,80,80,35,709,711,720,717,0,4,4,4,4,35,664,665,691,690,0,12,12,12,12,35,669,695,694,668,0,36,36,36,36,35,668,694,691,665,0,59,59,59,59,35,683,707,706,682,0,36,36,36,36,35,689,713,712,688,0,90,90,90,90,35,688,712,710,685,0,91,91,91,91,35,683,685,710,707,0,92,92,92,92,35,670,672,661,659,0,48,48,48,48,35,680,682,669,667,0,11,11,11,11,35,672,680,667,661,0,11,11,11,11,35,706,708,697,695,0,36,36,36,36,35,716,718,705,703,0,8,8,8,8,35,708,716,703,697,0,11,11,11,11,35,682,706,695,669,0,36,36,36,36,35,726,728,729,727,0,93,93,93,93,35,731,734,735,732,0,19,19,19,19,35,733,734,731,730,0,94,94,94,94,35,737,739,738,736,0,27,27,27,27,35,741,743,742,740,0,27,27,27,27,35,744,746,747,745,0,95,95,95,95,35,749,752,753,750,0,3,3,3,3,35,751,752,749,748,0,96,96,96,96,35,755,757,756,754,0,8,8,8,8,35,759,761,760,758,0,8,8,8,8,35,728,744,745,729,0,97,97,97,97,35,734,749,750,735,0,2,2,2,2,35,748,749,734,733,0,98,98,98,98,35,739,755,754,738,0,11,11,11,11,35,743,759,758,742,0,11,11,11,11,35,727,729,733,730,0,99,99,99,99,35,740,742,739,737,0,36,36,36,36,35,745,747,751,748,0,100,100,100,100,35,758,760,757,755,0,11,11,11,11,35,729,745,748,733,0,101,101,101,101,35,742,758,755,739,0,11,11,11,11,35,763,765,766,764,0,22,22,22,22,35,767,769,770,768,0,22,22,22,22,35,772,774,773,771,0,36,36,36,36,35,776,778,777,775,0,36,36,36,36,35,779,781,782,780,0,2,2,2,2,35,783,785,786,784,0,2,2,2,2,35,789,790,792,791,0,1,1,1,1,35,788,790,789,787,0,11,11,11,11,35,795,796,798,797,0,1,1,1,1,35,794,796,795,793,0,11,11,11,11,35,765,779,780,766,0,3,3,3,3,35,769,783,784,770,0,3,3,3,3,35,774,788,787,773,0,8,8,8,8,35,778,794,793,777,0,8,8,8,8,35,764,766,769,767,0,19,19,19,19,35,775,777,774,772,0,27,27,27,27,35,780,782,785,783,0,3,3,3,3,35,790,795,797,792,0,1,1,1,1,35,793,795,790,788,0,8,8,8,8,35,766,780,783,769,0,2,2,2,2,35,777,793,788,774,0,11,11,11,11,35,801,802,804,803,0,1,1,1,1,35,806,809,808,805,0,27,27,27,27,35,806,807,811,809,0,102,102,102,102,35,812,813,815,814,0,103,103,103,103,35,818,822,821,817,0,8,8,8,8,35,824,825,827,826,0,37,37,37,37,35,809,818,817,808,0,8,8,8,8,35,810,819,820,811,0,3,3,3,3,35,809,811,820,818,0,37,37,37,37,35,806,812,814,807,0,104,104,104,104,35,814,816,811,807,0,11,11,11,11,35,820,825,824,818,0,45,45,45,45,35,824,826,822,818,0,11,11,11,11,35,820,823,827,825,0,2,2,2,2,35,828,829,831,830,0,1,1,1,1,35,832,833,835,834,0,1,1,1,1,35,829,832,834,831,0,1,1,1,1,35,845,846,848,847,0,1,1,1,1,35,844,846,845,843,0,8,8,8,8,35,850,851,853,852,0,37,37,37,37,35,855,858,857,854,0,8,8,8,8,35,841,850,849,840,0,8,8,8,8,35,841,842,851,850,0,37,37,37,37,35,848,855,854,847,0,8,8,8,8,35,857,858,862,861,0,105,105,105,105,35,855,860,862,858,0,12,12,12,12,35,841,845,847,842,0,1,1,1,1,35,854,857,853,851,0,11,11,11,11,35,853,857,861,859,0,106,106,106,106,35,847,854,851,842,0,11,11,11,11,35,865,866,868,867,0,1,1,1,1,35,864,866,865,863,0,11,11,11,11,35,872,873,875,874,0,1,1,1,1,35,870,873,872,869,0,11,11,11,11,35,870,871,875,873,0,40,40,40,40,35,881,883,882,880,0,11,11,11,11,35,885,887,886,884,0,11,11,11,11,35,868,877,876,867,0,11,11,11,11,35,875,879,878,874,0,11,11,11,11,35,876,877,881,880,0,106,106,106,106,35,878,879,885,884,0,106,106,106,106,35,866,872,874,868,0,1,1,1,1,35,869,872,866,864,0,8,8,8,8,35,884,886,883,881,0,8,8,8,8,35,877,878,884,881,0,106,106,106,106,35,874,878,877,868,0,8,8,8,8,35,746,799,800,747,0,97,97,97,97,35,752,803,804,753,0,25,25,25,25,35,801,803,752,751,0,107,107,107,107,35,757,806,805,756,0,108,108,108,108,35,761,813,812,760,0,108,108,108,108,35,761,762,815,813,0,109,109,109,109,35,747,800,801,751,0,101,101,101,101,35,760,812,806,757,0,90,90,90,90,35,781,830,831,782,0,13,13,13,13,35,785,834,835,786,0,13,13,13,13,35,792,837,836,791,0,110,110,110,110,35,798,839,838,797,0,110,110,110,110,35,782,831,834,785,0,25,25,25,25,35,797,838,837,792,0,111,111,111,111,35,810,811,841,840,0,6,6,6,6,35,849,850,820,819,0,112,112,112,112,35,820,850,852,823,0,0,0,0,0,35,814,815,844,843,0,1,1,1,1,35,814,843,845,816,0,0,0,0,0,35,811,816,845,841,0,1,1,1,1,35,852,856,827,823,0,52,52,52,52,35,810,840,849,819,0,0,0,0,0,35,836,837,864,863,0,1,1,1,1,35,838,839,870,869,0,1,1,1,1,35,837,838,869,864,0,1,1,1,1,35,732,735,765,763,0,22,22,22,22,35,771,773,743,741,0,113,113,113,113,35,750,753,781,779,0,2,2,2,2,35,761,789,791,762,0,1,1,1,1,35,787,789,761,759,0,11,11,11,11,35,735,750,779,765,0,2,2,2,2,35,773,787,759,743,0,11,11,11,11,35,802,828,830,804,0,1,1,1,1,35,846,865,867,848,0,1,1,1,1,35,863,865,846,844,0,11,11,11,11,35,880,882,862,860,0,11,11,11,11,35,855,876,880,860,0,114,114,114,114,35,867,876,855,848,0,11,11,11,11,35,815,836,863,844,0,1,1,1,1,35,753,804,830,781,0,13,13,13,13,35,791,836,815,762,0,115,115,115,115,35,594,595,655,654,0,12,12,12,12,35,601,659,658,600,0,36,36,36,36,35,600,658,655,595,0,59,59,59,59,35,607,671,670,606,0,36,36,36,36,35,617,677,676,616,0,36,36,36,36,35,616,676,674,613,0,88,88,88,88,35,607,613,674,671,0,15,15,15,15,35,606,670,659,601,0,36,36,36,36,35,622,726,727,623,0,82,82,82,82,35,628,731,732,629,0,25,25,25,25,35,730,731,628,627,0,116,116,116,116,35,633,737,736,632,0,27,27,27,27,35,637,741,740,636,0,27,27,27,27,35,623,727,730,627,0,85,85,85,85,35,636,740,737,633,0,36,36,36,36,35,640,763,764,641,0,13,13,13,13,35,644,767,768,645,0,13,13,13,13,35,649,772,771,648,0,36,36,36,36,35,653,776,775,652,0,36,36,36,36,35,641,764,767,644,0,25,25,25,25,35,652,775,772,649,0,27,27,27,27,35,629,732,763,640,0,13,13,13,13,35,648,771,741,637,0,113,113,113,113,35,609,618,620,611,0,1,1,1,1,35,630,632,617,615,0,8,8,8,8,35,611,620,630,615,0,117,117,117,117,35,736,738,679,677,0,59,59,59,59,35,754,756,689,687,0,8,8,8,8,35,738,754,687,679,0,11,11,11,11,35,805,808,715,713,0,59,59,59,59,35,817,821,725,723,0,8,8,8,8,35,808,817,723,715,0,8,8,8,8,35,756,805,713,689,0,90,90,90,90,35,632,736,677,617,0,59,59,59,59,35,888,890,891,889,0,2,2,2,2,35,892,894,895,893,0,2,2,2,2,35,897,899,898,896,0,11,11,11,11,35,901,903,902,900,0,11,11,11,11,35,888,889,897,896,0,79,79,79,79,35,892,893,901,900,0,79,79,79,79,35,889,891,894,892,0,2,2,2,2,35,900,902,899,897,0,11,11,11,11,35,889,892,900,897,0,79,79,79,79,35,905,908,909,906,0,3,3,3,3,35,904,906,909,907,0,118,118,118,118,35,910,911,913,912,0,1,1,1,1,35,910,914,915,911,0,82,82,82,82,35,917,919,918,916,0,8,8,8,8,35,921,923,922,920,0,11,11,11,11,35,905,906,917,916,0,117,117,117,117,35,912,913,921,920,0,79,79,79,79,35,904,910,912,906,0,1,1,1,1,35,904,907,914,910,0,119,119,119,119,35,920,922,919,917,0,8,8,8,8,35,906,912,920,917,0,84,84,84,84,35,893,895,908,905,0,2,2,2,2,35,916,918,903,901,0,8,8,8,8,35,893,905,916,901,0,79,79,79,79,35,924,925,927,926,0,6,6,6,6,35,928,929,931,930,0,1,1,1,1,35,931,933,932,930,0,8,8,8,8,35,935,937,936,934,0,11,11,11,11,35,926,927,935,934,0,79,79,79,79,35,932,939,938,930,0,57,57,57,57,35,925,928,930,927,0,1,1,1,1,35,938,939,937,935,0,80,80,80,80,35,927,930,938,935,0,81,81,81,81,35,940,941,943,942,0,1,1,1,1,35,943,945,944,942,0,11,11,11,11,35,948,949,947,946,0,68,68,68,68,35,941,946,947,943,0,1,1,1,1,35,947,949,945,943,0,11,11,11,11,35,929,940,942,931,0,1,1,1,1,35,942,944,933,931,0,8,8,8,8,35,950,952,953,951,0,22,22,22,22,35,954,956,957,955,0,22,22,22,22,35,959,961,960,958,0,36,36,36,36,35,963,965,964,962,0,36,36,36,36,35,966,968,969,967,0,2,2,2,2,35,970,972,973,971,0,2,2,2,2,35,976,977,979,978,0,1,1,1,1,35,975,977,976,974,0,11,11,11,11,35,982,983,985,984,0,1,1,1,1,35,981,983,982,980,0,11,11,11,11,35,952,966,967,953,0,3,3,3,3,35,956,970,971,957,0,3,3,3,3,35,961,975,974,960,0,8,8,8,8,35,965,981,980,964,0,8,8,8,8,35,951,953,956,954,0,22,22,22,22,35,962,964,961,959,0,36,36,36,36,35,967,969,972,970,0,2,2,2,2,35,977,982,984,979,0,1,1,1,1,35,980,982,977,975,0,11,11,11,11,35,953,967,970,956,0,3,3,3,3,35,964,980,975,961,0,8,8,8,8,35,987,990,991,988,0,20,20,20,20,35,986,988,991,989,0,120,120,120,120,35,992,994,995,993,0,93,93,93,93,35,997,999,998,996,0,59,59,59,59,35,1001,1003,1002,1000,0,36,36,36,36,35,1005,1008,1009,1006,0,3,3,3,3,35,1004,1006,1009,1007,0,121,121,121,121,35,1010,1012,1013,1011,0,95,95,95,95,35,1015,1017,1016,1014,0,8,8,8,8,35,1020,1022,1021,1019,0,11,11,11,11,35,990,1005,1006,991,0,2,2,2,2,35,989,991,1006,1004,0,122,122,122,122,35,994,1010,1011,995,0,97,97,97,97,35,999,1015,1014,998,0,11,11,11,11,35,1003,1020,1019,1002,0,11,11,11,11,35,986,989,994,992,0,123,123,123,123,35,1000,1002,999,997,0,27,27,27,27,35,1004,1007,1012,1010,0,124,124,124,124,35,1019,1021,1017,1015,0,8,8,8,8,35,989,1004,1010,994,0,125,125,125,125,35,1002,1019,1015,999,0,11,11,11,11,35,1023,1024,1026,1025,0,1,1,1,1,35,1027,1028,1030,1029,0,1,1,1,1,35,1024,1027,1029,1026,0,1,1,1,1,35,1035,1036,1038,1037,0,1,1,1,1,35,1041,1042,1044,1043,0,103,103,103,103,35,1047,1050,1049,1046,0,36,36,36,36,35,1049,1051,1048,1046,0,126,126,126,126,35,1055,1056,1054,1053,0,67,67,67,67,35,1058,1062,1061,1057,0,11,11,11,11,35,1050,1058,1057,1049,0,11,11,11,11,35,1051,1059,1060,1052,0,3,3,3,3,35,1057,1059,1051,1049,0,67,67,67,67,35,1042,1046,1048,1044,0,103,103,103,103,35,1048,1051,1045,1044,0,8,8,8,8,35,1054,1059,1057,1053,0,45,45,45,45,35,1057,1061,1055,1053,0,8,8,8,8,35,1054,1056,1063,1059,0,3,3,3,3,35,1067,1068,1070,1069,0,1,1,1,1,35,1065,1068,1067,1064,0,11,11,11,11,35,1067,1069,1066,1064,0,66,66,66,66,35,1073,1074,1076,1075,0,1,1,1,1,35,1072,1074,1073,1071,0,11,11,11,11,35,1082,1084,1083,1081,0,11,11,11,11,35,1086,1088,1087,1085,0,11,11,11,11,35,1070,1078,1077,1069,0,11,11,11,11,35,1076,1080,1079,1075,0,11,11,11,11,35,1077,1078,1082,1081,0,106,106,106,106,35,1079,1080,1086,1085,0,106,106,106,106,35,1068,1073,1075,1070,0,1,1,1,1,35,1071,1073,1068,1065,0,11,11,11,11,35,1085,1087,1084,1082,0,11,11,11,11,35,1078,1079,1085,1082,0,106,106,106,106,35,1075,1079,1078,1070,0,11,11,11,11,35,1091,1092,1094,1093,0,1,1,1,1,35,1090,1092,1091,1089,0,8,8,8,8,35,1099,1102,1101,1098,0,8,8,8,8,35,1106,1107,1105,1103,0,67,67,67,67,35,1094,1099,1098,1093,0,8,8,8,8,35,1096,1104,1103,1095,0,8,8,8,8,35,1103,1105,1097,1095,0,67,67,67,67,35,1101,1102,1110,1109,0,127,127,127,127,35,1101,1109,1108,1098,0,68,68,68,68,35,1092,1095,1097,1094,0,1,1,1,1,35,1105,1107,1102,1099,0,8,8,8,8,35,1102,1107,1111,1110,0,105,105,105,105,35,1097,1105,1099,1094,0,8,8,8,8,35,968,1025,1026,969,0,13,13,13,13,35,972,1029,1030,973,0,13,13,13,13,35,979,1032,1031,978,0,110,110,110,110,35,985,1034,1033,984,0,110,110,110,110,35,969,1026,1029,972,0,13,13,13,13,35,984,1033,1032,979,0,110,110,110,110,35,1008,1037,1038,1009,0,14,14,14,14,35,1007,1009,1038,1036,0,128,128,128,128,35,1012,1039,1040,1013,0,97,97,97,97,35,1017,1042,1041,1016,0,90,90,90,90,35,1041,1043,1018,1016,0,129,129,129,129,35,1022,1047,1046,1021,0,130,130,130,130,35,1007,1036,1039,1012,0,125,125,125,125,35,1021,1046,1042,1017,0,108,108,108,108,35,1031,1032,1065,1064,0,1,1,1,1,35,1033,1034,1072,1071,0,1,1,1,1,35,1032,1033,1071,1065,0,1,1,1,1,35,1043,1044,1090,1089,0,6,6,6,6,35,1045,1092,1090,1044,0,58,58,58,58,35,1051,1052,1096,1095,0,6,6,6,6,35,1103,1104,1060,1059,0,112,112,112,112,35,1063,1106,1103,1059,0,58,58,58,58,35,1045,1051,1095,1092,0,1,1,1,1,35,1100,1106,1063,1056,0,52,52,52,52,35,1060,1104,1096,1052,0,58,58,58,58,35,955,957,990,987,0,19,19,19,19,35,996,998,965,963,0,59,59,59,59,35,971,973,1008,1005,0,2,2,2,2,35,983,1016,1018,985,0,6,6,6,6,35,1014,1016,983,981,0,8,8,8,8,35,957,971,1005,990,0,3,3,3,3,35,998,1014,981,965,0,11,11,11,11,35,1028,1035,1037,1030,0,6,6,6,6,35,1074,1091,1093,1076,0,6,6,6,6,35,1089,1091,1074,1072,0,8,8,8,8,35,1108,1109,1088,1086,0,8,8,8,8,35,1080,1098,1108,1086,0,106,106,106,106,35,1093,1098,1080,1076,0,11,11,11,11,35,1034,1043,1089,1072,0,1,1,1,1,35,973,1030,1037,1008,0,13,13,13,13,35,1018,1043,1034,985,0,131,131,131,131,35,1113,1115,1114,1112,0,72,72,72,72,35,1117,1119,1118,1116,0,36,36,36,36,35,1123,1125,1124,1122,0,8,8,8,8,35,1127,1129,1128,1126,0,11,11,11,11,35,1115,1123,1122,1114,0,11,11,11,11,35,1119,1127,1126,1118,0,11,11,11,11,35,1114,1121,1120,1112,0,132,132,132,132,35,1124,1131,1130,1122,0,57,57,57,57,35,1120,1121,1119,1117,0,88,88,88,88,35,1130,1131,1129,1127,0,80,80,80,80,35,1121,1130,1127,1119,0,89,89,89,89,35,1122,1130,1121,1114,0,57,57,57,57,35,1133,1135,1134,1132,0,51,51,51,51,35,1138,1139,1137,1136,0,58,58,58,58,35,1141,1143,1142,1140,0,11,11,11,11,35,1146,1147,1145,1144,0,68,68,68,68,35,1135,1141,1140,1134,0,11,11,11,11,35,1144,1145,1139,1138,0,68,68,68,68,35,1137,1139,1135,1133,0,51,51,51,51,35,1145,1147,1143,1141,0,11,11,11,11,35,1139,1145,1141,1135,0,11,11,11,11,35,1149,1151,1150,1148,0,59,59,59,59,35,1153,1155,1154,1152,0,36,36,36,36,35,1159,1161,1160,1158,0,11,11,11,11,35,1163,1165,1164,1162,0,11,11,11,11,35,1151,1159,1158,1150,0,8,8,8,8,35,1155,1163,1162,1154,0,11,11,11,11,35,1150,1157,1156,1148,0,75,75,75,75,35,1160,1167,1166,1158,0,76,76,76,76,35,1156,1157,1155,1153,0,88,88,88,88,35,1166,1167,1165,1163,0,80,80,80,80,35,1157,1166,1163,1155,0,80,80,80,80,35,1158,1166,1157,1150,0,57,57,57,57,35,1169,1171,1170,1168,0,36,36,36,36,35,1174,1175,1173,1172,0,68,68,68,68,35,1177,1179,1178,1176,0,11,11,11,11,35,1182,1183,1181,1180,0,68,68,68,68,35,1171,1177,1176,1170,0,11,11,11,11,35,1180,1181,1175,1174,0,68,68,68,68,35,1173,1175,1171,1169,0,36,36,36,36,35,1181,1183,1179,1177,0,11,11,11,11,35,1175,1181,1177,1171,0,11,11,11,11,35,1125,1149,1148,1124,0,59,59,59,59,35,1129,1153,1152,1128,0,90,90,90,90,35,1131,1156,1153,1129,0,91,91,91,91,35,1148,1156,1131,1124,0,133,133,133,133,35,1143,1169,1168,1142,0,36,36,36,36,35,1172,1173,1147,1146,0,68,68,68,68,35,1147,1173,1169,1143,0,36,36,36,36,35,1132,1134,1115,1113,0,72,72,72,72,35,1140,1142,1125,1123,0,8,8,8,8,35,1134,1140,1123,1115,0,11,11,11,11,35,1168,1170,1151,1149,0,59,59,59,59,35,1176,1178,1161,1159,0,11,11,11,11,35,1170,1176,1159,1151,0,8,8,8,8,35,1142,1168,1149,1125,0,59,59,59,59,35,890,950,951,891,0,13,13,13,13,35,894,954,955,895,0,13,13,13,13,35,899,959,958,898,0,36,36,36,36,35,903,963,962,902,0,36,36,36,36,35,891,951,954,894,0,13,13,13,13,35,902,962,959,899,0,36,36,36,36,35,908,987,988,909,0,14,14,14,14,35,907,909,988,986,0,134,134,134,134,35,914,992,993,915,0,82,82,82,82,35,919,997,996,918,0,59,59,59,59,35,923,1001,1000,922,0,36,36,36,36,35,907,986,992,914,0,119,119,119,119,35,922,1000,997,919,0,27,27,27,27,35,895,955,987,908,0,13,13,13,13,35,918,996,963,903,0,59,59,59,59,35,933,1113,1112,932,0,59,59,59,59,35,937,1117,1116,936,0,36,36,36,36,35,939,1120,1117,937,0,88,88,88,88,35,1112,1120,939,932,0,75,75,75,75,35,945,1133,1132,944,0,36,36,36,36,35,1136,1137,949,948,0,68,68,68,68,35,949,1137,1133,945,0,36,36,36,36,35,944,1132,1113,933,0,59,59,59,59,35,911,924,926,913,0,1,1,1,1,35,934,936,923,921,0,8,8,8,8,35,913,926,934,921,0,117,117,117,117,35,1116,1118,1003,1001,0,59,59,59,59,35,1126,1128,1022,1020,0,8,8,8,8,35,1118,1126,1020,1003,0,11,11,11,11,35,1152,1154,1050,1047,0,59,59,59,59,35,1162,1164,1062,1058,0,8,8,8,8,35,1154,1162,1058,1050,0,8,8,8,8,35,1128,1152,1047,1022,0,90,90,90,90,35,936,1116,1001,923,0,59,59,59,59,35,1191,1192,1190,1189,0,52,52,52,52,35,1186,1189,1190,1187,0,135,135,135,135,35,1186,1188,1191,1189,0,12,12,12,12,35,1185,1188,1186,1184,0,136,136,136,136,35,1201,1202,1200,1199,0,52,52,52,52,35,1197,1199,1200,1198,0,137,137,137,137,35,1203,1205,1206,1204,0,137,137,137,137,35,1211,1212,1210,1209,0,138,138,138,138,35,1205,1209,1210,1206,0,139,139,139,139,35,1205,1207,1211,1209,0,12,12,12,12,35,1203,1204,1195,1194,0,52,52,52,52,35,1195,1204,1206,1196,0,92,92,92,92,35,1202,1207,1205,1200,0,112,112,112,112,35,1198,1200,1205,1203,0,140,140,140,140,35,1198,1203,1194,1193,0,112,112,112,112,35,1202,1208,1211,1207,0,141,141,141,141,35,1192,1201,1199,1190,0,52,52,52,52,35,1187,1190,1199,1197,0,142,142,142,142,35,1215,1217,1218,1216,0,3,3,3,3,35,1219,1220,1222,1221,0,37,37,37,37,35,1227,1229,1230,1228,0,3,3,3,3,35,1231,1232,1234,1233,0,143,143,143,143,35,1217,1227,1228,1218,0,2,2,2,2,35,1221,1222,1232,1231,0,37,37,37,37,35,1213,1219,1221,1214,0,12,12,12,12,35,1225,1231,1233,1226,0,12,12,12,12,35,1213,1214,1217,1215,0,2,2,2,2,35,1223,1224,1222,1220,0,11,11,11,11,35,1225,1226,1229,1227,0,2,2,2,2,35,1235,1236,1234,1232,0,144,144,144,144,35,1214,1225,1227,1217,0,2,2,2,2,35,1224,1235,1232,1222,0,11,11,11,11,35,1214,1221,1231,1225,0,12,12,12,12,35,1239,1240,1242,1241,0,106,106,106,106,35,1237,1241,1242,1238,0,2,2,2,2,35,1243,1244,1246,1245,0,1,1,1,1,35,1243,1247,1248,1244,0,2,2,2,2,35,1243,1245,1249,1247,0,145,145,145,145,35,1252,1253,1251,1250,0,52,52,52,52,35,1252,1255,1256,1253,0,2,2,2,2,35,1251,1253,1256,1254,0,40,40,40,40,35,1261,1262,1260,1259,0,52,52,52,52,35,1257,1259,1260,1258,0,2,2,2,2,35,1239,1250,1251,1240,0,3,3,3,3,35,1239,1241,1252,1250,0,145,145,145,145,35,1247,1257,1258,1248,0,3,3,3,3,35,1240,1247,1249,1242,0,106,106,106,106,35,1238,1242,1249,1245,0,2,2,2,2,35,1256,1261,1259,1254,0,52,52,52,52,35,1251,1254,1259,1257,0,2,2,2,2,35,1240,1251,1257,1247,0,3,3,3,3,35,1263,1265,1266,1264,0,13,13,13,13,35,1267,1268,1270,1269,0,102,102,102,102,35,1274,1275,1277,1276,0,146,146,146,146,35,1280,1281,1279,1278,0,138,138,138,138,35,1282,1283,1285,1284,0,37,37,37,37,35,1269,1270,1275,1274,0,147,147,147,147,35,1271,1278,1279,1272,0,148,148,148,148,35,1271,1272,1266,1265,0,45,45,45,45,35,1275,1282,1284,1277,0,12,12,12,12,35,1264,1266,1270,1268,0,13,13,13,13,35,1281,1283,1282,1279,0,138,138,138,138,35,1272,1273,1270,1266,0,45,45,45,45,35,1272,1279,1282,1273,0,139,139,139,139,35,1270,1273,1282,1275,0,0,0,0,0,35,1287,1289,1290,1288,0,3,3,3,3,35,1291,1292,1294,1293,0,1,1,1,1,35,1297,1298,1296,1295,0,52,52,52,52,35,1291,1295,1296,1292,0,149,149,149,149,35,1294,1298,1297,1293,0,150,150,150,150,35,1291,1293,1297,1295,0,12,12,12,12,35,1309,1310,1308,1307,0,52,52,52,52,35,1309,1311,1312,1310,0,3,3,3,3,35,1296,1298,1305,1304,0,37,37,37,37,35,1301,1307,1308,1302,0,3,3,3,3,35,1301,1302,1290,1289,0,52,52,52,52,35,1287,1299,1301,1289,0,0,0,0,0,35,1292,1296,1301,1299,0,151,151,151,151,35,1300,1303,1298,1294,0,144,144,144,144,35,1305,1309,1307,1304,0,52,52,52,52,35,1305,1306,1311,1309,0,2,2,2,2,35,1292,1299,1287,1286,0,52,52,52,52,35,1296,1304,1307,1301,0,2,2,2,2,35,1313,1315,1316,1314,0,2,2,2,2,35,1317,1319,1320,1318,0,2,2,2,2,35,1331,1332,1330,1329,0,52,52,52,52,35,1326,1329,1330,1327,0,2,2,2,2,35,1326,1328,1331,1329,0,40,40,40,40,35,1337,1338,1336,1335,0,52,52,52,52,35,1333,1335,1336,1334,0,2,2,2,2,35,1319,1324,1325,1320,0,152,152,152,152,35,1321,1326,1327,1322,0,2,2,2,2,35,1321,1322,1316,1315,0,52,52,52,52,35,1333,1334,1325,1324,0,112,112,112,112,35,1314,1316,1319,1317,0,2,2,2,2,35,1332,1337,1335,1330,0,52,52,52,52,35,1327,1330,1335,1333,0,2,2,2,2,35,1322,1323,1319,1316,0,52,52,52,52,35,1322,1327,1333,1323,0,2,2,2,2,35,1319,1323,1333,1324,0,153,153,153,153,35,1340,1341,1343,1342,0,154,154,154,154,35,1344,1345,1347,1346,0,155,155,155,155,35,1348,1349,1351,1350,0,1,1,1,1,35,1354,1355,1353,1352,0,52,52,52,52,35,1348,1352,1353,1349,0,3,3,3,3,35,1351,1355,1354,1350,0,36,36,36,36,35,1348,1350,1354,1352,0,12,12,12,12,35,1365,1366,1368,1367,0,156,156,156,156,35,1342,1343,1357,1356,0,157,157,157,157,35,1346,1347,1366,1365,0,61,61,61,61,35,1351,1361,1362,1355,0,12,12,12,12,35,1341,1344,1346,1343,0,12,12,12,12,35,1349,1356,1357,1351,0,1,1,1,1,35,1355,1360,1358,1353,0,52,52,52,52,35,1362,1367,1368,1364,0,1,1,1,1,35,1365,1367,1362,1361,0,36,36,36,36,35,1351,1357,1365,1361,0,1,1,1,1,35,1342,1356,1349,1339,0,11,11,11,11,35,1343,1346,1365,1357,0,12,12,12,12,35,1229,1287,1288,1230,0,2,2,2,2,35,1233,1234,1294,1292,0,158,158,158,158,35,1226,1286,1287,1229,0,2,2,2,2,35,1236,1300,1294,1234,0,11,11,11,11,35,1226,1233,1292,1286,0,0,0,0,0,35,1255,1313,1314,1256,0,2,2,2,2,35,1261,1317,1318,1262,0,2,2,2,2,35,1256,1314,1317,1261,0,2,2,2,2,35,1276,1277,1341,1340,0,158,158,158,158,35,1284,1285,1345,1344,0,159,159,159,159,35,1277,1284,1344,1341,0,0,0,0,0,35,1223,1267,1269,1224,0,12,12,12,12,35,1235,1274,1276,1236,0,12,12,12,12,35,1224,1269,1274,1235,0,12,12,12,12,35,1305,1349,1353,1306,0,12,12,12,12,35,1300,1340,1342,1303,0,12,12,12,12,35,1358,1359,1312,1311,0,52,52,52,52,35,1298,1303,1342,1339,0,1,1,1,1,35,1353,1358,1311,1306,0,52,52,52,52,35,1298,1339,1349,1305,0,12,12,12,12,35,1369,1370,1332,1331,0,112,112,112,112,35,1370,1371,1337,1332,0,112,112,112,112,35,1216,1218,1241,1237,0,2,2,2,2,35,1228,1230,1255,1252,0,2,2,2,2,35,1218,1228,1252,1241,0,3,3,3,3,35,1288,1290,1315,1313,0,2,2,2,2,35,1310,1328,1326,1308,0,52,52,52,52,35,1310,1312,1331,1328,0,2,2,2,2,35,1302,1321,1315,1290,0,52,52,52,52,35,1302,1308,1326,1321,0,2,2,2,2,35,1359,1369,1331,1312,0,52,52,52,52,35,1230,1288,1313,1255,0,2,2,2,2,35,1236,1276,1340,1300,0,0,0,0,0,35,1377,1378,1376,1375,0,52,52,52,52,35,1384,1385,1383,1382,0,52,52,52,52,35,1383,1385,1387,1386,0,55,55,55,55,35,1382,1383,1378,1377,0,112,112,112,112,35,1381,1384,1382,1379,0,52,52,52,52,35,1379,1382,1377,1374,0,52,52,52,52,35,1390,1391,1389,1388,0,52,52,52,52,35,1394,1395,1393,1392,0,52,52,52,52,35,1394,1396,1397,1395,0,2,2,2,2,35,1402,1403,1401,1400,0,112,112,112,112,35,1398,1400,1401,1399,0,2,2,2,2,35,1407,1408,1406,1405,0,112,112,112,112,35,1398,1399,1391,1390,0,52,52,52,52,35,1405,1406,1397,1396,0,52,52,52,52,35,1394,1404,1405,1396,0,40,40,40,40,35,1391,1394,1392,1389,0,52,52,52,52,35,1403,1407,1405,1401,0,112,112,112,112,35,1399,1401,1405,1404,0,2,2,2,2,35,1399,1404,1394,1391,0,52,52,52,52,35,1392,1393,1373,1372,0,112,112,112,112,35,1378,1390,1388,1376,0,52,52,52,52,35,1387,1402,1400,1386,0,52,52,52,52,35,1383,1386,1400,1398,0,2,2,2,2,35,1383,1398,1390,1378,0,52,52,52,52,35,1337,1372,1373,1338,0,2,2,2,2,35,1358,1375,1376,1359,0,3,3,3,3,35,1358,1360,1377,1375,0,37,37,37,37,35,1363,1380,1381,1364,0,82,82,82,82,35,1362,1364,1381,1379,0,61,61,61,61,35,1355,1374,1377,1360,0,2,2,2,2,35,1355,1362,1379,1374,0,12,12,12,12,35,1369,1388,1389,1370,0,2,2,2,2,35,1370,1389,1392,1371,0,2,2,2,2,35,1359,1376,1388,1369,0,2,2,2,2,35,1337,1371,1392,1372,0,160,160,160,160,35,1195,1196,1265,1263,0,14,14,14,14,35,1212,1280,1278,1210,0,161,161,161,161,35,1206,1271,1265,1196,0,162,162,162,162,35,1206,1210,1278,1271,0,148,148,148,148,35,1409,1410,1412,1411,0,1,1,1,1,35,1409,1413,1414,1410,0,2,2,2,2,35,1414,1415,1412,1410,0,163,163,163,163,35,1418,1419,1421,1420,0,106,106,106,106,35,1416,1420,1421,1417,0,2,2,2,2,35,1426,1427,1425,1424,0,52,52,52,52,35,1422,1424,1425,1423,0,2,2,2,2,35,1430,1431,1429,1428,0,52,52,52,52,35,1430,1433,1434,1431,0,2,2,2,2,35,1432,1433,1430,1428,0,66,66,66,66,35,1413,1422,1423,1414,0,3,3,3,3,35,1418,1428,1429,1419,0,3,3,3,3,35,1429,1431,1421,1419,0,163,163,163,163,35,1414,1418,1420,1415,0,106,106,106,106,35,1412,1415,1420,1416,0,3,3,3,3,35,1427,1433,1432,1425,0,52,52,52,52,35,1423,1425,1432,1428,0,3,3,3,3,35,1414,1423,1428,1418,0,2,2,2,2,35,1435,1437,1438,1436,0,3,3,3,3,35,1445,1446,1444,1443,0,67,67,67,67,35,1447,1449,1450,1448,0,3,3,3,3,35,1457,1458,1456,1455,0,164,164,164,164,35,1437,1447,1448,1438,0,2,2,2,2,35,1455,1456,1446,1445,0,67,67,67,67,35,1440,1445,1443,1439,0,68,68,68,68,35,1452,1457,1455,1451,0,68,68,68,68,35,1436,1438,1440,1439,0,3,3,3,3,35,1444,1446,1442,1441,0,8,8,8,8,35,1448,1450,1452,1451,0,3,3,3,3,35,1456,1458,1454,1453,0,165,165,165,165,35,1438,1448,1451,1440,0,2,2,2,2,35,1446,1456,1453,1442,0,8,8,8,8,35,1451,1455,1445,1440,0,68,68,68,68,35,1461,1462,1460,1459,0,126,126,126,126,35,1463,1465,1466,1464,0,25,25,25,25,35,1472,1473,1471,1470,0,166,166,166,166,35,1476,1477,1475,1474,0,167,167,167,167,35,1480,1481,1479,1478,0,168,168,168,168,35,1470,1471,1462,1461,0,169,169,169,169,35,1468,1478,1479,1469,0,148,148,148,148,35,1473,1476,1474,1471,0,68,68,68,68,35,1468,1469,1466,1465,0,45,45,45,45,35,1460,1462,1465,1463,0,25,25,25,25,35,1475,1480,1478,1474,0,170,170,170,170,35,1467,1468,1465,1462,0,171,171,171,171,35,1467,1474,1478,1468,0,148,148,148,148,35,1471,1474,1467,1462,0,58,58,58,58,35,1482,1484,1485,1483,0,2,2,2,2,35,1486,1488,1489,1487,0,2,2,2,2,35,1499,1500,1498,1497,0,52,52,52,52,35,1495,1497,1498,1496,0,2,2,2,2,35,1506,1507,1505,1504,0,52,52,52,52,35,1501,1504,1505,1502,0,2,2,2,2,35,1505,1507,1503,1502,0,66,66,66,66,35,1484,1493,1494,1485,0,152,152,152,152,35,1491,1501,1502,1492,0,2,2,2,2,35,1495,1496,1494,1493,0,112,112,112,112,35,1491,1492,1489,1488,0,52,52,52,52,35,1483,1485,1488,1486,0,3,3,3,3,35,1500,1506,1504,1498,0,52,52,52,52,35,1496,1498,1504,1501,0,3,3,3,3,35,1490,1491,1488,1485,0,52,52,52,52,35,1490,1496,1501,1491,0,3,3,3,3,35,1494,1496,1490,1485,0,172,172,172,172,35,1508,1510,1511,1509,0,3,3,3,3,35,1518,1519,1521,1520,0,1,1,1,1,35,1524,1525,1523,1522,0,52,52,52,52,35,1518,1522,1523,1519,0,151,151,151,151,35,1521,1525,1524,1520,0,150,150,150,150,35,1523,1525,1521,1519,0,68,68,68,68,35,1528,1529,1527,1526,0,52,52,52,52,35,1528,1530,1531,1529,0,3,3,3,3,35,1515,1526,1527,1516,0,3,3,3,3,35,1532,1533,1524,1522,0,67,67,67,67,35,1515,1516,1511,1510,0,52,52,52,52,35,1511,1516,1513,1509,0,58,58,58,58,35,1513,1516,1522,1518,0,149,149,149,149,35,1520,1524,1517,1514,0,165,165,165,165,35,1529,1533,1532,1527,0,52,52,52,52,35,1529,1531,1534,1533,0,3,3,3,3,35,1513,1518,1512,1509,0,112,112,112,112,35,1516,1527,1532,1522,0,3,3,3,3,35,1540,1541,1539,1538,0,173,173,173,173,35,1545,1546,1544,1543,0,174,174,174,174,35,1552,1553,1555,1554,0,1,1,1,1,35,1558,1559,1557,1556,0,52,52,52,52,35,1552,1556,1557,1553,0,3,3,3,3,35,1555,1559,1558,1554,0,27,27,27,27,35,1557,1559,1555,1553,0,68,68,68,68,35,1562,1563,1561,1560,0,175,175,175,175,35,1547,1548,1541,1540,0,176,176,176,176,35,1560,1561,1546,1545,0,177,177,177,177,35,1541,1545,1543,1539,0,68,68,68,68,35,1558,1565,1564,1554,0,68,68,68,68,35,1547,1552,1554,1548,0,1,1,1,1,35,1551,1558,1556,1550,0,52,52,52,52,35,1562,1565,1566,1563,0,1,1,1,1,35,1564,1565,1562,1560,0,27,27,27,27,35,1548,1554,1564,1560,0,6,6,6,6,35,1542,1552,1547,1540,0,8,8,8,8,35,1548,1560,1545,1541,0,68,68,68,68,35,1426,1482,1483,1427,0,2,2,2,2,35,1433,1486,1487,1434,0,2,2,2,2,35,1427,1483,1486,1433,0,2,2,2,2,35,1449,1508,1509,1450,0,3,3,3,3,35,1518,1520,1458,1457,0,178,178,178,178,35,1450,1509,1512,1452,0,2,2,2,2,35,1458,1520,1514,1454,0,11,11,11,11,35,1512,1518,1457,1452,0,58,58,58,58,35,1538,1539,1473,1472,0,178,178,178,178,35,1543,1544,1477,1476,0,179,179,179,179,35,1539,1543,1476,1473,0,58,58,58,58,35,1536,1537,1507,1506,0,112,112,112,112,35,1535,1536,1506,1500,0,52,52,52,52,35,1442,1461,1459,1441,0,68,68,68,68,35,1454,1472,1470,1453,0,68,68,68,68,35,1453,1470,1461,1442,0,68,68,68,68,35,1517,1540,1538,1514,0,68,68,68,68,35,1549,1550,1531,1530,0,52,52,52,52,35,1534,1556,1552,1533,0,68,68,68,68,35,1517,1524,1542,1540,0,1,1,1,1,35,1550,1556,1534,1531,0,52,52,52,52,35,1533,1552,1542,1524,0,68,68,68,68,35,1417,1421,1437,1435,0,2,2,2,2,35,1431,1434,1449,1447,0,2,2,2,2,35,1421,1431,1447,1437,0,3,3,3,3,35,1487,1489,1510,1508,0,2,2,2,2,35,1503,1528,1526,1502,0,52,52,52,52,35,1503,1507,1530,1528,0,2,2,2,2,35,1492,1515,1510,1489,0,112,112,112,112,35,1492,1502,1526,1515,0,2,2,2,2,35,1537,1549,1530,1507,0,52,52,52,52,35,1434,1487,1508,1449,0,3,3,3,3,35,1514,1538,1472,1454,0,58,58,58,58,35,1572,1574,1575,1573,0,137,137,137,137,35,1581,1582,1580,1579,0,52,52,52,52,35,1577,1579,1580,1578,0,137,137,137,137,35,1585,1586,1584,1583,0,170,170,170,170,35,1574,1583,1584,1575,0,139,139,139,139,35,1584,1586,1576,1575,0,58,58,58,58,35,1572,1573,1569,1568,0,52,52,52,52,35,1570,1574,1572,1568,0,133,133,133,133,35,1576,1581,1579,1575,0,112,112,112,112,35,1573,1575,1579,1577,0,140,140,140,140,35,1573,1577,1571,1569,0,112,112,112,112,35,1576,1586,1587,1581,0,141,141,141,141,35,1593,1594,1592,1591,0,52,52,52,52,35,1588,1591,1592,1589,0,137,137,137,137,35,1592,1594,1590,1589,0,68,68,68,68,35,1590,1596,1595,1589,0,136,136,136,136,35,1582,1593,1591,1580,0,52,52,52,52,35,1578,1580,1591,1588,0,137,137,137,137,35,1601,1602,1600,1599,0,52,52,52,52,35,1601,1603,1604,1602,0,2,2,2,2,35,1607,1608,1606,1605,0,52,52,52,52,35,1612,1613,1611,1610,0,112,112,112,112,35,1618,1619,1617,1616,0,52,52,52,52,35,1614,1616,1617,1615,0,2,2,2,2,35,1610,1611,1604,1603,0,52,52,52,52,35,1604,1611,1609,1602,0,66,66,66,66,35,1614,1615,1608,1607,0,52,52,52,52,35,1602,1607,1605,1600,0,52,52,52,52,35,1613,1618,1616,1611,0,52,52,52,52,35,1609,1611,1616,1614,0,3,3,3,3,35,1609,1614,1607,1602,0,52,52,52,52,35,1622,1623,1621,1620,0,52,52,52,52,35,1627,1628,1626,1625,0,52,52,52,52,35,1629,1630,1627,1625,0,30,30,30,30,35,1625,1626,1623,1622,0,112,112,112,112,35,1628,1632,1631,1626,0,52,52,52,52,35,1626,1631,1624,1623,0,112,112,112,112,35,1599,1600,1598,1597,0,112,112,112,112,35,1608,1622,1620,1606,0,52,52,52,52,35,1619,1630,1629,1617,0,52,52,52,52,35,1615,1617,1629,1625,0,2,2,2,2,35,1615,1625,1622,1608,0,52,52,52,52,35,1499,1597,1598,1500,0,2,2,2,2,35,1536,1605,1606,1537,0,2,2,2,2,35,1535,1600,1605,1536,0,3,3,3,3,35,1549,1620,1621,1550,0,3,3,3,3,35,1621,1623,1551,1550,0,67,67,67,67,35,1566,1632,1633,1567,0,82,82,82,82,35,1631,1632,1566,1565,0,177,177,177,177,35,1551,1623,1624,1558,0,3,3,3,3,35,1624,1631,1565,1558,0,68,68,68,68,35,1537,1606,1620,1549,0,2,2,2,2,35,1598,1600,1535,1500,0,180,180,180,180,35,1464,1466,1570,1568,0,14,14,14,14,35,1481,1585,1583,1479,0,181,181,181,181,35,1469,1574,1570,1466,0,162,162,162,162,35,1469,1479,1583,1574,0,148,148,148,148,35,1641,1642,1640,1639,0,52,52,52,52,35,1638,1642,1641,1637,0,182,182,182,182,35,1636,1637,1641,1639,0,12,12,12,12,35,1635,1637,1636,1634,0,183,183,183,183,35,1647,1648,1646,1645,0,52,52,52,52,35,1644,1648,1647,1643,0,184,184,184,184,35,1650,1653,1652,1649,0,184,184,184,184,35,1661,1662,1660,1659,0,138,138,138,138,35,1653,1662,1661,1652,0,185,185,185,185,35,1651,1652,1661,1659,0,12,12,12,12,35,1655,1656,1650,1649,0,52,52,52,52,35,1650,1656,1657,1653,0,186,186,186,186,35,1648,1652,1651,1646,0,52,52,52,52,35,1649,1652,1648,1644,0,187,187,187,187,35,1654,1655,1649,1644,0,112,112,112,112,35,1651,1659,1658,1646,0,188,188,188,188,35,1642,1647,1645,1640,0,52,52,52,52,35,1643,1647,1642,1638,0,184,184,184,184,35,1667,1669,1668,1666,0,27,27,27,27,35,1670,1671,1673,1672,0,42,42,42,42,35,1676,1677,1675,1674,0,138,138,138,138,35,1678,1679,1681,1680,0,37,37,37,37,35,1682,1683,1685,1684,0,189,189,189,189,35,1664,1677,1676,1663,0,185,185,185,185,35,1672,1673,1683,1682,0,190,190,190,190,35,1668,1669,1664,1663,0,45,45,45,45,35,1679,1682,1684,1681,0,12,12,12,12,35,1670,1672,1669,1667,0,36,36,36,36,35,1677,1679,1678,1675,0,138,138,138,138,35,1669,1672,1665,1664,0,45,45,45,45,35,1665,1679,1677,1664,0,185,185,185,185,35,1665,1672,1682,1679,0,12,12,12,12,35,1686,1687,1689,1688,0,37,37,37,37,35,1695,1697,1696,1694,0,8,8,8,8,35,1698,1699,1701,1700,0,143,143,143,143,35,1707,1709,1708,1706,0,8,8,8,8,35,1688,1689,1699,1698,0,37,37,37,37,35,1697,1707,1706,1696,0,11,11,11,11,35,1687,1692,1693,1689,0,12,12,12,12,35,1699,1704,1705,1701,0,12,12,12,12,35,1686,1688,1691,1690,0,2,2,2,2,35,1694,1696,1693,1692,0,11,11,11,11,35,1698,1700,1703,1702,0,151,151,151,151,35,1706,1708,1705,1704,0,11,11,11,11,35,1688,1698,1702,1691,0,2,2,2,2,35,1696,1706,1704,1693,0,11,11,11,11,35,1689,1693,1704,1699,0,12,12,12,12,35,1712,1713,1715,1714,0,106,106,106,106,35,1711,1713,1712,1710,0,11,11,11,11,35,1716,1717,1719,1718,0,1,1,1,1,35,1719,1722,1721,1718,0,11,11,11,11,35,1716,1718,1721,1720,0,145,145,145,145,35,1725,1726,1724,1723,0,52,52,52,52,35,1724,1728,1727,1723,0,11,11,11,11,35,1724,1726,1729,1728,0,40,40,40,40,35,1734,1735,1733,1732,0,52,52,52,52,35,1731,1735,1734,1730,0,11,11,11,11,35,1715,1726,1725,1714,0,11,11,11,11,35,1712,1714,1725,1723,0,191,191,191,191,35,1722,1731,1730,1721,0,11,11,11,11,35,1713,1720,1721,1715,0,106,106,106,106,35,1716,1720,1713,1711,0,8,8,8,8,35,1729,1734,1732,1728,0,52,52,52,52,35,1730,1734,1729,1726,0,8,8,8,8,35,1721,1730,1726,1715,0,11,11,11,11,35,1736,1737,1739,1738,0,192,192,192,192,35,1741,1742,1744,1743,0,193,193,193,193,35,1749,1750,1752,1751,0,194,194,194,194,35,1753,1754,1756,1755,0,6,6,6,6,35,1759,1760,1758,1757,0,52,52,52,52,35,1753,1757,1758,1754,0,25,25,25,25,35,1756,1760,1759,1755,0,8,8,8,8,35,1753,1755,1759,1757,0,12,12,12,12,35,1738,1739,1750,1749,0,121,121,121,121,35,1743,1744,1762,1761,0,195,195,195,195,35,1745,1754,1758,1748,0,12,12,12,12,35,1737,1741,1743,1739,0,12,12,12,12,35,1747,1751,1752,1748,0,1,1,1,1,35,1745,1748,1752,1750,0,13,13,13,13,35,1754,1761,1762,1756,0,1,1,1,1,35,1760,1764,1763,1758,0,52,52,52,52,35,1745,1750,1761,1754,0,79,79,79,79,35,1740,1756,1762,1744,0,2,2,2,2,35,1739,1743,1761,1750,0,12,12,12,12,35,1769,1770,1772,1771,0,1,1,1,1,35,1775,1776,1774,1773,0,52,52,52,52,35,1769,1773,1774,1770,0,196,196,196,196,35,1772,1776,1775,1771,0,144,144,144,144,35,1769,1771,1775,1773,0,12,12,12,12,35,1784,1786,1785,1783,0,8,8,8,8,35,1792,1793,1791,1790,0,52,52,52,52,35,1791,1795,1794,1790,0,8,8,8,8,35,1774,1776,1788,1787,0,37,37,37,37,35,1781,1793,1792,1780,0,8,8,8,8,35,1785,1786,1781,1780,0,52,52,52,52,35,1778,1783,1785,1780,0,12,12,12,12,35,1770,1774,1779,1777,0,151,151,151,151,35,1778,1780,1776,1772,0,144,144,144,144,35,1788,1792,1790,1787,0,52,52,52,52,35,1790,1794,1789,1787,0,11,11,11,11,35,1782,1783,1778,1772,0,52,52,52,52,35,1780,1792,1788,1776,0,11,11,11,11,35,1800,1802,1801,1799,0,11,11,11,11,35,1804,1806,1805,1803,0,11,11,11,11,35,1812,1813,1811,1810,0,52,52,52,52,35,1809,1813,1812,1808,0,11,11,11,11,35,1807,1808,1812,1810,0,40,40,40,40,35,1818,1819,1817,1816,0,52,52,52,52,35,1815,1819,1818,1814,0,11,11,11,11,35,1797,1809,1808,1796,0,11,11,11,11,35,1806,1821,1820,1805,0,197,197,197,197,35,1801,1802,1797,1796,0,52,52,52,52,35,1820,1821,1815,1814,0,52,52,52,52,35,1803,1805,1802,1800,0,8,8,8,8,35,1813,1818,1816,1811,0,52,52,52,52,35,1814,1818,1813,1809,0,8,8,8,8,35,1802,1805,1798,1797,0,52,52,52,52,35,1798,1814,1809,1797,0,8,8,8,8,35,1798,1805,1820,1814,0,198,198,198,198,35,1680,1681,1737,1736,0,199,199,199,199,35,1684,1685,1742,1741,0,158,158,158,158,35,1681,1684,1741,1737,0,0,0,0,0,35,1700,1701,1772,1770,0,158,158,158,158,35,1709,1784,1783,1708,0,11,11,11,11,35,1700,1770,1777,1703,0,2,2,2,2,35,1708,1783,1782,1705,0,11,11,11,11,35,1701,1705,1782,1772,0,0,0,0,0,35,1728,1800,1799,1727,0,11,11,11,11,35,1733,1804,1803,1732,0,11,11,11,11,35,1732,1803,1800,1728,0,11,11,11,11,35,1671,1690,1691,1673,0,0,0,0,0,35,1683,1702,1703,1685,0,0,0,0,0,35,1673,1691,1702,1683,0,0,0,0,0,35,1756,1787,1789,1760,0,0,0,0,0,35,1742,1777,1779,1744,0,0,0,0,0,35,1794,1795,1765,1764,0,52,52,52,52,35,1740,1744,1779,1774,0,1,1,1,1,35,1789,1794,1764,1760,0,52,52,52,52,35,1740,1774,1787,1756,0,0,0,0,0,35,1810,1811,1767,1766,0,52,52,52,52,35,1811,1816,1768,1767,0,52,52,52,52,35,1710,1712,1697,1695,0,11,11,11,11,35,1723,1727,1709,1707,0,11,11,11,11,35,1712,1723,1707,1697,0,11,11,11,11,35,1799,1801,1786,1784,0,11,11,11,11,35,1793,1808,1807,1791,0,52,52,52,52,35,1807,1810,1795,1791,0,11,11,11,11,35,1786,1801,1796,1781,0,52,52,52,52,35,1796,1808,1793,1781,0,11,11,11,11,35,1795,1810,1766,1765,0,52,52,52,52,35,1727,1799,1784,1709,0,11,11,11,11,35,1685,1703,1777,1742,0,0,0,0,0,35,1827,1828,1826,1825,0,52,52,52,52,35,1826,1828,1830,1829,0,118,118,118,118,35,1834,1835,1833,1832,0,52,52,52,52,35,1832,1833,1828,1827,0,200,200,200,200,35,1824,1827,1825,1823,0,52,52,52,52,35,1831,1832,1827,1824,0,201,201,201,201,35,1840,1841,1839,1838,0,52,52,52,52,35,1837,1841,1840,1836,0,11,11,11,11,35,1845,1846,1844,1843,0,112,112,112,112,35,1849,1850,1848,1847,0,52,52,52,52,35,1853,1854,1852,1851,0,52,52,52,52,35,1852,1856,1855,1851,0,11,11,11,11,35,1847,1848,1837,1836,0,201,201,201,201,35,1855,1856,1846,1845,0,201,201,201,201,35,1842,1851,1855,1845,0,40,40,40,40,35,1841,1845,1843,1839,0,52,52,52,52,35,1842,1845,1841,1837,0,8,8,8,8,35,1850,1853,1851,1848,0,52,52,52,52,35,1848,1851,1842,1837,0,201,201,201,201,35,1857,1858,1854,1853,0,52,52,52,52,35,1830,1840,1838,1829,0,52,52,52,52,35,1836,1840,1830,1828,0,11,11,11,11,35,1835,1849,1847,1833,0,52,52,52,52,35,1833,1847,1836,1828,0,202,202,202,202,35,1747,1823,1822,1746,0,7,7,7,7,35,1747,1748,1824,1823,0,121,121,121,121,35,1765,1835,1834,1764,0,8,8,8,8,35,1763,1764,1834,1832,0,37,37,37,37,35,1763,1832,1831,1758,0,11,11,11,11,35,1748,1758,1831,1824,0,12,12,12,12,35,1767,1850,1849,1766,0,11,11,11,11,35,1768,1853,1850,1767,0,8,8,8,8,35,1817,1858,1857,1816,0,11,11,11,11,35,1766,1849,1835,1765,0,11,11,11,11,35,1768,1816,1857,1853,0,203,203,203,203,35,1666,1668,1657,1656,0,59,59,59,59,35,1662,1676,1674,1660,0,161,161,161,161,35,1657,1668,1663,1653,0,162,162,162,162,35,1663,1676,1662,1653,0,185,185,185,185,35,1864,1865,1863,1862,0,69,69,69,69,35,1867,1869,1868,1866,0,36,36,36,36,35,1872,1873,1871,1870,0,177,177,177,177,35,1876,1877,1875,1874,0,204,204,204,204,35,1880,1881,1879,1878,0,205,205,205,205,35,1861,1877,1876,1860,0,206,206,206,206,35,1878,1879,1865,1864,0,207,207,207,207,35,1873,1880,1878,1871,0,68,68,68,68,35,1868,1869,1861,1860,0,45,45,45,45,35,1866,1868,1864,1862,0,27,27,27,27,35,1871,1876,1874,1870,0,208,208,208,208,35,1864,1868,1860,1859,0,171,171,171,171,35,1860,1876,1871,1859,0,206,206,206,206,35,1871,1878,1864,1859,0,68,68,68,68,35,1882,1883,1885,1884,0,1,1,1,1,35,1885,1888,1887,1884,0,11,11,11,11,35,1886,1888,1885,1883,0,163,163,163,163,35,1891,1892,1894,1893,0,106,106,106,106,35,1890,1892,1891,1889,0,11,11,11,11,35,1899,1900,1898,1897,0,52,52,52,52,35,1896,1900,1899,1895,0,11,11,11,11,35,1903,1904,1902,1901,0,52,52,52,52,35,1902,1906,1905,1901,0,11,11,11,11,35,1905,1907,1903,1901,0,66,66,66,66,35,1888,1896,1895,1887,0,11,11,11,11,35,1894,1904,1903,1893,0,11,11,11,11,35,1902,1904,1894,1892,0,209,209,209,209,35,1886,1891,1893,1888,0,106,106,106,106,35,1889,1891,1886,1883,0,11,11,11,11,35,1900,1907,1905,1898,0,52,52,52,52,35,1903,1907,1900,1896,0,11,11,11,11,35,1893,1903,1896,1888,0,11,11,11,11,35,1912,1913,1911,1910,0,67,67,67,67,35,1915,1917,1916,1914,0,8,8,8,8,35,1924,1925,1923,1922,0,164,164,164,164,35,1927,1929,1928,1926,0,8,8,8,8,35,1922,1923,1913,1912,0,67,67,67,67,35,1917,1927,1926,1916,0,11,11,11,11,35,1913,1919,1918,1911,0,68,68,68,68,35,1925,1931,1930,1923,0,68,68,68,68,35,1908,1909,1912,1910,0,3,3,3,3,35,1918,1919,1917,1915,0,8,8,8,8,35,1920,1921,1924,1922,0,149,149,149,149,35,1930,1931,1929,1927,0,8,8,8,8,35,1909,1920,1922,1912,0,3,3,3,3,35,1919,1930,1927,1917,0,11,11,11,11,35,1923,1930,1919,1913,0,68,68,68,68,35,1937,1938,1936,1935,0,210,210,210,210,35,1941,1942,1940,1939,0,211,211,211,211,35,1946,1947,1945,1944,0,212,212,212,212,35,1957,1958,1960,1959,0,6,6,6,6,35,1963,1964,1962,1961,0,52,52,52,52,35,1957,1961,1962,1958,0,13,13,13,13,35,1960,1964,1963,1959,0,8,8,8,8,35,1962,1964,1960,1958,0,68,68,68,68,35,1944,1945,1938,1937,0,167,167,167,167,35,1952,1953,1942,1941,0,213,213,213,213,35,1938,1941,1939,1936,0,68,68,68,68,35,1951,1961,1957,1948,0,68,68,68,68,35,1946,1949,1951,1947,0,1,1,1,1,35,1945,1947,1951,1948,0,25,25,25,25,35,1952,1957,1959,1953,0,1,1,1,1,35,1956,1963,1961,1954,0,52,52,52,52,35,1945,1948,1957,1952,0,84,84,84,84,35,1942,1953,1959,1943,0,3,3,3,3,35,1945,1952,1941,1938,0,68,68,68,68,35,1969,1971,1970,1968,0,11,11,11,11,35,1973,1975,1974,1972,0,11,11,11,11,35,1980,1981,1979,1978,0,52,52,52,52,35,1977,1981,1980,1976,0,11,11,11,11,35,1987,1988,1986,1985,0,52,52,52,52,35,1984,1988,1987,1983,0,11,11,11,11,35,1986,1988,1984,1982,0,66,66,66,66,35,1967,1984,1983,1966,0,11,11,11,11,35,1971,1990,1989,1970,0,197,197,197,197,35,1989,1990,1977,1976,0,52,52,52,52,35,1974,1975,1967,1966,0,52,52,52,52,35,1972,1974,1971,1969,0,11,11,11,11,35,1981,1987,1985,1979,0,52,52,52,52,35,1983,1987,1981,1977,0,11,11,11,11,35,1971,1974,1966,1965,0,52,52,52,52,35,1966,1983,1977,1965,0,11,11,11,11,35,1977,1990,1971,1965,0,214,214,214,214,35,1996,1997,1999,1998,0,1,1,1,1,35,2002,2003,2001,2000,0,52,52,52,52,35,1996,2000,2001,1997,0,196,196,196,196,35,1999,2003,2002,1998,0,165,165,165,165,35,2001,2003,1999,1997,0,68,68,68,68,35,2005,2007,2006,2004,0,8,8,8,8,35,2011,2012,2010,2009,0,52,52,52,52,35,2010,2014,2013,2009,0,8,8,8,8,35,1995,2012,2011,1994,0,8,8,8,8,35,2015,2016,2002,2000,0,67,67,67,67,35,2006,2007,1995,1994,0,112,112,112,112,35,1995,2007,2005,1992,0,68,68,68,68,35,1991,1993,2000,1996,0,149,149,149,149,35,1998,2002,1995,1992,0,165,165,165,165,35,2012,2016,2015,2010,0,52,52,52,52,35,2015,2017,2014,2010,0,8,8,8,8,35,2005,2008,1998,1992,0,52,52,52,52,35,2002,2016,2012,1995,0,8,8,8,8,35,1935,1936,1873,1872,0,215,215,215,215,35,1939,1940,1881,1880,0,178,178,178,178,35,1936,1939,1880,1873,0,58,58,58,58,35,1898,1969,1968,1897,0,11,11,11,11,35,1906,1973,1972,1905,0,11,11,11,11,35,1905,1972,1969,1898,0,11,11,11,11,35,1996,1998,1925,1924,0,178,178,178,178,35,1929,2005,2004,1928,0,8,8,8,8,35,1921,1991,1996,1924,0,2,2,2,2,35,1931,2008,2005,1929,0,11,11,11,11,35,1998,2008,1931,1925,0,58,58,58,58,35,1985,1986,1934,1933,0,52,52,52,52,35,1979,1985,1933,1932,0,52,52,52,52,35,1865,1909,1908,1863,0,58,58,58,58,35,1881,1921,1920,1879,0,58,58,58,58,35,1879,1920,1909,1865,0,58,58,58,58,35,1942,1993,1991,1940,0,58,58,58,58,35,2013,2014,1956,1955,0,112,112,112,112,35,1963,2017,2015,1959,0,58,58,58,58,35,1942,1943,2000,1993,0,1,1,1,1,35,2014,2017,1963,1956,0,52,52,52,52,35,1959,2015,2000,1943,0,58,58,58,58,35,1914,1916,1892,1890,0,8,8,8,8,35,1926,1928,1906,1902,0,8,8,8,8,35,1916,1926,1902,1892,0,11,11,11,11,35,2004,2006,1975,1973,0,8,8,8,8,35,1984,2011,2009,1982,0,112,112,112,112,35,2009,2013,1986,1982,0,8,8,8,8,35,1975,2006,1994,1967,0,52,52,52,52,35,1994,2011,1984,1967,0,11,11,11,11,35,1986,2013,1955,1934,0,52,52,52,52,35,1928,2004,1973,1906,0,8,8,8,8,35,1940,1991,1921,1881,0,58,58,58,58,35,2019,2022,2021,2018,0,184,184,184,184,35,2027,2028,2026,2025,0,52,52,52,52,35,2024,2028,2027,2023,0,184,184,184,184,35,2035,2036,2034,2033,0,204,204,204,204,35,2022,2036,2035,2021,0,185,185,185,185,35,2034,2036,2022,2020,0,68,68,68,68,35,2029,2030,2019,2018,0,52,52,52,52,35,2021,2031,2029,2018,0,216,216,216,216,35,2022,2027,2025,2020,0,52,52,52,52,35,2023,2027,2022,2019,0,187,187,187,187,35,2030,2032,2023,2019,0,112,112,112,112,35,2025,2037,2034,2020,0,188,188,188,188,35,2043,2044,2042,2041,0,52,52,52,52,35,2040,2044,2043,2039,0,184,184,184,184,35,2042,2044,2040,2038,0,68,68,68,68,35,2040,2046,2045,2038,0,183,183,183,183,35,2028,2043,2041,2026,0,52,52,52,52,35,2039,2043,2028,2024,0,184,184,184,184,35,2050,2051,2049,2048,0,112,112,112,112,35,2056,2057,2055,2054,0,52,52,52,52,35,2053,2057,2056,2052,0,11,11,11,11,35,2060,2061,2059,2058,0,52,52,52,52,35,2059,2063,2062,2058,0,11,11,11,11,35,2066,2067,2065,2064,0,52,52,52,52,35,2062,2063,2051,2050,0,201,201,201,201,35,2051,2063,2059,2047,0,66,66,66,66,35,2064,2065,2053,2052,0,201,201,201,201,35,2051,2056,2054,2049,0,52,52,52,52,35,2052,2056,2051,2047,0,11,11,11,11,35,2061,2066,2064,2059,0,52,52,52,52,35,2059,2064,2052,2047,0,201,201,201,201,35,2070,2071,2069,2068,0,52,52,52,52,35,2072,2073,2070,2068,0,96,96,96,96,35,2079,2080,2078,2077,0,52,52,52,52,35,2077,2078,2071,2070,0,217,217,217,217,35,2071,2076,2074,2069,0,52,52,52,52,35,2078,2081,2076,2071,0,200,200,200,200,35,2082,2083,2061,2060,0,52,52,52,52,35,2057,2073,2072,2055,0,52,52,52,52,35,2070,2073,2057,2053,0,11,11,11,11,35,2067,2079,2077,2065,0,112,112,112,112,35,2065,2077,2070,2053,0,201,201,201,201,35,1934,2067,2066,1933,0,11,11,11,11,35,1933,2066,2061,1932,0,11,11,11,11,35,1950,2075,2074,1949,0,7,7,7,7,35,2074,2076,1951,1949,0,167,167,167,167,35,1956,2080,2079,1955,0,8,8,8,8,35,2078,2080,1956,1954,0,67,67,67,67,35,1961,2081,2078,1954,0,8,8,8,8,35,2076,2081,1961,1951,0,68,68,68,68,35,1979,2083,2082,1978,0,11,11,11,11,35,1955,2079,2067,1934,0,11,11,11,11,35,2061,2083,1979,1932,0,218,218,218,218,35,2029,2031,1869,1867,0,59,59,59,59,35,1877,2035,2033,1875,0,204,204,204,204,35,1869,2031,2021,1861,0,162,162,162,162,35,2021,2035,1877,1861,0,185,185,185,185,35,108,109,1185,1184,0,0,0,0,0,35,112,1186,1187,113,0,2,2,2,2,35,108,1184,1186,112,0,3,3,3,3,35,128,1194,1195,129,0,2,2,2,2,35,132,1197,1198,133,0,2,2,2,2,35,125,1193,1194,128,0,5,5,5,5,35,125,133,1198,1193,0,4,4,4,4,35,113,1187,1197,132,0,2,2,2,2,35,218,1215,1216,219,0,3,3,3,3,35,223,224,1220,1219,0,37,37,37,37,35,216,1213,1215,218,0,2,2,2,2,35,229,1223,1220,224,0,11,11,11,11,35,216,223,1219,1213,0,12,12,12,12,35,245,1237,1238,246,0,2,2,2,2,35,249,1245,1246,250,0,2,2,2,2,35,246,1238,1245,249,0,2,2,2,2,35,278,1263,1264,279,0,2,2,2,2,35,282,283,1268,1267,0,37,37,37,37,35,279,1264,1268,283,0,2,2,2,2,35,219,1216,1237,245,0,2,2,2,2,35,229,282,1267,1223,0,12,12,12,12,35,129,1195,1263,278,0,3,3,3,3,35,446,1411,1412,447,0,2,2,2,2,35,450,1416,1417,451,0,2,2,2,2,35,447,1412,1416,450,0,3,3,3,3,35,466,1435,1436,467,0,3,3,3,3,35,1443,1444,478,477,0,67,67,67,67,35,467,1436,1439,468,0,3,3,3,3,35,478,1444,1441,473,0,8,8,8,8,35,1439,1443,477,468,0,68,68,68,68,35,1459,1460,512,511,0,67,67,67,67,35,518,1463,1464,519,0,3,3,3,3,35,512,1460,1463,518,0,3,3,3,3,35,451,1417,1435,466,0,2,2,2,2,35,1441,1459,511,473,0,68,68,68,68,35,568,1568,1569,569,0,2,2,2,2,35,574,1577,1578,575,0,3,3,3,3,35,569,1569,1571,571,0,5,5,5,5,35,1571,1577,574,571,0,57,57,57,57,35,586,1588,1589,587,0,2,2,2,2,35,1595,1596,591,590,0,58,58,58,58,35,587,1589,1595,590,0,2,2,2,2,35,575,1578,1588,586,0,3,3,3,3,35,519,1464,1568,568,0,3,3,3,3,35,700,701,1635,1634,0,12,12,12,12,35,705,1638,1637,704,0,11,11,11,11,35,704,1637,1635,701,0,8,8,8,8,35,719,1644,1643,718,0,11,11,11,11,35,725,1656,1655,724,0,11,11,11,11,35,724,1655,1654,721,0,80,80,80,80,35,719,721,1654,1644,0,4,4,4,4,35,718,1643,1638,705,0,11,11,11,11,35,822,1667,1666,821,0,8,8,8,8,35,826,827,1671,1670,0,37,37,37,37,35,826,1670,1667,822,0,11,11,11,11,35,852,853,1687,1686,0,37,37,37,37,35,862,1695,1694,861,0,8,8,8,8,35,852,1686,1690,856,0,2,2,2,2,35,861,1694,1692,859,0,11,11,11,11,35,853,859,1692,1687,0,12,12,12,12,35,883,1711,1710,882,0,11,11,11,11,35,887,1717,1716,886,0,11,11,11,11,35,886,1716,1711,883,0,8,8,8,8,35,882,1710,1695,862,0,11,11,11,11,35,827,856,1690,1671,0,0,0,0,0,35,821,1666,1656,725,0,8,8,8,8,35,1862,1863,1056,1055,0,67,67,67,67,35,1062,1867,1866,1061,0,11,11,11,11,35,1061,1866,1862,1055,0,8,8,8,8,35,1084,1883,1882,1083,0,11,11,11,11,35,1088,1890,1889,1087,0,11,11,11,11,35,1087,1889,1883,1084,0,11,11,11,11,35,1910,1911,1107,1106,0,67,67,67,67,35,1110,1915,1914,1109,0,8,8,8,8,35,1100,1908,1910,1106,0,3,3,3,3,35,1111,1918,1915,1110,0,8,8,8,8,35,1911,1918,1111,1107,0,68,68,68,68,35,1109,1914,1890,1088,0,8,8,8,8,35,1863,1908,1100,1056,0,58,58,58,58,35,1161,2024,2023,1160,0,8,8,8,8,35,1165,2030,2029,1164,0,11,11,11,11,35,1167,2032,2030,1165,0,80,80,80,80,35,2023,2032,1167,1160,0,57,57,57,57,35,1179,2040,2039,1178,0,11,11,11,11,35,2045,2046,1183,1182,0,68,68,68,68,35,1183,2046,2040,1179,0,11,11,11,11,35,1178,2039,2024,1161,0,8,8,8,8,35,1164,2029,1867,1062,0,8,8,8,8,35,1,592,594,3,0,12,12,12,12,35,6,7,597,596,0,1,1,1,1,35,1,6,596,592,0,6,6,6,6,35,18,19,603,602,0,1,1,1,1,35,24,25,609,608,0,1,1,1,1,35,19,24,608,603,0,6,6,6,6,35,7,18,602,597,0,1,1,1,1,35,63,654,656,65,0,12,12,12,12,35,71,662,664,73,0,12,12,12,12,35,65,656,662,71,0,12,12,12,12,35,99,690,692,101,0,12,12,12,12,35,107,698,700,109,0,12,12,12,12,35,101,692,698,107,0,12,12,12,12,35,73,664,690,99,0,12,12,12,12,35,38,622,618,36,0,68,68,68,68,35,144,728,726,142,0,68,68,68,68,35,163,746,744,161,0,68,68,68,68,35,161,744,728,144,0,68,68,68,68,35,267,268,800,799,0,6,6,6,6,35,271,272,802,801,0,6,6,6,6,35,268,271,801,800,0,1,1,1,1,35,290,291,829,828,0,1,1,1,1,35,294,295,833,832,0,1,1,1,1,35,291,294,832,829,0,1,1,1,1,35,272,290,828,802,0,1,1,1,1,35,267,799,746,163,0,68,68,68,68,35,25,36,618,609,0,6,6,6,6,35,3,594,654,63,0,12,12,12,12,35,142,726,622,38,0,68,68,68,68,35,1639,1640,1192,1191,0,52,52,52,52,35,1188,1636,1639,1191,0,12,12,12,12,35,1634,1636,1188,1185,0,112,112,112,112,35,1645,1646,1202,1201,0,52,52,52,52,35,1659,1660,1212,1211,0,52,52,52,52,35,1658,1659,1211,1208,0,112,112,112,112,35,1202,1646,1658,1208,0,12,12,12,12,35,1640,1645,1201,1192,0,52,52,52,52,35,1674,1675,1281,1280,0,112,112,112,112,35,1283,1678,1680,1285,0,12,12,12,12,35,1675,1678,1283,1281,0,52,52,52,52,35,1363,1364,1747,1746,0,6,6,6,6,35,1345,1736,1738,1347,0,12,12,12,12,35,1366,1749,1751,1368,0,12,12,12,12,35,1364,1368,1751,1747,0,1,1,1,1,35,1347,1738,1749,1366,0,12,12,12,12,35,1285,1680,1736,1345,0,0,0,0,0,35,1822,1823,1381,1380,0,112,112,112,112,35,1825,1826,1385,1384,0,112,112,112,112,35,1385,1826,1829,1387,0,12,12,12,12,35,1823,1825,1384,1381,0,52,52,52,52,35,1838,1839,1403,1402,0,52,52,52,52,35,1843,1844,1408,1407,0,52,52,52,52,35,1839,1843,1407,1403,0,52,52,52,52,35,1829,1838,1402,1387,0,52,52,52,52,35,1660,1674,1280,1212,0,112,112,112,112,35,1363,1746,1822,1380,0,12,12,12,12,35,329,911,915,331,0,12,12,12,12,35,485,486,1024,1023,0,1,1,1,1,35,489,490,1028,1027,0,1,1,1,1,35,486,489,1027,1024,0,1,1,1,1,35,409,993,995,411,0,12,12,12,12,35,428,1011,1013,430,0,12,12,12,12,35,411,995,1011,428,0,12,12,12,12,35,505,506,1036,1035,0,6,6,6,6,35,507,508,1040,1039,0,6,6,6,6,35,506,507,1039,1036,0,6,6,6,6,35,490,505,1035,1028,0,1,1,1,1,35,430,1013,1040,508,0,12,12,12,12,35,340,341,925,924,0,1,1,1,1,35,344,345,929,928,0,6,6,6,6,35,341,344,928,925,0,6,6,6,6,35,350,351,941,940,0,1,1,1,1,35,357,948,946,355,0,68,68,68,68,35,351,355,946,941,0,1,1,1,1,35,345,350,940,929,0,6,6,6,6,35,547,1138,1136,545,0,68,68,68,68,35,555,1146,1144,553,0,68,68,68,68,35,553,1144,1138,547,0,68,68,68,68,35,583,1174,1172,581,0,68,68,68,68,35,591,1182,1180,589,0,68,68,68,68,35,589,1180,1174,583,0,68,68,68,68,35,581,1172,1146,555,0,68,68,68,68,35,329,340,924,911,0,6,6,6,6,35,331,915,993,409,0,12,12,12,12,35,545,1136,948,357,0,68,68,68,68,35,1477,1872,1870,1475,0,68,68,68,68,35,1874,1875,1481,1480,0,112,112,112,112,35,1870,1874,1480,1475,0,112,112,112,112,35,1546,1937,1935,1544,0,68,68,68,68,35,1563,1946,1944,1561,0,68,68,68,68,35,1566,1567,1950,1949,0,6,6,6,6,35,1563,1566,1949,1946,0,6,6,6,6,35,1561,1944,1937,1546,0,68,68,68,68,35,1544,1935,1872,1477,0,58,58,58,58,35,2048,2049,1613,1612,0,52,52,52,52,35,2054,2055,1619,1618,0,52,52,52,52,35,2049,2054,1618,1613,0,52,52,52,52,35,2068,2069,1628,1627,0,112,112,112,112,35,1630,2072,2068,1627,0,68,68,68,68,35,2074,2075,1633,1632,0,112,112,112,112,35,2069,2074,1632,1628,0,112,112,112,112,35,2055,2072,1630,1619,0,52,52,52,52,35,2033,2034,1586,1585,0,52,52,52,52,35,2025,2026,1582,1581,0,112,112,112,112,35,2034,2037,1587,1586,0,112,112,112,112,35,1587,2037,2025,1581,0,68,68,68,68,35,2041,2042,1594,1593,0,52,52,52,52,35,1594,2042,2038,1590,0,68,68,68,68,35,2038,2045,1596,1590,0,52,52,52,52,35,2026,2041,1593,1582,0,112,112,112,112,35,1875,2033,1585,1481,0,112,112,112,112,35,1633,2075,1950,1567,0,68,68,68,68,35,51,53,298,296,0,2,2,2,2,35,304,306,61,59,0,11,11,11,11,35,51,296,304,59,0,1,1,1,1,35,176,178,360,358,0,13,13,13,13,35,366,368,186,184,0,36,36,36,36,35,196,376,378,198,0,1,1,1,1,35,194,198,378,374,0,2,2,2,2,35,386,388,206,204,0,11,11,11,11,35,178,194,374,360,0,3,3,3,3,35,368,386,204,186,0,8,8,8,8,35,236,431,432,238,0,1,1,1,1,35,236,240,434,431,0,2,2,2,2,35,248,250,446,444,0,2,2,2,2,35,248,444,452,254,0,41,41,41,41,35,240,254,452,434,0,2,2,2,2,35,293,483,485,295,0,1,1,1,1,35,238,432,479,287,0,6,6,6,6,35,196,287,479,376,0,50,50,50,50,35,388,483,293,206,0,51,51,51,51,35,53,176,358,298,0,13,13,13,13,35,306,366,184,61,0,36,36,36,36,35,643,645,890,888,0,2,2,2,2,35,896,898,653,651,0,11,11,11,11,35,643,888,896,651,0,79,79,79,79,35,768,770,952,950,0,22,22,22,22,35,958,960,778,776,0,36,36,36,36,35,784,786,968,966,0,2,2,2,2,35,796,976,978,798,0,1,1,1,1,35,974,976,796,794,0,11,11,11,11,35,770,784,966,952,0,3,3,3,3,35,960,974,794,778,0,8,8,8,8,35,833,1023,1025,835,0,1,1,1,1,35,870,1064,1066,871,0,1,1,1,1,35,1066,1069,875,871,0,11,11,11,11,35,1081,1083,887,885,0,11,11,11,11,35,879,1077,1081,885,0,106,106,106,106,35,1069,1077,879,875,0,11,11,11,11,35,839,1031,1064,870,0,1,1,1,1,35,786,835,1025,968,0,13,13,13,13,35,978,1031,839,798,0,110,110,110,110,35,645,768,950,890,0,13,13,13,13,35,898,958,776,653,0,36,36,36,36,35,1244,1409,1411,1246,0,1,1,1,1,35,1244,1248,1413,1409,0,2,2,2,2,35,1262,1426,1424,1260,0,52,52,52,52,35,1258,1260,1424,1422,0,2,2,2,2,35,1248,1258,1422,1413,0,3,3,3,3,35,1318,1320,1484,1482,0,2,2,2,2,35,1338,1499,1497,1336,0,52,52,52,52,35,1334,1336,1497,1495,0,2,2,2,2,35,1334,1495,1493,1325,0,112,112,112,112,35,1320,1325,1493,1484,0,152,152,152,152,35,1262,1318,1482,1426,0,2,2,2,2,35,1395,1601,1599,1393,0,52,52,52,52,35,1395,1397,1603,1601,0,2,2,2,2,35,1408,1612,1610,1406,0,112,112,112,112,35,1406,1610,1603,1397,0,52,52,52,52,35,1393,1599,1597,1373,0,112,112,112,112,35,1338,1373,1597,1499,0,2,2,2,2,35,1717,1882,1884,1719,0,1,1,1,1,35,1884,1887,1722,1719,0,11,11,11,11,35,1735,1899,1897,1733,0,52,52,52,52,35,1895,1899,1735,1731,0,11,11,11,11,35,1887,1895,1731,1722,0,11,11,11,11,35,1968,1970,1806,1804,0,11,11,11,11,35,1819,1980,1978,1817,0,52,52,52,52,35,1976,1980,1819,1815,0,11,11,11,11,35,1821,1989,1976,1815,0,52,52,52,52,35,1970,1989,1821,1806,0,197,197,197,197,35,1897,1968,1804,1733,0,11,11,11,11,35,1846,2050,2048,1844,0,112,112,112,112,35,1854,2060,2058,1852,0,52,52,52,52,35,2058,2062,1856,1852,0,11,11,11,11,35,1856,2062,2050,1846,0,201,201,201,201,35,1858,2082,2060,1854,0,52,52,52,52,35,1978,2082,1858,1817,0,11,11,11,11,35,295,485,1023,833,0,1,1,1,1,35,1844,2048,1612,1408,0,52,52,52,52,35,250,1246,1411,446,0,2,2,2,2,35,1083,1882,1717,887,0,11,11,11,11,35,109,700,1634,1185,0,12,12,12,12,35,1596,2045,1182,591,0,68,68,68,68],\n    "uvs":[],\n    "normals":[0,-1,0,1,0,0,0,-0,-1,0,-0,-1,0,-1,1.71661e-07,0,-8.58306e-07,-1,1,0,0,1.71661e-07,2.14577e-07,1,0,-0,1,-7.3669e-15,1,-8.58306e-08,1.71661e-07,0,1,0,-0,1,0,-1,0,-3.43323e-07,0,-1,-3.43323e-07,0,-1,5.89352e-14,-1,1.71661e-07,-3.43323e-07,-8.58306e-07,-1,0,-8.58306e-07,-1,0,-1,1.71661e-07,-3.43323e-07,0,-1,-3.43323e-07,0,-1,-3.43323e-07,0,-1,-3.43323e-07,0,-1,-3.43323e-07,-8.58306e-07,-1,5.89353e-14,-1,1.71661e-07,-3.43323e-07,0,-1,8.58307e-08,2.14577e-07,1,3.43323e-07,0,1,-2.21007e-14,1,-8.58307e-08,8.58307e-08,2.14577e-07,1,0,1,-8.58306e-08,1.71661e-07,2.14577e-07,1,-7.36691e-15,1,-8.58307e-08,8.58307e-08,0,1,8.58307e-08,0,1,1.71661e-07,0,1,3.43323e-07,0,1,0,-1,8.58307e-08,1,0,-3.43323e-07,1,0,-3.43323e-07,0,-1,4.29153e-08,1,0,-3.43323e-07,1.47338e-14,-1,8.58307e-08,1,0,-3.43323e-07,1,0,-3.43323e-07,-1,0,3.43323e-07,-3.43323e-07,0,-1,4.42015e-14,-1,8.58307e-08,3.43323e-07,0,1,-2.21007e-14,1,-8.58307e-08,-6.86646e-07,0,-1,3.43323e-07,0,1,-1,0,0,-6.86646e-07,0,-1,-2.21007e-14,1,-8.58306e-08,7.3669e-15,-1,8.58306e-08,1.71661e-07,0,1,0,1,-1.71661e-07,0,1,0,3.43323e-07,0,1,1.47338e-14,-1,8.58307e-08,7.3669e-15,-1,8.58307e-08,7.36691e-15,-1,8.58307e-08,8.58307e-08,0,1,8.58307e-08,0,1,1.71661e-07,0,1,0,1,-4.29153e-08,0,1,-8.58307e-08,0,1,0,-1.47338e-14,1,-8.58307e-08,-6.86646e-07,0,-1,-4.42015e-14,1,-8.58307e-08,3.43323e-07,0,1,2.21007e-14,-1,8.58307e-08,-6.86646e-07,0,-1,-5.89352e-14,1,-1.71661e-07,0,1,-1.71661e-07,-5.89353e-14,1,-1.71661e-07,2.21007e-14,-1,8.58306e-08,1,0,-1.37329e-06,0,8.58306e-07,1,1,-1.1787e-12,-1.37329e-06,-1.71661e-07,-2.14577e-07,-1,-7.3669e-15,1,-8.58307e-08,1,0,-1.37329e-06,-1.71661e-07,0,-1,1,0,-1.37329e-06,5.89353e-14,-1,1.71661e-07,3.43323e-07,8.58306e-07,1,0,8.58306e-07,1,3.43323e-07,0,1,3.43323e-07,8.58307e-07,1,5.89352e-14,-1,1.71661e-07,-8.58307e-08,-2.14577e-07,-1,-2.21007e-14,1,-8.58307e-08,-8.58307e-08,-2.14577e-07,-1,0,1,-8.58307e-08,-1.71661e-07,-2.14577e-07,-1,-7.36691e-15,1,-8.58307e-08,-8.58307e-08,0,-1,-8.58307e-08,0,-1,-1.71661e-07,0,-1,1.47338e-14,-1,8.58306e-08,1,0,-3.43323e-07,1,0,-3.43323e-07,1,0,-3.43323e-07,1,0,-3.43323e-07,-2.21007e-14,1,-8.58307e-08,3.43323e-07,0,1,4.42014e-14,-1,8.58306e-08,6.86646e-07,0,1,6.86646e-07,0,1,-1,0,0,3.43323e-07,0,1,1,0,-3.43323e-07,6.86646e-07,0,1,-2.21007e-14,1,-8.58307e-08,1,0,-1.37329e-06,7.3669e-15,-1,8.58307e-08,-1.71661e-07,0,-1,1.47338e-14,-1,8.58307e-08,7.3669e-15,-1,8.58307e-08,7.36691e-15,-1,8.58307e-08,-8.58307e-08,0,-1,-8.58307e-08,0,-1,-1.71661e-07,0,-1,-1.47338e-14,1,-8.58306e-08,1,0,-3.43323e-07,2.21007e-14,-1,8.58307e-08,-4.42014e-14,1,-8.58306e-08,3.43323e-07,0,1,6.86646e-07,0,1,-5.89353e-14,1,-1.71661e-07,-5.89352e-14,1,-1.71661e-07,2.21007e-14,-1,8.58307e-08,-3.43323e-07,0,-1,-1,0,3.43323e-07,-3.43323e-07,0,-1,-1,0,6.86645e-07,-3.43322e-07,0,-1,-3.43323e-07,-8.58307e-07,-1,-1.71661e-07,0,-1,-3.43323e-07,0,-1,5.89352e-14,-1,8.58307e-08,6.86645e-07,0,1,0,-1,4.29153e-08,2.94676e-14,-1,8.58306e-08,1.47338e-14,-1,8.58306e-08,-3.43322e-07,0,-1,-6.86645e-07,0,-1,6.86645e-07,0,1,-6.86645e-07,0,-1,-1.37329e-06,0,-1,2.94676e-14,-1,4.29153e-08,4.42014e-14,-1,8.58307e-08,2.21007e-14,-1,8.58307e-08,2.21007e-14,-1,8.58307e-08,0,-1,8.58307e-08,0,-1,8.58307e-08,7.36691e-15,-1,8.58306e-08,0,-1,4.29154e-08,-1,0,6.86645e-07,-1,0,3.43323e-07,0,1,-4.29153e-08,-5.89352e-14,1,-8.58307e-08,6.86645e-07,0,1,-2.94676e-14,1,-8.58306e-08,-7.3669e-15,1,-8.58307e-08,-1,0,6.86645e-07,-1.47338e-14,1,-8.58306e-08,-1,0,6.86645e-07,-1,0,3.43323e-07,-2.94676e-14,1,-4.29153e-08,-4.42014e-14,1,-8.58307e-08,-2.21007e-14,1,-8.58307e-08,-2.21007e-14,1,-8.58307e-08,0,1,-8.58307e-08,-7.3669e-15,1,-8.58307e-08,0,1,-8.58307e-08,-7.36691e-15,1,-8.58306e-08,0,1,-4.29154e-08,-1,0,6.86645e-07,3.43323e-07,0,1,-1,0,3.43323e-07,3.43323e-07,0,1,3.43323e-07,0,1,5.89352e-14,-1,1.71661e-07,3.43323e-07,8.58307e-07,1,1.71661e-07,0,1,2.94676e-14,-1,8.58307e-08,1.47338e-14,-1,8.58307e-08,0,-1,4.29153e-08,2.21007e-14,-1,8.58307e-08,4.42014e-14,-1,8.58306e-08,2.21007e-14,-1,8.58307e-08,0,-1,8.58306e-08,-6.86645e-07,0,-1,1.37329e-06,0,1,2.94676e-14,-1,4.29154e-08,7.36691e-15,-1,8.58307e-08,-1,0,1.37329e-06,-1,0,1.37329e-06,-1,0,1.37329e-06,0,-1,4.29154e-08,-1,0,6.86645e-07,-2.94676e-14,1,-8.58307e-08,3.43323e-07,0,1,-1.47338e-14,1,-8.58307e-08,-1,0,6.86645e-07,0,1,-4.29153e-08,-2.21007e-14,1,-8.58307e-08,-4.42014e-14,1,-8.58306e-08,-2.21007e-14,1,-8.58307e-08,0,1,-8.58306e-08,-2.94676e-14,1,-4.29154e-08,-7.36691e-15,1,-8.58307e-08,-5.89352e-14,1,-1.71661e-07,-1,0,1.37329e-06,0,1,-4.29154e-08],\n    "materials":[{\n        "colorEmissive":[0,0,0],\n        "shading":"phong",\n        "opacity":1,\n        "transparent":false,\n        "visible":true,\n        "wireframe":false,\n        "blending":1,\n        "depthTest":true,\n        "depthWrite":true,\n        "doubleSided":false,\n        "DbgName":"Material.001",\n        "DbgColor":15658734,\n        "DbgIndex":0,\n        "colorDiffuse":[0.0300328,0.640026,0.0864141],\n        "specularCoef":50,\n        "colorSpecular":[0.5,0.5,0.5]\n    }]\n}')),e.turretMesh=n.parse(JSON.parse('{\n    "metadata":{\n        "type":"Geometry",\n        "generator":"io_three",\n        "version":3,\n        "vertices":346,\n        "normals":696,\n        "materials":1,\n        "uvs":0,\n        "faces":728\n    },\n    "vertices":[-0.97819,-1.01042,0.051466,-0.968033,-1.01042,-0.261755,-0.993159,0.600694,-0.259232,-1.37434,0.517361,0.246147,-1.35872,0.518939,-0.23564,-1.0783,0.457933,0.112336,-0.592533,-1.01042,0.767924,-0.401215,-1.01042,0.936625,0.218527,-1.01042,1.01896,-0.389312,0.504735,0.848505,-0.5882,0.96875,0.808634,0.02866,0.96875,0.99844,-0.832857,-1.01042,0.591034,-0.968289,-1.01042,0.366855,-0.864725,-1.01042,0.378045,-0.794731,-1.01042,0.699927,-0.870113,0.864583,0.581022,-0.966171,0.685185,0.353987,-0.602304,0.447917,0.615945,-0.651527,0.430556,0.505854,-0.945909,0.447917,0.159727,-0.781148,0.438447,0.177529,-0.934718,0.447917,0.0561631,-0.912338,0.517361,-0.150965,-0.745802,0.373512,-0.237743,-0.682523,0.261029,0.146277,-0.450861,0.135417,0.123412,-0.590562,0.196181,-0.255894,-0.41065,0.497259,0.733045,-0.622149,0.291667,0.411739,-0.361969,0.259615,0.573408,-0.373016,0.352431,0.675644,-0.443029,0.151864,0.442099,-0.39313,0.03125,0.156591,-0.229354,0.0643939,0.315731,-1.44427,0.732639,0.408556,-1.49213,1.33854,0.366669,-1.4628,1.15625,0.095146,-1.45361,0.615741,0.279491,-1.46533,0.764946,0.118571,-1.54331,0.795986,-0.129336,-1.53961,1.15104,-0.163598,-1.48015,1.38542,-0.00277154,-1.23824,0.747396,0.517623,-1.16939,0.616186,0.288709,-0.866206,0.945602,0.482658,-1.3996,1.17708,0.479906,-1.18775,1.17708,0.45866,-0.84073,1.29469,0.433024,-1.2419,0.909226,0.232518,-1.24989,0.796649,0.0640182,-0.945909,0.864583,0.159727,-1.00364,0.834821,-0.0909808,-1.03828,0.864583,0.0449729,-1.17278,1.05556,0.158496,-1.11315,1.15175,-0.157204,-0.983936,1.17708,0.101425,-1.47492,1.44618,0.20734,-0.845385,1.43444,0.320264,-0.76993,1.15476,0.885959,-0.884765,1.13244,0.725123,-0.759735,0.96875,0.860867,-0.465076,0.666171,0.800405,-0.391666,0.725694,0.848251,-0.519385,1.06796,1.14877,-0.512213,1.27431,0.800301,-0.345004,1.15625,1.06284,-0.31935,0.974537,0.987031,-0.227052,1.23495,0.940875,-0.470612,1.48214,0.785528,-0.140617,1.53125,0.837094,-0.864725,0.552083,0.378045,-0.864725,0.65625,0.378045,-0.783541,0.552083,0.596363,-0.783541,0.65625,0.596363,-0.651035,0.66183,0.582106,-0.783541,0.760417,0.596363,-0.770113,0.65625,0.472086,-0.757431,0.65625,0.354714,-0.799132,1.02083,0.662032,-0.658283,1.17708,0.649187,-0.945909,0.552083,0.159727,-0.853535,0.552083,0.274481,-0.853535,0.65625,0.274481,-0.780206,0.571023,0.177631,-0.789591,0.564103,-0.317313,-0.934718,0.864583,0.056163,-0.749971,0.552083,0.285671,-0.553783,0.61767,0.132248,-0.587604,0.552083,0.722307,-0.587604,0.65625,0.722307,-0.15287,0.659314,-0.0689039,-0.68256,1.38542,0.631452,-0.634076,1.53125,0.570603,-0.709379,1.54167,0.39483,-0.633172,1.71686,0.350678,-0.789984,1.62926,0.281348,-0.5066,1.61742,0.578662,-0.269452,1.68403,0.686834,-0.259798,1.78581,0.597485,-0.462598,1.79437,0.427315,-0.372998,1.89792,0.398434,-0.516899,1.87002,0.221049,-0.248023,1.95255,0.165285,-0.764014,-1.01042,-0.55403,-0.413199,-1.01042,-0.891797,-0.867578,-1.01042,-0.56522,-0.741634,-1.01042,-0.761158,-0.63807,-1.01042,-0.749968,-0.62688,-1.01042,-0.853532,-0.193857,-1.01042,-0.982457,-0.884763,0.727273,-0.406176,-0.656614,0.475694,-0.542426,-0.729326,0.924107,-0.730925,-0.492795,0.385417,-0.639975,-0.331547,0.0520833,-0.192983,-0.191539,0.073206,-0.357466,-0.500371,0.277083,-0.493306,-0.31905,0.135417,-0.516429,-0.266692,0.239583,-0.585422,-0.423871,0.495994,-0.718442,-0.225679,0.313368,-0.687947,-0.183035,0.422917,-0.805574,0.120448,0.690972,-0.982329,-0.192019,0.510417,-0.911318,-0.412558,0.96875,-0.897728,-1.43208,0.666667,-0.327612,-1.43755,0.760417,-0.461709,-1.35315,1.33984,-0.349206,-1.4491,1.17708,-0.401045,-1.3522,1.23661,-0.512811,-0.880322,1.31597,-0.447272,-0.943166,1.125,-0.83532,-1.39732,1.48581,-0.252261,-0.797584,1.45486,-0.243338,-0.486893,0.638889,-0.209768,-0.638552,0.658015,-0.624292,-0.761025,1.36939,-0.557449,-0.764014,0.552083,-0.55403,-0.764014,0.65625,-0.55403,-0.63807,0.552083,-0.749968,-0.63807,0.65625,-0.749968,-0.63807,0.760417,-0.749968,-0.809049,0.981771,-0.864484,-0.76507,1.17708,-0.665466,-0.59239,1.09375,-0.834472,-0.556447,1.44697,-0.690857,-0.177152,0.686012,-0.490619,-0.519732,0.671131,-0.713898,-0.419752,0.552083,-0.831151,-0.419752,0.65625,-0.831151,-0.291223,0.733934,-0.760115,-0.420613,1.34077,-0.823185,-0.710827,1.59747,-0.44351,-0.520494,1.77059,-0.449138,-0.594546,1.5464,-0.535719,-0.38814,1.90388,-0.431095,-0.246445,1.97169,-0.218712,-0.312238,1.80208,-0.492889,-0.354552,1.63125,-0.669043,-0.28461,1.47356,-0.821312,-0.124629,1.75651,-0.653492,-0.00549646,1.60069,-0.786391,-0.75284,1.17708,-0.934496,-0.525378,1.1622,-1.01719,-0.492232,0.994792,-1.13002,-0.303879,0.916667,-0.933882,-0.201434,0.760417,-0.912335,0.0120061,0.65625,-0.948376,-0.0301907,0.930871,-0.998605,-0.237681,1.28125,-0.916252,-0.282618,1.17708,-1.13065,-0.122134,1.17708,-0.999809,-0.0642999,1.10764,-1.21184,0.229717,-1.01042,0.915392,0.436845,-1.01042,0.937772,0.33411,0.725694,0.91891,0.167069,0.420911,0.848752,0.893008,-1.01042,-0.374988,0.611119,-1.01042,0.747056,0.500412,-1.01042,0.839867,0.164386,0.135417,0.550358,0.230646,0.239583,0.629748,0.321157,0.384073,0.675168,0.183969,0.0543981,0.369121,0.445446,0.1875,0.470304,0.572096,0.362689,0.500552,0.562789,0.447917,0.741834,0.366456,0.111111,0.23168,0.407487,0.0601852,-0.148054,0.683467,0.278646,0.231009,0.724805,0.270833,-0.0788439,0.724014,-1.01042,0.654482,0.792297,-1.01042,0.557087,0.895861,-1.01042,0.568277,0.669151,0.96875,0.727133,0.805723,0.988281,0.626761,0.694328,0.46875,0.494115,0.821671,0.514205,0.285231,0.936891,0.552083,0.188542,0.0500791,0.666843,0.881014,-0.114545,0.996528,1.19251,0.092583,1.10764,1.21489,0.150417,1.17708,1.00286,0.257228,1.29221,0.925234,0.229717,0.552083,0.915391,0.229717,0.65625,0.915391,0.229717,0.760417,0.915391,0.310901,1.07986,1.13371,0.426489,0.96875,0.936653,0.521226,1.05208,1.1265,0.483919,1.17708,0.942858,0.196673,0.659927,0.639411,0.18119,0.760417,0.718064,0.292689,0.552083,0.817423,0.44443,0.645285,0.729045,0.448035,0.552083,0.834208,0.448035,0.65625,0.834208,0.562789,0.552083,0.741834,0.562789,0.65625,0.741834,0.448035,0.760417,0.834208,0.576777,0.611607,0.612379,0.691531,0.65625,0.520005,0.499817,1.28125,0.839803,0.562789,1.35565,0.741834,0.635525,0.652027,0.0686689,0.137343,1.65451,0.800638,0.15273,1.75158,0.658237,0.347916,1.83594,0.488116,0.168101,1.90625,0.251521,0.165582,2.01042,0.248392,0.321457,1.47569,0.820531,0.407443,1.55369,0.725049,0.460578,1.66753,0.596914,0.67757,1.37054,0.574625,0.61953,1.55407,0.580328,0.537026,1.79836,0.275056,0.647825,1.69213,0.33193,0.472024,1.90625,0.208162,0.824039,1.05208,0.90976,0.677543,0.552083,0.64946,0.677543,0.65625,0.64946,0.792297,0.552083,0.557086,0.792297,0.65625,0.557086,0.767101,0.725694,0.467053,0.792297,0.760417,0.557086,0.669869,1.18866,0.774359,0.840102,1.1994,0.647975,1.06857,1.05804,0.57197,0.814677,0.65625,0.349959,0.911155,0.739583,0.25561,0.825868,0.65625,0.246395,0.918241,0.725694,0.361149,0.929431,0.65625,0.257585,0.940621,0.96875,0.154021,0.840188,1.36277,0.420069,0.896695,1.11756,0.463594,1.05819,1.17708,0.408509,0.948081,1.17708,0.0849785,1.06379,1.00347,0.307026,0.77121,1.56658,0.373837,0.423517,-1.01042,-0.878215,0.831868,-1.01042,-0.486367,0.711804,-1.01042,-0.637291,0.615887,-1.01042,-0.71925,0.257637,0.0486111,-0.312674,0.409501,0.239583,-0.586885,0.278865,0.143429,-0.509141,0.397252,0.418981,-0.742874,0.560561,0.179816,-0.365071,0.618008,0.329861,-0.334853,0.741397,0.96875,-0.712832,0.452552,0.382812,-0.592836,0.736639,0.418155,-0.353785,0.69334,0.59838,-0.466411,0.708261,0.447917,-0.604496,0.627077,-1.01042,-0.822814,0.264603,0.479167,-0.86198,0.616239,0.829861,-0.819479,0.996572,-1.01042,-0.363798,0.811825,-1.01042,-0.593306,0.912285,0.96875,-0.482441,0.0311022,0.748843,-0.349375,0.272868,0.65625,-0.453636,0.0747362,0.760417,-0.882495,0.865466,0.66572,-0.273191,0.564461,0.663434,-0.606937,0.436296,0.760417,-0.511647,0.493332,0.596726,-0.693202,0.456899,0.760417,-0.799293,0.615887,0.552083,-0.71925,0.615887,0.65625,-0.71925,0.708261,0.552083,-0.604496,0.708261,0.65625,-0.604496,0.615887,0.760417,-0.71925,0.789856,0.96875,-0.59568,0.565811,1.3044,-0.79451,0.665962,1.23785,-0.643991,0.837717,1.17708,-0.653372,0.177005,1.94097,-0.212872,0.289977,1.76823,-0.611974,0.303879,1.65327,-0.740637,0.645644,1.70869,-0.19217,0.502546,1.86642,-0.117827,0.435669,1.86285,-0.408882,0.537995,1.71528,-0.483196,0.414354,1.46354,-0.793413,0.558081,1.5026,-0.71317,0.600627,1.53893,-0.578027,0.659989,1.59375,-0.400166,0.421934,0.96875,-0.949753,0.0790221,1.24337,-0.986805,0.142828,1.02662,-1.18946,0.319183,1.22019,-0.882276,0.349955,1.09028,-1.16708,0.419949,0.552083,-0.845195,0.419949,0.65625,-0.845195,0.495268,1.09896,-0.837056,0.557083,1.06134,-1.1447,0.737168,1.17708,-0.872036,0.0574756,1.51042,-0.88436,0.896994,0.552083,-0.00785225,0.859438,0.65625,-0.0642967,0.962124,0.760417,-0.105588,0.865822,0.467758,-0.308077,0.870628,0.65625,-0.167861,0.951811,0.621528,0.0504572,0.963002,0.65625,-0.0531066,0.974192,0.65625,-0.15667,0.97452,1.17708,-0.326891,0.971705,1.34201,-0.133656,1.20681,1.02827,0.0176858,1.23619,1.17708,0.00435066,0.789444,0.697917,-0.386178,0.800634,0.552083,-0.489742,0.800634,0.65625,-0.489742,0.893008,0.552083,-0.374988,0.893008,0.65625,-0.374988,0.789373,1.48214,-0.480121,0.893008,0.760417,-0.374988,1.01696,0.992788,-0.372073,0.984003,1.20023,-0.489886,1.16497,1.15104,-0.467838,0.826389,1.60352,-0.19169,0.860032,1.35252,-0.297957,0.876932,1.03819,-0.872651],\n    "faces":[34,5,2,0,0,0,0,0,34,4,5,3,0,1,1,1,34,12,6,15,0,2,2,2,34,14,6,12,0,2,2,2,34,45,14,12,0,3,3,3,34,0,6,14,0,2,2,2,34,17,0,13,0,4,4,4,34,0,14,13,0,2,2,2,34,16,45,12,0,5,5,5,34,25,26,27,0,6,6,6,34,24,21,25,0,7,7,7,34,20,0,17,0,8,8,8,34,32,29,30,0,9,9,9,34,30,29,19,0,10,10,10,34,29,32,26,0,11,11,11,34,21,29,25,0,12,12,12,34,34,33,26,0,13,13,13,34,9,10,6,0,14,14,14,34,14,17,13,0,15,15,15,34,39,4,38,0,16,16,16,34,37,42,41,0,17,17,17,34,44,38,3,0,18,18,18,34,47,46,43,0,19,19,19,34,40,39,50,0,20,20,20,34,56,54,37,0,21,21,21,34,55,56,37,0,22,22,22,34,45,47,43,0,23,23,23,34,46,35,43,0,24,24,24,34,56,52,53,0,25,25,25,34,133,57,58,0,26,26,26,34,200,9,63,0,27,27,27,34,66,64,67,0,28,28,28,34,10,67,64,0,29,29,29,34,65,64,66,0,30,30,30,34,68,66,67,0,31,31,31,34,67,63,7,0,32,32,32,34,63,10,62,0,33,33,33,34,17,45,43,0,34,34,34,34,78,75,77,0,35,35,35,34,77,75,76,0,36,36,36,34,75,74,76,0,37,37,37,34,45,48,47,0,38,38,38,34,84,87,82,0,39,39,39,34,85,88,84,0,40,40,40,34,75,62,90,0,41,41,41,34,91,62,75,0,42,42,42,34,88,91,75,0,43,43,43,34,83,78,72,0,2,2,2,34,56,86,51,0,44,44,44,34,94,58,48,0,45,45,45,34,134,133,58,0,46,46,46,34,96,134,58,0,47,47,47,34,97,69,70,0,48,48,48,34,99,97,98,0,49,49,49,34,101,102,100,0,50,50,50,34,157,102,103,0,51,51,51,34,96,58,94,0,52,52,52,34,99,100,97,0,53,53,53,34,86,50,53,0,54,54,54,34,52,86,53,0,55,55,55,34,56,51,54,0,56,56,56,34,86,56,53,0,57,57,57,34,62,9,28,0,58,58,58,34,62,200,63,0,59,59,59,34,80,60,59,0,60,60,60,34,80,59,65,0,61,61,61,34,57,42,36,0,62,62,62,34,68,69,65,0,63,63,63,34,80,92,79,0,64,64,64,34,106,104,1,0,2,2,2,34,2,106,1,0,65,65,65,34,108,107,113,0,66,66,66,34,117,27,118,0,67,67,67,34,118,27,115,0,68,68,68,34,121,120,114,0,69,69,69,34,110,105,124,0,70,70,70,34,124,105,125,0,71,71,71,34,128,129,41,0,72,72,72,34,2,4,126,0,73,73,73,34,111,126,127,0,74,74,74,34,128,130,129,0,75,75,75,34,41,127,40,0,76,76,76,34,52,55,40,0,77,77,77,34,134,128,133,0,78,78,78,34,131,128,134,0,79,79,79,34,139,113,138,0,80,80,80,34,141,145,140,0,81,81,81,34,113,145,142,0,82,82,82,34,142,148,136,0,83,83,83,34,137,113,139,0,84,84,84,34,142,145,141,0,85,85,85,34,148,142,141,0,86,86,86,34,142,136,141,0,87,87,87,34,137,106,131,0,88,88,88,34,113,144,143,0,89,89,89,34,163,144,145,0,90,90,90,34,135,91,88,0,91,91,91,34,147,91,135,0,92,92,92,34,148,147,136,0,93,93,93,34,151,150,149,0,94,94,94,34,150,151,148,0,95,95,95,34,151,147,148,0,96,96,96,34,135,88,85,0,97,97,97,34,139,85,138,0,98,98,98,34,139,136,85,0,99,99,99,34,131,106,111,0,100,100,100,34,96,153,134,0,101,101,101,34,155,146,137,0,102,102,102,34,158,154,156,0,103,103,103,34,154,159,155,0,104,104,104,34,160,146,159,0,105,105,105,34,161,162,159,0,106,106,106,34,154,155,153,0,107,107,107,34,161,159,158,0,108,108,108,34,167,110,124,0,109,109,109,34,171,164,170,0,110,110,110,34,172,173,169,0,111,111,111,34,165,166,125,0,112,112,112,34,125,164,165,0,113,113,113,34,170,110,167,0,114,114,114,34,169,110,172,0,115,115,115,34,320,170,160,0,116,116,116,34,163,132,144,0,117,117,117,34,150,125,149,0,118,118,118,34,166,151,124,0,119,119,119,34,124,151,122,0,120,120,120,34,160,170,152,0,121,121,121,34,179,180,174,0,122,122,122,34,183,177,214,0,123,123,123,34,187,180,179,0,124,124,124,34,186,183,187,0,125,125,125,34,190,185,186,0,126,126,126,34,191,269,190,0,127,127,127,34,269,188,185,0,128,128,128,34,185,181,182,0,129,129,129,34,189,184,188,0,130,130,130,34,188,184,185,0,131,131,131,34,184,34,181,0,132,132,132,34,178,193,192,0,122,122,122,34,178,194,193,0,133,133,133,34,197,190,186,0,134,134,134,34,197,191,190,0,135,135,135,34,324,197,198,0,136,136,136,34,199,194,279,0,137,137,137,34,195,187,179,0,138,138,138,34,28,9,177,0,139,139,139,34,203,202,11,0,140,140,140,34,203,204,68,0,141,141,141,34,68,11,201,0,142,142,142,34,206,8,205,0,143,143,143,34,176,206,205,0,144,144,144,34,207,8,206,0,145,145,145,34,209,210,208,0,146,146,146,34,91,212,200,0,147,147,147,34,213,200,212,0,148,148,148,34,225,212,91,0,149,149,149,34,217,215,216,0,150,150,150,34,219,223,218,0,151,151,151,34,223,217,216,0,152,152,152,34,215,214,216,0,153,153,153,34,219,221,218,0,154,154,154,34,220,215,217,0,155,155,155,34,224,223,219,0,156,156,156,34,223,220,217,0,152,152,152,34,215,213,212,0,157,157,157,34,225,222,212,0,158,158,158,34,228,101,100,0,159,159,159,34,232,226,231,0,160,160,160,34,235,224,234,0,161,161,161,34,238,228,236,0,162,162,162,34,229,101,228,0,163,163,163,34,227,99,98,0,164,164,164,34,243,196,242,0,165,165,165,34,196,241,240,0,166,166,166,34,194,243,242,0,167,167,167,34,194,196,245,0,168,168,168,34,241,195,240,0,169,169,169,34,245,196,243,0,170,170,170,34,196,195,241,0,171,171,171,34,194,245,243,0,167,167,167,34,246,195,239,0,172,172,172,34,254,252,250,0,173,173,173,34,250,249,251,0,174,174,174,34,252,249,250,0,175,175,175,34,253,250,251,0,176,176,176,34,255,256,258,0,177,177,177,34,259,258,257,0,178,178,178,34,259,254,258,0,179,179,179,34,198,197,242,0,180,180,180,34,245,244,243,0,181,181,181,34,255,196,256,0,182,182,182,34,256,196,252,0,183,183,183,34,255,260,234,0,184,184,184,34,195,219,218,0,185,185,185,34,197,221,240,0,186,186,186,34,222,241,221,0,187,187,187,34,195,224,219,0,188,188,188,34,206,214,205,0,189,189,189,34,217,209,216,0,190,190,190,34,213,176,207,0,191,191,191,34,223,209,220,0,192,192,192,34,220,209,217,0,193,193,193,34,214,177,205,0,194,194,194,34,213,207,200,0,195,195,195,34,231,70,204,0,196,196,196,34,204,70,68,0,197,197,197,34,234,224,246,0,198,198,198,34,231,204,223,0,199,199,199,34,105,178,0,0,133,133,133,34,264,263,261,0,133,133,133,34,122,121,272,0,200,200,200,34,270,269,191,0,201,201,201,34,275,272,274,0,202,202,202,34,269,265,189,0,203,203,203,34,266,267,269,0,204,204,204,34,267,116,265,0,205,205,205,34,267,265,269,0,206,206,206,34,295,262,280,0,207,207,207,34,295,263,275,0,208,208,208,34,277,122,268,0,209,209,209,34,278,264,276,0,210,210,210,34,281,178,262,0,211,211,211,34,283,225,91,0,212,212,212,34,284,282,151,0,213,213,213,34,284,287,282,0,214,214,214,34,271,290,291,0,215,215,215,34,271,294,278,0,216,216,216,34,271,291,294,0,215,215,215,34,287,283,282,0,217,217,217,34,286,285,283,0,218,218,218,34,299,157,230,0,219,219,219,34,301,161,300,0,220,220,220,34,301,306,162,0,221,221,221,34,304,158,156,0,222,222,222,34,300,158,304,0,223,223,223,34,305,308,300,0,224,224,224,34,305,309,308,0,225,225,225,34,307,306,301,0,226,226,226,34,304,299,303,0,227,227,227,34,304,156,299,0,228,228,228,34,305,304,303,0,229,229,229,34,123,168,277,0,230,230,230,34,310,123,169,0,231,231,231,34,284,123,277,0,232,232,232,34,311,170,313,0,233,233,233,34,313,314,310,0,234,234,234,34,278,315,316,0,235,235,235,34,278,289,317,0,236,236,236,34,296,317,306,0,237,237,237,34,306,313,320,0,238,238,238,34,285,325,225,0,239,239,239,34,326,321,225,0,240,240,240,34,322,285,321,0,241,241,241,34,323,326,327,0,242,242,242,34,323,322,325,0,243,243,243,34,328,323,325,0,244,244,244,34,331,258,254,0,245,245,245,34,331,254,330,0,246,246,246,34,330,329,344,0,247,247,247,34,281,334,335,0,248,248,248,34,340,336,337,0,249,249,249,34,281,335,338,0,250,250,250,34,340,337,339,0,251,251,251,34,298,295,271,0,252,252,252,34,298,338,295,0,253,253,253,34,342,329,340,0,254,254,254,34,336,324,285,0,255,255,255,34,343,344,338,0,256,256,256,34,334,274,324,0,257,257,257,34,295,292,293,0,258,258,258,34,289,278,288,0,259,259,259,34,296,297,317,0,260,260,260,34,320,162,306,0,261,261,261,34,296,306,307,0,262,262,262,34,0,178,6,0,263,263,263,34,182,32,30,0,264,264,264,34,91,200,62,0,265,265,265,34,267,119,118,0,266,266,266,34,267,118,116,0,267,267,267,34,147,282,91,0,268,268,268,34,151,282,147,0,269,269,269,34,156,157,299,0,270,270,270,34,173,312,169,0,271,271,271,34,320,160,162,0,272,272,272,34,24,23,21,0,273,273,273,34,24,25,27,0,274,274,274,34,126,39,40,0,275,275,275,34,56,55,52,0,276,276,276,34,323,250,326,0,277,277,277,34,77,19,21,0,278,278,278,34,87,21,82,0,279,279,279,34,138,113,104,0,280,280,280,34,140,145,108,0,281,281,281,34,151,120,122,0,282,282,282,34,149,125,105,0,283,283,283,34,205,8,174,0,284,284,284,34,176,205,174,0,285,285,285,34,242,196,193,0,286,286,286,34,196,240,192,0,287,287,287,34,240,195,192,0,288,288,288,34,194,242,193,0,289,289,289,34,252,194,199,0,290,290,290,34,216,209,180,0,291,291,291,34,195,218,187,0,292,292,292,34,197,186,221,0,293,293,293,34,288,268,272,0,294,294,294,34,271,264,290,0,295,295,295,34,277,168,124,0,296,296,296,34,278,261,315,0,297,297,297,34,281,262,334,0,298,298,298,34,340,178,336,0,299,299,299,34,295,275,292,0,300,300,300,34,326,199,279,0,301,301,301,34,0,2,1,0,302,302,302,34,7,9,6,0,303,303,303,34,29,21,19,0,304,304,304,34,21,23,22,0,305,305,305,34,20,22,0,0,306,306,306,34,21,22,20,0,307,307,307,34,31,18,28,0,308,308,308,35,39,35,36,37,0,309,309,309,309,34,34,26,32,0,310,310,310,34,25,29,26,0,311,311,311,34,0,22,5,0,312,312,312,34,5,22,20,0,313,313,313,34,8,11,7,0,314,314,314,35,43,35,38,44,0,315,315,315,315,34,36,42,37,0,316,316,316,34,41,55,37,0,317,317,317,34,44,17,43,0,318,318,318,35,36,46,47,48,0,319,319,319,319,35,39,37,54,49,0,320,320,320,320,34,50,39,49,0,321,321,321,34,52,40,50,0,322,322,322,35,18,31,30,19,0,323,323,323,323,34,53,50,51,0,324,324,324,34,35,46,36,0,325,325,325,34,38,4,3,0,326,326,326,35,59,61,10,65,0,327,327,327,327,34,35,39,38,0,328,328,328,34,49,54,50,0,329,329,329,34,54,51,50,0,330,330,330,34,57,133,42,0,331,331,331,34,58,57,36,0,332,332,332,34,59,60,61,0,333,333,333,34,9,62,10,0,334,334,334,34,7,63,9,0,335,335,335,34,11,67,7,0,336,336,336,34,64,65,10,0,337,337,337,34,68,65,66,0,338,338,338,35,73,74,75,18,0,339,339,339,339,34,67,10,63,0,340,340,340,34,45,72,71,0,341,341,341,34,71,72,17,0,342,342,342,34,79,74,73,0,343,343,343,35,71,72,78,77,0,344,344,344,344,34,79,16,76,0,345,345,345,34,73,74,16,0,346,346,346,35,73,18,19,77,0,347,347,347,347,34,77,74,73,0,348,348,348,35,75,78,84,88,0,349,349,349,349,34,45,17,72,0,350,350,350,34,79,76,74,0,343,343,343,34,77,76,74,0,348,348,348,34,74,76,16,0,346,346,346,34,80,79,60,0,351,351,351,34,84,78,87,0,352,352,352,35,83,82,87,78,0,353,353,353,353,35,84,81,23,85,0,354,354,354,354,35,89,18,75,90,0,355,355,355,355,35,89,90,62,28,0,356,356,356,356,35,71,82,83,72,0,357,357,357,357,34,28,18,89,0,358,358,358,34,89,90,15,0,359,359,359,34,90,10,15,0,360,360,360,34,80,65,92,0,361,361,361,35,71,77,87,82,0,362,362,362,362,35,94,48,92,93,0,363,363,363,363,34,15,10,79,0,364,364,364,34,79,45,16,0,365,365,365,35,92,65,69,93,0,366,366,366,366,34,94,95,96,0,367,367,367,35,93,97,95,94,0,368,368,368,368,34,97,93,69,0,369,369,369,34,100,95,97,0,370,370,370,34,98,97,70,0,371,371,371,34,103,102,101,0,372,372,372,35,17,44,5,81,0,373,373,373,373,34,102,154,95,0,374,374,374,34,100,102,95,0,375,375,375,35,45,79,92,48,0,376,376,376,376,34,86,52,50,0,377,377,377,34,86,53,51,0,378,378,378,34,10,90,89,0,379,379,379,34,79,10,61,0,380,380,380,34,60,79,61,0,381,381,381,34,48,58,36,0,382,382,382,35,0,1,104,105,0,122,122,122,122,35,114,117,119,121,0,383,383,383,383,34,109,105,108,0,263,263,263,34,107,108,104,0,2,2,2,34,104,108,105,0,122,122,122,34,112,85,24,0,384,384,384,34,2,111,106,0,385,385,385,34,27,117,24,0,386,386,386,34,104,113,107,0,387,387,387,34,114,112,117,0,388,388,388,34,108,145,109,0,389,389,389,34,115,27,26,0,390,390,390,34,116,118,115,0,391,391,391,34,122,120,121,0,392,392,392,35,141,140,120,148,0,393,393,393,393,34,117,112,24,0,394,394,394,34,119,117,118,0,395,395,395,34,115,26,33,0,396,396,396,34,40,127,126,0,397,397,397,34,129,130,127,0,398,398,398,34,41,129,127,0,399,399,399,34,130,111,127,0,400,400,400,34,126,111,2,0,401,401,401,34,131,130,128,0,402,402,402,34,40,55,41,0,403,403,403,34,85,136,135,0,404,404,404,34,139,138,106,0,405,405,405,35,139,138,112,136,0,406,406,406,406,35,112,140,141,136,0,407,407,407,407,34,141,140,113,0,408,408,408,35,120,149,150,148,0,409,409,409,409,34,120,140,112,0,410,410,410,34,137,139,106,0,411,411,411,34,142,141,113,0,408,408,408,34,137,144,113,0,412,412,412,34,143,145,113,0,413,413,413,34,144,146,145,0,414,414,414,34,163,145,143,0,415,415,415,34,136,147,135,0,416,416,416,35,96,95,154,153,0,417,417,417,417,34,151,149,120,0,418,418,418,34,150,149,145,0,419,419,419,34,125,150,145,0,420,420,420,34,152,125,145,0,421,421,421,34,112,138,85,0,422,422,422,34,134,153,137,0,423,423,423,34,137,131,134,0,424,424,424,35,164,125,152,170,0,425,425,425,425,34,146,160,152,0,426,426,426,34,162,160,159,0,427,427,427,34,159,146,155,0,428,428,428,34,155,137,153,0,429,429,429,34,158,159,154,0,430,430,430,34,171,165,164,0,431,431,431,34,166,124,125,0,432,432,432,34,124,168,167,0,433,433,433,34,168,284,167,0,434,434,434,34,169,168,110,0,435,435,435,34,171,170,166,0,436,436,436,34,171,166,165,0,437,437,437,34,170,311,172,0,438,438,438,34,170,172,110,0,439,439,439,34,170,167,166,0,440,440,440,34,131,111,130,0,441,441,441,34,143,144,132,0,442,442,442,34,163,143,132,0,443,443,443,34,167,284,151,0,444,444,444,34,166,167,151,0,445,445,445,35,30,31,183,182,0,446,446,446,446,34,133,128,41,0,447,447,447,34,146,152,145,0,448,448,448,34,146,144,137,0,449,449,449,34,7,174,8,0,263,263,263,34,175,176,174,0,450,450,450,34,175,209,176,0,451,451,451,34,7,178,174,0,263,263,263,34,178,179,174,0,122,122,122,34,178,192,179,0,452,452,452,34,28,177,31,0,453,453,453,34,182,181,32,0,454,454,454,34,181,34,32,0,455,455,455,34,183,31,177,0,456,456,456,35,185,182,183,186,0,457,457,457,457,35,201,202,203,68,0,458,458,458,458,34,190,269,185,0,459,459,459,34,185,184,181,0,460,460,460,34,193,196,192,0,461,461,461,34,192,195,179,0,462,462,462,34,174,180,175,0,463,463,463,34,180,209,175,0,464,464,464,34,201,11,202,0,465,465,465,35,177,200,207,206,0,466,466,466,466,34,208,204,209,0,467,467,467,34,211,210,209,0,468,468,468,34,211,204,208,0,469,469,469,34,210,211,208,0,470,470,470,34,206,205,177,0,471,471,471,35,8,207,204,203,0,472,472,472,472,35,204,207,176,209,0,473,473,473,473,35,221,215,212,222,0,474,474,474,474,34,8,203,11,0,475,475,475,34,219,218,215,0,476,476,476,35,214,176,217,216,0,477,477,477,477,35,220,176,213,215,0,478,478,478,478,35,99,227,228,100,0,479,479,479,479,34,215,221,219,0,480,480,480,34,220,217,176,0,481,481,481,34,70,226,98,0,482,482,482,34,227,98,226,0,483,483,483,34,231,226,70,0,484,484,484,35,223,224,232,231,0,485,485,485,485,34,232,233,227,0,486,486,486,35,232,224,235,233,0,487,487,487,487,35,197,240,241,222,0,488,488,488,488,34,237,233,235,0,489,489,489,34,237,236,233,0,490,490,490,34,238,229,228,0,491,491,491,34,232,227,226,0,492,492,492,34,233,228,227,0,493,493,493,34,236,228,233,0,494,494,494,35,197,222,243,242,0,495,495,495,495,35,222,244,245,243,0,496,496,496,496,35,244,222,225,249,0,497,497,497,497,34,195,196,239,0,498,498,498,34,247,234,246,0,499,499,499,34,247,239,196,0,500,500,500,34,244,249,198,0,501,501,501,35,198,251,253,199,0,502,502,502,502,35,225,198,199,250,0,503,503,503,503,35,253,251,225,250,0,504,504,504,504,35,249,252,253,251,0,505,505,505,505,34,249,251,198,0,506,506,506,34,225,251,249,0,507,507,507,34,253,252,199,0,508,508,508,35,248,256,254,259,0,509,509,509,509,34,248,257,256,0,510,510,510,35,198,242,243,244,0,511,511,511,511,34,257,258,256,0,512,512,512,34,257,248,259,0,513,513,513,35,266,269,270,272,0,514,514,514,514,34,252,196,194,0,515,515,515,34,255,247,196,0,516,516,516,34,254,256,252,0,517,517,517,34,260,235,234,0,518,518,518,34,241,240,221,0,519,519,519,34,195,246,224,0,520,520,520,34,260,237,235,0,521,521,521,34,176,214,206,0,522,522,522,34,223,211,209,0,523,523,523,34,223,204,211,0,524,524,524,34,247,246,239,0,525,525,525,34,247,255,234,0,526,526,526,34,105,261,178,0,122,122,122,34,261,263,262,0,122,122,122,34,261,262,178,0,122,122,122,34,267,266,119,0,527,527,527,34,268,122,272,0,528,528,528,34,266,121,119,0,529,529,529,34,266,272,121,0,530,530,530,34,269,189,188,0,531,531,531,34,273,274,272,0,532,532,532,34,273,272,270,0,533,533,533,34,271,275,263,0,534,534,534,35,290,288,286,291,0,535,535,535,535,34,123,261,110,0,536,536,536,34,310,261,123,0,537,537,537,34,278,276,261,0,538,538,538,34,178,279,194,0,2,2,2,34,197,273,191,0,539,539,539,34,324,273,197,0,540,540,540,34,340,279,178,0,541,541,541,34,263,280,262,0,122,122,122,34,273,270,191,0,542,542,542,34,295,280,263,0,543,543,543,34,261,276,264,0,2,2,2,34,277,124,122,0,544,544,544,34,271,263,264,0,545,545,545,34,282,283,91,0,546,546,546,34,283,285,225,0,547,547,547,34,286,274,285,0,548,548,548,35,286,288,292,293,0,549,549,549,549,34,271,293,292,0,550,550,550,35,286,287,289,294,0,551,551,551,551,34,290,291,288,0,552,552,552,35,289,288,291,294,0,553,553,553,553,34,274,293,292,0,554,554,554,34,286,293,274,0,555,555,555,34,287,286,283,0,556,556,556,34,286,294,291,0,557,557,557,34,271,295,293,0,558,558,558,35,278,317,319,345,0,559,559,559,559,34,299,230,229,0,560,560,560,34,301,162,161,0,561,561,561,34,300,161,158,0,562,562,562,34,303,238,236,0,563,563,563,34,302,303,236,0,564,564,564,34,307,301,308,0,565,565,565,34,338,308,309,0,566,566,566,34,303,299,229,0,567,567,567,34,300,308,301,0,568,568,568,34,309,305,302,0,569,569,569,34,304,305,300,0,570,570,570,34,305,303,302,0,571,571,571,34,169,123,284,0,572,572,572,34,169,284,168,0,573,573,573,34,312,173,172,0,574,574,574,34,311,310,169,0,575,575,575,34,312,311,169,0,576,576,576,34,312,172,311,0,577,577,577,34,313,310,311,0,578,578,578,34,310,316,315,0,579,579,579,34,310,317,289,0,580,580,580,34,310,289,316,0,581,581,581,34,310,318,317,0,582,582,582,34,318,313,317,0,583,583,583,34,318,314,313,0,584,584,584,35,284,277,316,289,0,585,585,585,585,34,315,316,277,0,586,586,586,35,326,225,322,327,0,587,587,587,587,34,306,317,313,0,588,588,588,34,314,318,310,0,589,589,589,34,321,327,322,0,590,590,590,35,322,327,328,325,0,591,591,591,591,34,322,325,285,0,592,592,592,34,225,325,322,0,593,593,593,34,328,327,321,0,594,594,594,34,323,327,322,0,595,595,595,35,334,324,333,335,0,596,596,596,596,34,332,330,258,0,597,597,597,34,329,330,254,0,598,598,598,34,331,332,258,0,599,599,599,34,332,331,330,0,600,600,600,35,333,324,336,337,0,601,601,601,601,34,281,337,336,0,602,602,602,35,281,341,342,340,0,603,603,603,603,34,281,340,339,0,604,604,604,34,295,335,334,0,605,605,605,34,281,339,337,0,606,606,606,34,337,339,333,0,607,607,607,34,295,338,335,0,608,608,608,34,341,281,338,0,609,609,609,34,341,344,329,0,610,610,610,34,341,338,344,0,611,611,611,34,342,341,329,0,612,612,612,35,333,285,274,335,0,613,613,613,613,34,285,337,336,0,614,614,614,34,333,339,285,0,615,615,615,34,285,339,337,0,616,616,616,34,340,323,328,0,617,617,617,34,340,329,254,0,618,618,618,34,340,254,323,0,619,619,619,34,345,319,298,0,620,620,620,34,334,335,274,0,621,621,621,35,302,343,338,309,0,622,622,622,622,34,338,297,308,0,623,623,623,35,315,268,288,316,0,624,624,624,624,35,297,296,307,308,0,625,625,625,625,34,278,316,288,0,626,626,626,34,278,291,290,0,627,627,627,34,278,294,291,0,627,627,627,34,278,345,271,0,628,628,628,34,319,317,297,0,629,629,629,34,315,277,268,0,630,630,630,34,284,289,287,0,631,631,631,34,345,298,271,0,632,632,632,35,34,184,265,116,0,633,633,633,633,34,320,313,170,0,634,634,634,34,338,298,297,0,635,635,635,34,298,319,297,0,636,636,636,34,6,178,7,0,263,263,263,34,11,68,67,0,637,637,637,34,229,103,101,0,638,638,638,34,230,157,103,0,639,639,639,34,229,230,103,0,640,640,640,34,68,70,69,0,641,641,641,34,110,261,105,0,2,2,2,34,4,2,5,0,642,642,642,35,255,344,343,260,0,643,643,643,643,34,189,265,184,0,644,644,644,34,39,126,4,0,645,645,645,34,133,41,42,0,646,646,646,34,102,156,154,0,647,647,647,34,157,156,102,0,648,648,648,34,225,321,198,0,649,649,649,34,326,250,199,0,650,650,650,34,323,254,250,0,651,651,651,34,238,303,229,0,652,652,652,34,302,236,237,0,653,653,653,35,12,15,79,73,0,654,654,654,654,34,343,237,260,0,655,655,655,34,330,344,255,0,656,656,656,34,330,255,258,0,657,657,657,34,343,302,237,0,658,658,658,34,5,44,3,0,659,659,659,34,45,71,14,0,660,660,660,34,14,71,17,0,661,661,661,35,20,81,84,21,0,662,662,662,662,34,12,73,16,0,663,663,663,34,17,81,20,0,664,664,664,34,84,82,21,0,665,665,665,35,20,22,23,81,0,666,666,666,666,35,109,145,149,105,0,667,667,667,667,34,87,77,21,0,668,668,668,34,6,89,15,0,669,669,669,34,10,89,6,0,670,670,670,34,20,81,5,0,671,671,671,34,24,85,23,0,672,672,672,34,138,104,106,0,673,673,673,34,114,120,112,0,674,674,674,34,140,108,113,0,675,675,675,35,180,187,218,223,0,676,676,676,676,34,168,123,110,0,677,677,677,34,200,177,9,0,678,678,678,34,214,215,183,0,679,679,679,35,183,215,218,187,0,680,680,680,680,34,180,223,216,0,681,681,681,35,186,187,218,221,0,682,682,682,682,35,288,272,275,292,0,683,683,683,683,34,271,292,275,0,550,550,550,35,33,34,116,115,0,684,684,684,684,34,274,292,275,0,685,685,685,34,310,315,261,0,686,686,686,34,321,326,279,0,687,687,687,34,321,285,324,0,688,688,688,34,328,321,279,0,689,689,689,34,281,336,178,0,690,690,690,34,295,334,262,0,691,691,691,34,340,328,279,0,692,692,692,34,278,290,264,0,693,693,693,34,273,324,274,0,694,694,694,34,198,321,324,0,695,695,695],\n    "uvs":[],\n    "normals":[-0.968318,-0.0559313,-0.243377,-0.201035,-0.979536,-0.00972412,0,-1,-0,-0.988954,-0.00866246,0.147967,-0.999507,0.00148658,0.0313773,-0.998214,-0.0201347,-0.0562395,0.473834,0.879975,-0.0335463,0.873909,0.486086,-0.00162593,-0.989206,0.0325035,-0.142879,0.502904,0.489662,-0.712263,0.486399,0.55831,-0.672091,0.620165,0.782497,-0.0556258,0.827991,0.503685,-0.24644,0.674632,0.143244,-0.724122,-0.239928,-0.0194391,0.970596,-0.107422,0.00767901,0.994184,-0.965398,-0.222501,-0.136014,-0.957783,0.0485248,0.283369,-0.029921,-0.342392,0.93908,0.0990213,0.123851,0.987348,-0.105023,0.982156,0.156012,0.0318299,-0.464956,-0.884761,0.0423372,-0.996175,0.0764426,0.022066,0.133369,0.990821,-0.460375,-0.0954091,0.882583,-0.934356,0.213967,-0.284952,0.00308375,0.996254,0.0864216,0.0739165,-0.00036051,-0.997264,0.529983,-0.26169,0.80662,-0.185306,-0.932663,0.309517,-0.183664,0.84747,0.498058,0.758569,-0.15676,0.632455,-0.90524,0.0265657,0.424069,-0.419731,-0.194903,0.886475,0.35003,-0.519504,0.779483,0.0425706,-0.999083,0.00459975,-0.464815,-0.702652,0.538728,-0.106978,-0,-0.994261,0.0260766,0.138852,0.98997,0.0192167,-0.98387,-0.17785,0.203658,-0.978993,0.00982628,0.146961,-0.983486,-0.105635,0.0099033,-0.999885,0.0114436,0.167792,-0.976922,0.132174,-0.984472,-0.139644,-0.106372,-0.675107,0.449509,0.584955,0.0508915,0.997884,0.0404796,-0.963056,0.259419,-0.0722784,-0.206913,0.801939,0.560429,-0.464382,0.608745,0.643257,-0.630973,0.659796,0.408097,-0.284269,0.957613,0.0465678,-0.637272,0.321149,0.700534,-0.480053,0.63609,0.604101,0.0915732,-0.522829,-0.847505,-0.0225087,-0.977802,0.208317,-0.16319,-0.200098,-0.96609,-0.106061,-0.158876,0.981585,0.909189,0.369502,-0.191948,-0.131638,-0.517344,0.845593,-0.192894,0.981218,0.00154646,-0.452494,0.882212,-0.130198,-0.990526,0.136524,-0.0147949,-0.42081,0.147849,0.895019,-0.00285365,0.0844887,0.99642,-0.949241,-0.0143115,-0.314225,0.107413,0.0148524,-0.994103,0.584334,0.674168,0.451721,0.426445,0.871792,0.241087,0.272071,0.438307,0.856659,-0.381619,0.0436491,-0.923289,-0.0676472,-0.00296806,-0.997705,-0.799263,0.549011,-0.24447,0.0578285,-0.506786,-0.86013,0.00845493,-0.819379,-0.57319,-0.751388,0.556073,-0.355247,-0.953336,-0.0191349,-0.301306,-0.0824096,0.176478,0.980849,0.0412671,0.561419,-0.826502,-0.0701157,0.837495,-0.541929,-0.981311,0,-0.192429,-0.879701,0,-0.475527,-0.464168,-0.157368,-0.871655,-0.364599,-0.721188,-0.589029,-0.982214,0.00321638,-0.187735,-0.879701,0,-0.475527,-0.291557,0,0.956554,0.999993,0,0.00384018,-0.686053,0.0330904,-0.726799,-0.875998,-0.233041,0.422279,0.450729,0.892425,0.0204904,0.080313,-0.995705,-0.0460676,0.0894621,-0.993662,-0.0680583,0.0741825,-0.996116,-0.0474307,-0.483724,0,0.875221,0.315772,-0.869586,0.379615,0.207744,-0.944139,-0.25582,0.243998,-0.969696,-0.0124411,0.994213,0,0.107425,-0.196728,-0.906301,-0.374054,-0.994213,2.94539e-08,-0.107425,-0.912811,0.391309,-0.116845,-0.581447,0.612582,-0.535408,-0.24388,0.363852,-0.898963,-0.549956,0.452708,-0.701858,-0.407638,0.534266,-0.740535,-0.229896,0.523814,-0.820224,-0.428151,0.445151,-0.786465,-0.347539,0.713461,-0.608433,-0.794158,-0.0274374,0.607091,-0.234498,0.892794,-0.384615,-0.927452,-0.34702,-0.13932,-0.420243,-0.906415,0.0425234,-0.895082,-0.357153,0.266966,-0.58469,-0.0345965,0.810519,-0.00749476,-0.00768622,-0.999942,-0.207422,0.391888,-0.896326,-0.26987,0.962819,-0.0122685,-0.994213,0,-0.107425,0.938236,0.270334,0.215947,0.938212,0.301541,0.1698,-0.331124,0.351504,-0.875672,0,-1,0,-0.622367,0.441684,-0.6462,0.642265,0.0240283,0.766106,-0.153437,0.929867,-0.334373,-0.680377,0.571153,-0.459206,-0.381445,0.921415,-0.074121,-0.550768,0.830468,-0.0835357,-0.313287,0.69363,-0.648636,-0.403486,0.900112,-0.16431,-0.39906,0.903368,-0.157091,0.0738031,0.91339,-0.400339,0,-1,-0,-0.597713,0.661343,-0.453172,-0.961235,0.240805,-0.134311,-0.481204,0.870424,-0.103949,0.994213,2.28882e-08,0.107425,0.103273,0.00698418,0.994629,0.148398,0.984715,-0.0911847,0.860632,-0.504459,0.0695282,-0.0431168,0.585731,0.809358,-0.629978,-0.684487,-0.366885,0.994213,0,0.107425,-0.0336872,0,0.999432,0.994213,0,0.107425,-0.102516,-0.891007,0.442264,-0.0252235,-0.999593,0.0133122,0.819962,-0.269096,0.505222,-0.0102778,-0.99993,0.00593704,-0.999413,0,0.0342574,0.841209,0,0.54071,-0.107426,0,0.994213,-0.0716302,0.745241,0.662936,-0.994213,0,-0.107425,-0.999413,0,0.0342574,0.841209,-4.57349e-08,0.54071,-0.299885,-0.616207,0.728257,-0.00502112,-0.999938,0.00997911,-0.087611,0.337241,0.937333,0.401159,0.498527,0.768468,0.791975,0.232917,0.56438,0.623055,0.647481,0.438829,0.0523565,0.967418,0.24771,-0.0552187,0.661672,0.747757,0.981935,0,-0.189216,0.174372,-0,0.98468,-0.107426,0,0.994213,-0.934676,-0.0524408,0.351611,0.994213,0,0.107424,0.981935,0,-0.189216,0.599147,-0.177934,0.780617,-0.721631,-0.143101,0.677326,0.982356,-0.165185,-0.0876932,0.692754,-0.717279,0.0748519,0.561805,-0.81448,-0.144905,-0.107425,1.07289e-07,0.994213,0.953529,0.249668,0.168667,0.924789,0.213772,-0.31475,0.783636,-0.220527,-0.580761,-0.571009,0.8024,-0.1735,-0.963,0,0.2695,0.727657,0.278914,0.626676,0.893137,-0.0671597,0.444742,0.649136,0.370416,0.66439,0.136914,-0,0.990583,0.567947,0.749293,-0.340582,0.391639,-0.919145,0.0423168,0.136914,-8.44194e-08,0.990583,-0.841209,0,-0.54071,0.97859,0,0.20582,-0.317016,-0.94521,0.0779621,0.917217,-0.0953463,0.386809,0.97859,0,0.20582,-0.696764,0.560302,-0.447864,0.476341,-0.871422,-0.117143,0.0880192,0.470286,0.878113,-0.00890443,0.332869,0.942931,0.675071,0.532338,0.510779,0.322337,0.381537,0.86633,-0.166502,0.750957,0.639016,-0.872089,0.249058,0.421225,-0.199314,0.651784,-0.731745,-0.347401,0.903013,0.252743,-0.338041,0.825179,0.452558,0.00590477,0.900336,0.435156,-0.309633,0.869008,0.385943,0.982829,0.0106881,-0.184211,-0.0349218,0.022384,-0.999139,-0.0472569,0.869355,0.491923,0.994197,0.00566029,0.107423,0.876083,-0.0346426,-0.480915,-0.00891095,-0.999958,-0.00189774,0.0667799,-0.997636,-0.016193,0.0205348,-0.999589,-0.0200204,0.0510675,0,-0.998695,0.813173,-0.479744,-0.329536,-0.372587,0.0691851,-0.925415,0.0191504,-0.999762,-0.0104244,0.0735766,0.986443,-0.146689,0.0452541,0.747374,-0.662861,0.0865814,0.313455,-0.945648,0.0497179,0.545088,-0.836903,-0.0287387,0.913813,-0.405118,0.47555,0.541635,-0.69317,0.768557,0.492531,-0.408329,0.346697,0.433275,-0.83191,0.241362,0.968096,-0.0673473,0.0555869,0.950563,-0.305516,0.762419,0.620724,-0.182806,0.0902772,0.537746,0.838259,0.107425,-1.01376e-07,-0.994213,-0.829094,-0.559033,0.00924176,0.111035,0.993206,-0.0348162,-0.91473,-0.395727,0.08167,0.129898,0,-0.991527,-0.0814297,-0.101371,-0.991511,0.151035,0.150476,-0.977008,0.268954,0.235816,-0.933838,-0.0686618,-0.993927,-0.0859933,0.0167828,0.635144,-0.772211,-0.93215,-0.359486,-0.0431951,0.988443,0.0747667,0.131869,0.725316,-0.683941,0.0783707,-0.0960838,-0.447214,0.889251,0.388121,0.277367,0.87888,-0.26794,-0.574028,-0.773757,0.71227,0.53897,-0.449648,0.0652559,0,-0.997869,0.0235155,0,-0.999723,0.0315644,0.0120738,-0.999429,0.0235162,-2.86023e-07,-0.999723,0.880578,-0.303164,-0.364245,0.90475,-0.0927241,0.415728,0.588209,-0.0622238,0.806311,-0.947013,0.054092,-0.316608,0.952135,0.218241,-0.214031,0.428858,0.868328,0.249173,0.107425,0,-0.994213,0.120005,-0.520999,-0.845079,0.791576,-0.149079,-0.592606,0.247487,0.786569,-0.565738,0.376555,0.364241,-0.851784,-0,-1,-0,0.0882154,0.742638,-0.663858,6.75519e-05,-0.999969,0.00791179,-0.0175917,0.558245,0.82949,-0.017,0.92639,0.376182,0.336541,-0.938367,-0.0787843,0.478184,-0.807254,-0.345949,0.0726119,0.935061,-0.346972,-0.235201,-0.766418,-0.597733,-0.204875,0.650629,-0.731238,0.632011,0.772064,-0.0669324,0.754116,0.653304,0.0670934,-0.659592,-0.742854,0.114483,-0.867394,-0.204983,0.453443,0.985554,0.0888296,0.144195,0.855553,0.400437,-0.328145,0.0791889,0.675724,-0.732889,-0.981311,-6.61304e-09,-0.192429,-0.879701,-1.86147e-08,-0.475527,0.334385,-0.0213974,0.942194,-0.994213,1.20289e-08,-0.107425,0.994213,4.29153e-09,0.107425,-0.0336873,3.81253e-08,0.999433,0.981936,-7.35011e-09,-0.189216,0.149186,0.00761456,0.98878,0.998286,0.0295281,-0.0505356,-0.107425,3.79262e-08,0.994213,0.994213,2.48296e-08,0.107425,0.996787,0.0336769,0.0726753,0.136914,-0,0.990583,-0.378572,0.385211,-0.841603,-0.849258,0.34814,0.396938,0.0510676,-3.80972e-08,-0.998695,-0.0773676,0.345856,0.935093,0.100246,0.0212507,-0.994736,0.0681974,-0.000791639,-0.997672,0.0235156,-3.81364e-08,-0.999723,0.107425,0,-0.994213,0.994213,-4.73688e-08,0.107425,-0.999354,-0.0155344,-0.0324056,-0.660595,0.04876,0.749157,0.854597,0.402828,-0.32771,-0.175868,0.938923,0.295794,-0.993767,0.0299689,-0.107376,0.0567196,0.998371,0.00612855,0.389726,0.425064,-0.816966,-0.998958,-0.045577,-0.00256485,0.349252,0.935303,-0.056854,0.451194,0.869051,-0.202912,0.363457,-0.0138344,0.931508,-0.0726415,-0.997327,-0.0078489,-0.131689,-0.00235787,0.991288,-0.108095,-0.825401,0.554101,-0.994569,-0.0942258,-0.0442037,0.00135405,-0.999805,0.0197231,0.119806,-0.845363,0.520584,-0.0228576,0.462032,0.886569,0.335008,-0.211082,-0.918267,-0.253161,0.809907,-0.529113,-0.0795751,0.989895,0.117367,0.491744,0.733593,-0.469073,-0.279434,0.933445,0.224937,-0.78773,-0.0196587,0.615708,-0.782895,-0.62155,-0.0274091,0.323971,-0.0755127,0.943048,-0.997377,-0.000251384,0.0723838,-0.921447,0.3418,-0.184686,0.233387,0.271245,-0.933786,-0.883247,0.455866,-0.109822,-0.0834692,0.829896,0.551639,-0.799495,-0.123125,0.587918,0.91034,0.375183,-0.174696,-0.951078,-0.0104866,-0.308772,-0.0331562,-0.024005,0.999162,-0.962169,0.242657,0.123887,-0.107262,0.879437,0.463773,-0.0171829,-0.108378,-0.993961,-0.524155,-0.293526,0.79944,-0.9999,0,-0.0141555,-0.23075,0,0.973013,-0.972956,0,-0.230991,0.52792,-0.662729,-0.531122,-0.446025,-0.243862,0.861158,-0.174487,0,0.984659,0.72113,0.678281,0.141088,0.994213,-0,0.107425,0.0404468,-0.977597,0.206561,-0.305025,-0.325181,0.895107,-0.350993,0.242033,-0.904557,0.948984,0.218592,-0.227258,-0.396936,-0.301511,0.86691,0.249673,-0.966624,0.0574589,0.934663,0.107124,-0.339013,0.311654,0.285657,-0.90624,0.994213,0,0.107425,0.250984,0.674003,-0.694786,-0.107424,0,0.994213,0.895284,-0.117035,0.429847,-0.711348,-0.0230955,0.702461,-0.282698,0.892608,-0.351189,-0.793245,0.462903,0.39558,-0.568305,0.0141168,0.822697,-0.926219,0.308218,0.217073,-0.6478,0.313466,0.69433,-0.553196,0.421701,0.71843,-0.655922,0.578178,0.485259,-0.496434,0.684433,0.533952,-0.538203,0.621119,0.569692,-0.470318,0.384587,0.794288,-0.278313,0.957544,0.0751789,0.152258,-0.754266,0.638671,-0.824944,0.559721,-0.0786135,-0.523802,0.745879,0.411456,-0.877282,0.222418,0.425331,-0.212029,0.9724,-0.0973745,-0,1,0,-0.999976,0,-0.00691055,-0.0728351,-0.968237,-0.23919,-0.79391,-0.608033,-0.00196327,-0.0370888,0.62678,0.778313,0.327349,0.731343,0.598314,0.859904,0.35193,0.369743,-0.82165,0.0438888,-0.5683,0.69289,0.560095,0.454088,-0.994181,0.0080039,-0.107422,0.625487,0.61181,0.484205,-0.994065,0.0172666,-0.107409,0.493605,0.86864,-0.042644,0.151986,0.955692,0.252099,0.426981,0.579313,0.694323,-0.208838,-0.0875197,0.974026,0.66728,0.625091,0.404968,0.39156,0.363166,0.845453,0.835502,0.5198,0.178167,-0.886836,-0.394911,-0.239932,-0.772007,0.0705799,-0.631684,-0.935035,0.0255807,-0.353633,0.0919289,-0.122524,-0.988199,-0.010886,-0.753629,-0.65721,-0.0678946,0.843576,-0.5327,-0.0150802,0.0961955,0.995248,0.286609,-0.946464,-0.148531,0.107425,0,-0.994213,0.309497,0.243181,0.919279,0.997707,-0.0498092,0.0458158,-0.204271,0,-0.978914,0.852807,0.285584,0.437222,0.187811,0.916194,0.354,0.194792,-0.00551871,-0.980829,-0.855758,-0.239571,0.458567,0.43944,-0.699044,-0.564118,-0.557636,0.360715,-0.747614,0.325726,-0.400708,-0.85635,0.0823023,-0.993708,-0.0759623,-0.591931,0.80353,-0.0629123,-0.835047,0.504121,0.220359,0.0192331,0,-0.999815,-0.434378,-0.178109,-0.882946,-0.207112,0.187894,-0.960104,0.577966,0.81579,0.021028,-0.934413,0.300887,-0.190628,-0.592867,0.756906,-0.274959,-0.871946,0.489168,0.0206108,-0.422601,0.443991,-0.790114,-0.195689,0.634902,-0.747399,-0.532029,0.647476,-0.545637,-0.407007,0.478322,-0.778173,-0.244896,0.724743,-0.644029,-0.399526,0.456645,-0.794893,-0.377826,-0.154735,-0.912855,0.171453,0.0104655,0.985137,-0.0935649,-0.491322,0.865938,0.590597,-0.0564886,-0.804987,0.977638,-0.171634,-0.121515,0.479415,-0.553641,-0.680914,-0.122249,0.534972,-0.835979,-0.57851,0.0124986,-0.815579,0.217153,0.00777268,-0.976107,0.148768,-0.0699817,-0.986393,-0.469651,-0.576006,0.669063,-0.408712,-0.201459,-0.890151,0.0174377,-0.986737,-0.161385,-0.691656,-0.522271,-0.498843,0.0323567,0.520194,-0.853435,-0.775962,0.168857,-0.607758,-0.482276,0.371618,-0.79329,-0.602224,0.400549,-0.69057,-0.107424,0.00444445,0.994203,-0.187535,-0.000425917,0.982258,0,-1,0,0.230899,0.40976,-0.882487,0.162635,0.530567,-0.831895,0.102986,0.890841,-0.442488,-0.0443162,0.968539,-0.244883,-0.457142,0.486739,-0.744383,-0.154869,0.814513,0.559092,-0.413449,0.908181,-0.0653279,-0.279044,0.865076,-0.416867,0.818545,-0.025504,0.573876,0.634045,-0.0108075,0.773221,-0,-1,-0,0.838711,0.00469662,0.544557,0.39635,-0.821447,0.410038,0.194478,0.154253,-0.968702,-0.855553,-0.45632,-0.244544,0.906644,-0.239589,-0.347265,0.308384,0.704966,0.638688,0.128365,0.831765,0.540083,0.728588,0,-0.684952,0.770778,0.0129712,0.636972,-0.083824,-0.0224968,0.996227,-0.138149,-0.96701,-0.214025,-0.0464017,0.0059029,0.998905,0.107425,0,-0.994213,-0.14044,0.358176,-0.923031,-0.138042,-0.938273,0.317158,-0.0320188,0.964006,0.263947,0.0515862,-0.942376,0.330555,-0.596653,0,-0.8025,-0.171087,0.613757,0.770734,-0.0948689,0.827314,0.553671,0.0553039,0.166466,0.984495,0.477005,0.473597,0.740386,0.314478,0.641122,0.700047,0.489385,0.494242,0.718489,-0.994213,-6.86645e-08,-0.107425,0.548797,0.70257,0.453009,0.503052,0.752365,0.425306,0.0369207,0.965227,0.258791,0.422798,0.726902,0.541161,0.315568,0.654804,0.686767,0.606189,0.676117,0.418809,0.419668,0.0842509,-0.903759,0.688187,-0.468522,-0.553972,0.171392,-0.977353,0.124121,0.277285,-0.940958,0.194193,0.418588,0.663397,0.620233,0.987052,-0.157884,-0.0282879,-0.876476,0.163237,-0.452929,-0.378,0.107798,-0.919509,-0.29017,0.237062,0.927148,0.494477,-0.422047,-0.759848,-0.267377,0.904534,-0.332156,-0.994213,6.29425e-08,-0.107425,0.0201489,-0.999795,0.00217709,0.994213,-4.44174e-07,0.107425,-0.335639,-0.894957,0.293935,-0.0943125,0.801884,0.58999,-0.987395,-0.156281,-0.0250306,-0.311806,0.944201,0.106123,0.998429,0.0485291,-0.0280023,-0.788834,0.222919,0.572755,0.931095,0.0313562,0.363427,0.983012,-0.149349,-0.106684,0.991189,0.0202799,0.130896,0.778092,0.227875,0.58536,0.345349,0,-0.938474,-0.527874,-0.17668,0.830742,0.556629,0.697596,0.451136,-0.328868,0.533846,-0.779008,0.958441,-0.260765,-0.115726,0.27742,0.65397,0.703819,0.305349,0.821728,0.48117,0.509843,0.699098,0.50132,0.00168492,0.627351,0.778735,-0.019469,0.970309,0.241083,0.0012646,0.811417,0.584467,-0.146911,0.0850987,0.985482,-0.743263,0.647774,-0.167182,-0.636695,0.292825,0.713353,-0.481089,0.745349,0.461529,0.9613,-0.00385915,0.275477,-0.418193,0.54206,-0.728894,0.166412,-0.030668,-0.985579,0.139772,-0.0356558,-0.989542,0.262606,0.00329529,-0.964898,-0.998725,-0.0115003,-0.0491509,-0.334967,0.939416,-0.0727713,0.107424,-0.00519997,-0.9942,-0.509143,0.76757,0.389371,0.402556,0.00337034,-0.915389,-0.0162901,0.769655,0.638252,0.649134,-0.0387019,-0.759689,-0.494011,-0.680445,-0.541246,0.0233731,-0.999431,-0.0243095,-0.742297,-0.0240509,0.66964,-0.277366,-0.338482,0.899165,0.956268,-0,0.292492,-0.320614,-0.905694,-0.277353,0.207896,0,0.978151,-0.244374,0.328162,0.912464,-0.994213,0,-0.107425,-0.0393462,-0.920044,-0.389835,-0.456478,0.238863,-0.857072,-0.909223,0,-0.41631,0.900455,-0.224607,-0.372467,-0.109828,-0.111254,-0.987705,0.999471,0.0248037,0.0210171,0.00197472,0.64981,-0.760094,0.000130035,0.962058,-0.272844,0.852063,0.523199,0.0158545,0.750958,0.65859,0.0481812,0.503143,0.781703,-0.368493,0.446874,0.802,-0.396358,0.201187,0.976532,0.0768718,0.541253,0.655253,-0.526961,0.765528,0.584033,-0.269951,0.458996,0.632477,-0.623936,0.66449,0.711119,-0.229702,-0.846239,-0.53253,-0.0170436,0.733307,-0.0116628,-0.679798,0.375474,0.906218,-0.194392,0.107425,-1.35023e-08,-0.994213,0.776897,-0.292564,0.557528,-0.165161,0.647191,-0.744221,0.399205,0.386289,-0.831514,0.99982,-0,0.0189759,0.898343,-0.147956,-0.413629,0.902962,-0.141495,-0.405757,0.751516,-0.619521,0.226755,0.564824,0.825115,0.0126033,0.168781,0.903525,-0.393898,-0.14275,-0.121339,0.982293,-0.107425,0,0.994213,-0.0743333,-0.969507,-0.233517,0.36493,0.190096,-0.911422,-0.0723953,-0.880535,-0.46842,-0.0960838,0.447214,0.889251,0,1,-0,0.496076,0.866623,0.0536012,0.0201489,-0.999795,0.0021771,0.85878,-0.503871,0.0927916,0.0960838,-0.447214,-0.889251,-0.97024,-0.185216,0.155977,0.169347,0.777909,0.605127,0.997729,-0.0433611,0.0515436,0.269352,0.0330698,0.962474,0.378459,-0.156474,-0.912296,0.297181,0.281064,0.912517,0.984287,-0,0.176578,0.351088,-0.419613,-0.837056,0.712493,-0.372594,-0.594581,0.994865,0,-0.101216,0.984287,5.05193e-08,0.176578,-0.107425,2.84447e-07,0.994213,0.998134,0.0143014,-0.0593613,-0.0666367,-0.0114443,-0.997712,0.840233,0.527891,0.123853,0.821439,0.564244,0.0828674,0.242234,0.958518,0.150219,0.782175,-0.587139,-0.208494,-0.965293,0,-0.26117,0.48089,-0.703046,-0.5239,-0.965293,-7.47215e-08,-0.26117,0.977628,0.0102325,0.21009,0.970938,0.186951,0.149427,0.987497,-0.0725043,0.139975,0.669923,0.675506,-0.308052,0.212486,0,0.977164,0.454121,0.796217,-0.399765,0.507803,0.288072,-0.811881,-0.899615,0.242631,0.363074,0.876568,0.249668,-0.411453,-0.601119,0.601749,0.525884,0.999994,-0,0.00351636,0.63603,-0.740317,0.217706,-0.333162,0.880008,-0.338511,-0.361128,0.606264,0.708541,1.53572e-07,-1,1.09997e-08,0.761563,-0.477243,0.438476,0.03945,0.999206,0.00547653,0.0665921,0.0528921,-0.996377,0.132175,0.505265,-0.852782,0.322623,0.934829,-0.148353,-0.0291407,0.184448,0.98241,0.0544716,0.965305,0.255381,-0.147981,0.987794,0.0486321,-0.200241,0.0245841,0.979438,-0.197333,0.374846,0.905842,0.187802,-0.930502,-0.314479,0.975344,0.21197,0.0614162,-0.0605891,0.99805,-0.015018,-0.902057,-0.430729,0.0276674,-0.922593,0.348118,-0.166242,-0.699062,0.707854,-0.101265,-0.394316,0.91848,-0.0301592,-0.403565,-0.888467,-0.218545,0.985564,0.0823687,0.147915,0.988494,-0.0669782,0.135623,-0.0175299,0.992267,-0.122874,0.686542,0.726812,0.0201129,-0.995591,0.0132846,0.0928542,0.689304,0.715449,0.113988,0.109925,0.993877,-0.0111496,0.962131,0.157301,0.222622,0.502741,0.864069,0.0252152,0.182521,-0.683083,0.707166,-0.9999,-5.39989e-10,-0.0141555,-0.23075,3.71175e-08,0.973013,0.107425,-4.67549e-07,-0.994213,-0.167722,0.00193176,0.985832,-0.994604,-1.48404e-08,-0.103742,0.797822,-0.00612844,0.602861,0.994213,-2.63344e-07,0.107425,-0.0592233,0.0221454,-0.997999,0.714199,-0.575322,0.398653,-0.318618,0.0286661,0.94745,-0.999808,0.00258761,-0.0193987,-0.337017,1.34682e-07,0.941499,0.674554,0.410999,0.613234,0.107425,-3.79262e-08,-0.994213,0.580031,0.19899,0.789916,-0.204272,-3.73426e-08,-0.978914,0.842074,0.000223694,0.539363,-0.315244,0.0583076,-0.947218,0.0215479,0.140107,-0.989902,-0.637158,0.432302,-0.638079,0.220381,0.069115,-0.972962,-0.107426,2.58531e-08,0.994213,-0.997312,0.03381,-0.0650082,-0.16664,0.316073,0.933986,-0.175645,0.984387,0.0114627,-0.994213,0,-0.107425,0.999663,0.00173556,0.0258891,0.568929,0.216964,-0.793251,-0.99381,-0.0210107,0.10909,0.898652,-0.0421955,0.436628,0.984287,6.7359e-09,0.176578,0.99953,0.0199298,-0.0233038,0.983478,-0.00926215,0.180793,0.999994,1.34139e-10,0.00351636,-0.438085,0.398346,0.805854,-0.74647,0.656767,-0.106962],\n    "materials":[{\n        "colorEmissive":[0,0,0],\n        "shading":"phong",\n        "opacity":1,\n        "transparent":false,\n        "visible":true,\n        "wireframe":false,\n        "blending":1,\n        "depthTest":true,\n        "depthWrite":true,\n        "doubleSided":false,\n        "DbgName":"Material.001",\n        "DbgColor":15658734,\n        "DbgIndex":0,\n        "colorDiffuse":[0.640003,0.146851,0.080037],\n        "specularCoef":50,\n        "colorSpecular":[0.5,0.5,0.5]\n    }]\n}')),e.bulletMesh=n.parse(JSON.parse('{\n    "metadata":{\n        "type":"Geometry",\n        "generator":"io_three",\n        "version":3,\n        "vertices":17,\n        "normals":30,\n        "materials":1,\n        "uvs":0,\n        "faces":30\n    },\n    "vertices":[-0.235241,-0.700735,-0.724007,0.00361788,0.523793,0.892291,-0.584116,0.361004,-0.796989,0.521546,0.523791,-0.724008,0.849739,0.523791,0.27229,-0.178166,1.06073,-0.129444,0.178166,-1.06073,0.129444,-0.00361794,-0.523793,0.892291,0.847501,-0.52379,0.279175,-0.850254,-0.671351,2.00497e-09,0.527408,-0.523791,-0.719748,1.04389,0.0535894,-1.51003e-08,0.322581,0.0535897,0.992798,-0.889814,0.356723,0.520931,-1.04389,-0.0535895,-5.15004e-09,0.322581,0.0535896,-0.992798,0.338902,0.957651,0.246226],\n    "faces":[34,6,9,0,0,0,0,0,34,0,9,2,0,1,1,1,34,8,11,12,0,2,2,2,34,7,12,13,0,3,3,3,34,0,2,15,0,4,4,4,34,10,15,11,0,5,5,5,34,1,4,16,0,6,6,6,34,13,1,5,0,7,7,7,34,2,13,5,0,8,8,8,34,3,2,5,0,9,9,9,34,4,3,16,0,10,10,10,34,16,3,5,0,11,11,11,34,5,1,16,0,12,12,12,34,11,3,4,0,13,13,13,34,11,15,3,0,14,14,14,34,15,2,3,0,15,15,15,34,14,13,2,0,16,16,16,34,13,12,1,0,17,17,17,34,12,4,1,0,18,18,18,34,12,11,4,0,19,19,19,34,10,0,15,0,20,20,20,34,2,9,14,0,21,21,21,34,14,9,13,0,22,22,22,34,9,7,13,0,23,23,23,34,7,8,12,0,24,24,24,34,8,10,11,0,25,25,25,34,6,0,10,0,26,26,26,34,6,7,9,0,27,27,27,34,8,6,10,0,28,28,28,34,6,8,7,0,29,29,29],\n    "uvs":[],\n    "normals":[-0.318502,-0.918773,-0.233265,-0.736383,-0.284171,-0.613993,0.808984,0.00902973,0.587761,-0.354287,0.0375062,0.934384,-0.257056,-0.150088,-0.954671,0.808984,0.00903123,-0.587761,0.474124,0.597115,0.647039,-0.351001,0.801728,0.483767,-0.769012,0.614418,-0.176381,-0.0574325,0.706377,-0.705502,0.639055,0.739793,-0.210512,0.398009,0.863055,-0.311008,-0.17964,0.857289,0.482477,0.823966,0.497403,-0.271424,0.809001,-0.00632849,-0.587773,-0.0167491,0.501545,-0.864969,-0.817037,0.545163,-0.187745,-0.374265,-0.0560274,0.925628,0.512757,0.497405,0.699763,0.809001,-0.00633007,0.587773,0.0972269,-0.397093,-0.912614,-0.7795,-0.244332,-0.576786,-0.847359,-0.265602,0.459824,-0.644406,-0.365217,0.671831,0.528688,-0.426444,0.733917,0.861372,-0.426444,-0.276016,0.20285,-0.86318,-0.462355,-0.363093,-0.800463,0.476888,0.639943,-0.740556,-0.205061,0.422728,-0.690607,0.586824],\n    "materials":[{\n        "colorEmissive":[0,0,0],\n        "shading":"phong",\n        "opacity":1,\n        "transparent":false,\n        "visible":true,\n        "wireframe":false,\n        "blending":1,\n        "depthTest":true,\n        "depthWrite":true,\n        "doubleSided":false,\n        "DbgName":"Material.001",\n        "DbgColor":15658734,\n        "DbgIndex":0,\n        "colorDiffuse":[0.0282623,0.352849,0.640004],\n        "specularCoef":50,\n        "colorSpecular":[0.5,0.5,0.5]\n    }]\n}'))},e}();document.addEventListener("DOMContentLoaded",function(){(new l).init()});
},{"fs":5,"./common":10,"three":11}]},{},[4])