{"dependencies":[{"name":"three","loc":{"line":13,"column":20}}],"generated":{"js":"\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nexports.__esModule = true;\nvar THREE = require(\"three\");\nvar BuildingHoverState;\n(function (BuildingHoverState) {\n    BuildingHoverState[BuildingHoverState[\"Deselected\"] = 0] = \"Deselected\";\n    BuildingHoverState[BuildingHoverState[\"Hovered\"] = 1] = \"Hovered\";\n    BuildingHoverState[BuildingHoverState[\"Selected\"] = 2] = \"Selected\";\n})(BuildingHoverState = exports.BuildingHoverState || (exports.BuildingHoverState = {}));\nvar Building = /** @class */ (function (_super) {\n    __extends(Building, _super);\n    function Building(height) {\n        var _this = this;\n        var mat = new THREE.MeshPhysicalMaterial({ color: new THREE.Color(0xeaeaea) });\n        _this = _super.call(this, new THREE.CubeGeometry(1, height, 1), mat) || this;\n        _this.position.setY(height / 2);\n        _this.state = BuildingHoverState.Deselected;\n        return _this;\n    }\n    Building.prototype.changeState = function (newState) {\n        this.state = newState;\n        this.updateColor();\n    };\n    Building.prototype.getBuildingId = function () {\n        return '{13-2321-13}';\n    };\n    Building.prototype.getBuildingConnected = function () {\n        return false;\n    };\n    Building.prototype.getBuildingBandwidth = function () {\n        return '0 kbps';\n    };\n    Building.prototype.updateColor = function () {\n        if (this.state === BuildingHoverState.Selected) {\n            this.material.color.setHex(0xabfe2d);\n        }\n        else if (this.state === BuildingHoverState.Hovered) {\n            this.material.color.setHex(0x808080);\n        }\n        else if (this.state === BuildingHoverState.Deselected)\n            this.material.color.setHex(0xeaeaea);\n    };\n    return Building;\n}(THREE.Mesh));\nexports.Building = Building;\n"},"hash":"31799eb2951e3fdc8e6733c40c122d00"}